[{"c:\\gosso\\gbc_oms\\frontend\\src\\index.js":"1","c:\\gosso\\gbc_oms\\frontend\\src\\store.js":"2","c:\\gosso\\gbc_oms\\frontend\\src\\App.js":"3","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogPage.js":"4","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\landing\\LandingPage.js":"5","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Profile\\CompanyProfile.js":"6","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\ThemeWrapper.js":"7","c:\\gosso\\gbc_oms\\frontend\\src\\it\\dashboard\\InformationTechnologyHome.js":"8","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\index.js":"9","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogHome.js":"10","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\landing\\HomePage.js":"11","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\ProfileBag.js":"12","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Profile\\Profile.js":"13","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Corporate.js":"14","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Blog.js":"15","c:\\gosso\\gbc_oms\\frontend\\src\\it\\dashboard\\dashboard-jss.js":"16","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\applicationTheme.js":"17","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\uiactions.js":"18","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\SliderWidget.js":"19","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\CounterIconsWidget.js":"20","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\DateWidget.js":"21","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\TaskWidget.js":"22","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\TimelineWidget.js":"23","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\PerformanceChartWidget.js":"24","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\WeatherWidget.js":"25","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\CalculatorWidget.js":"26","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\InformationTechnologyLayout.js":"27","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\ContactWidget.js":"28","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\index.js":"29","c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\brand.js":"30","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\admissions.js":"31","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\curriculums.js":"32","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\timelines.js":"33","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\adminattendances.js":"34","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\itmenu.js":"35","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\auth.js":"36","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\studentattendances.js":"37","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\teacherattendances.js":"38","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\ui.js":"39","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\SidebarBlog.js":"40","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\blogStyle-jss.js":"41","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\timeline.js":"42","c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\photos.js":"43","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\HeadlineCard.js":"44","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\ShowcaseCard.js":"45","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Pricing.js":"46","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Feature.js":"47","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Showcase.js":"48","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Contact.js":"49","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Banner.js":"50","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Technology.js":"51","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Header.js":"52","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Testimonials.js":"53","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Footer.js":"54","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\BlogBar.js":"55","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Decoration.js":"56","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\appStyles-jss.js":"57","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\themePaletteMode.js":"58","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\widget-jss.js":"59","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Albums.js":"60","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Favorites.js":"61","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\settings-jss.js":"62","c:\\gosso\\gbc_oms\\frontend\\src\\components\\PapperBlock\\PapperBlock.js":"63","c:\\gosso\\gbc_oms\\frontend\\src\\components\\SocialMedia\\jss\\cover-jss.js":"64","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\LayoutThumb.js":"65","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\ThemeThumbs.js":"66","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\MegaMenuThumb.js":"67","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Timeline\\api\\timelineData.js":"68","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\TopNavigationThumb.js":"69","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarBigThumb.js":"70","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarThumb.js":"71","c:\\gosso\\gbc_oms\\frontend\\src\\types\\attendanceTypes.js":"72","c:\\gosso\\gbc_oms\\frontend\\src\\utility.js":"73","c:\\gosso\\gbc_oms\\frontend\\src\\types\\uitypes.js":"74","c:\\gosso\\gbc_oms\\frontend\\src\\types\\authTypes.js":"75","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\navigationConfig.js":"76","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\index.js":"77","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\profile-jss.js":"78","c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\imgData.js":"79","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Title.js":"80","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\index.js":"81","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\landingStyle-jss.js":"82","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\darkPalette.js":"83","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\lightPalette.js":"84","c:\\gosso\\gbc_oms\\frontend\\src\\api\\palette\\colorfull.js":"85","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\GeneralCard.js":"86","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\PostCard.js":"87","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Quote\\Quote.js":"88","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\themePalette.js":"89","c:\\gosso\\gbc_oms\\frontend\\src\\components\\PapperBlock\\papperStyle-jss.js":"90","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\thumbPreview-jss.js":"91","c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\avatars.js":"92","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\helpSupport-jss.js":"93","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Qna.js":"94","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\ContactForm.js":"95","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\cardStyle-jss.js":"96","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\ResultPanel.js":"97","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\ButtonPanel.js":"98","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\SideNavMobile.js":"99","c:\\gosso\\gbc_oms\\frontend\\src\\api\\ui\\link.js":"100","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\PricingCard.js":"101","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\sidebar-jss.js":"102","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarBigLayout.js":"103","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\appStyles-jss.js":"104","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\DropMenuLayout.js":"105","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarLayout.js":"106","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\MegaMenuLayout.js":"107","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\RightSidebarLayout.js":"108","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Contact\\api\\contactData.js":"109","c:\\gosso\\gbc_oms\\frontend\\src\\api\\chart\\chartData.js":"110","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Counter\\CounterWidget.js":"111","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\About.js":"112","c:\\gosso\\gbc_oms\\frontend\\src\\components\\GuideSlider\\index.js":"113","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Connection.js":"114","c:\\gosso\\gbc_oms\\frontend\\src\\components\\SocialMedia\\Cover.js":"115","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\Sidebar.js":"116","c:\\gosso\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\BreadCrumb.js":"117","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\Header.js":"118","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\HeaderMenu.js":"119","c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\dummyContents.js":"120","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\index.js":"121","c:\\gosso\\gbc_oms\\frontend\\src\\components\\GuideSlider\\guide-jss.js":"122","c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\guideData.js":"123","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\ProfileCard.js":"124","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\index.js":"125","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Company.js":"126","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\sidebar-jss.js":"127","c:\\gosso\\gbc_oms\\frontend\\src\\api\\apps\\connectionData.js":"128","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavigation.js":"129","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\UserMenu.js":"130","c:\\gosso\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\breadCrumb-jss.js":"131","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\header-jss.js":"132","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\MegaMenu.js":"133","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\SidebarContent.js":"134","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\DropListMenu.js":"135","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Search\\SearchUi.js":"136","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\Navigation.js":"137","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\sidebarBig-jss.js":"138","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MainMenuBig.js":"139","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\MainMenu.js":"140","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Search\\search-jss.js":"141","c:\\gosso\\gbc_oms\\frontend\\src\\api\\ui\\menu.js":"142","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavLink.js":"143","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MenuProfile.js":"144","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavCollapse.js":"145","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavItem.js":"146","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavGroup.js":"147","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavBadge.js":"148","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\NavLinkAdapter.js":"149","c:\\gosso\\gbc_oms\\frontend\\src\\types\\admissionTypes.js":"150","c:\\gosso\\gbc_oms\\frontend\\src\\types\\curriculumTypes.js":"151","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\feechoices.js":"152","c:\\gosso\\gbc_oms\\frontend\\src\\types\\choiceTypes.js":"153","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\fees.js":"154","c:\\gosso\\gbc_oms\\frontend\\src\\types\\feeTypes.js":"155","c:\\gosso\\gbc_oms\\frontend\\src\\it\\fees\\Fees.js":"156","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Controls.js":"157","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\fees.js":"158","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\choices.js":"159","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Input.js":"160","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Select.js":"161","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\RadioGroup.js":"162","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\CheckBox.js":"163","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\DatePicker.js":"164","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\ActionButton.js":"165","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Button.js":"166","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\DictSelect.js":"167","c:\\gosso\\gbc_oms\\frontend\\src\\constants.js":"168","c:\\gosso\\gbc_oms\\frontend\\src\\it\\fees\\AddFee.js":"169","c:\\gosso\\gbc_oms\\frontend\\src\\components\\table\\useTable.js":"170","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Popup.js":"171","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\useForm.js":"172","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\Curriculum.js":"173","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\AddCurriculum.js":"174","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\curriculums.js":"175","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\SubjectsAdminView.js":"176","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\AddSubject.js":"177","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\accounts.js":"178","c:\\gosso\\gbc_oms\\frontend\\src\\types\\accountTypes.js":"179","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AccountsAdminView.js":"180","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\accounts.js":"181","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddAccount.js":"182","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\inactiveaccounts.js":"183","c:\\gosso\\gbc_oms\\frontend\\src\\types\\inactiveaccountTypes.js":"184","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminInactiveAccounts.js":"185","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\inactiveaccounts.js":"186","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\taxes.js":"187","c:\\gosso\\gbc_oms\\frontend\\src\\types\\taxTypes.js":"188","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminTaxes.js":"189","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddTax.js":"190","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\taxes.js":"191","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\currencies.js":"192","c:\\gosso\\gbc_oms\\frontend\\src\\types\\currencyTypes.js":"193","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminCurrencies.js":"194","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddCurrency.js":"195","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\currencies.js":"196","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\workbooks.js":"197","c:\\gosso\\gbc_oms\\frontend\\src\\types\\workbookTypes.js":"198","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminWorkBooks.js":"199","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddWorkBook.js":"200","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\workbooks.js":"201","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\ledgers.js":"202","c:\\gosso\\gbc_oms\\frontend\\src\\types\\ledgerTypes.js":"203","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminLedger.js":"204","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddLedger.js":"205","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\ledgers.js":"206","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\journals.js":"207","c:\\gosso\\gbc_oms\\frontend\\src\\types\\journalTypes.js":"208","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\JournalsAdminView.js":"209","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddJournal.js":"210","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\journals.js":"211","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\people.js":"212","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\assets.js":"213","c:\\gosso\\gbc_oms\\frontend\\src\\types\\assetTypes.js":"214","c:\\gosso\\gbc_oms\\frontend\\src\\types\\peopleTypes.js":"215","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AssetsAdminView.js":"216","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\assets.js":"217","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddAsset.js":"218","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\people.js":"219","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\classes.js":"220","c:\\gosso\\gbc_oms\\frontend\\src\\types\\classTypes.js":"221","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\GradeSelect.js":"222","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\UserSelect.js":"223","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AdminClass.js":"224","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AddClass.js":"225","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\classes.js":"226","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AdminStream.js":"227","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AddStream.js":"228","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminBursars.js":"229","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AddBursar.js":"230","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminTeachers.js":"231","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminPrincipals.js":"232","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\AdminStudents.js":"233","c:\\gosso\\gbc_oms\\frontend\\src\\it\\parents\\AdminParents.js":"234","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendances.js":"235","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AddAttendance.js":"236","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\attendances.js":"237","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminApprovedAdmissions.js":"238","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\admissions.js":"239","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AddAdmission.js":"240","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminRejectedAdmissions.js":"241","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminPendingAdmissions.js":"242","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminMeetingAdmissions.js":"243","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\gradings.js":"244","c:\\gosso\\gbc_oms\\frontend\\src\\types\\gradingTypes.js":"245","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentTests.js":"246","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AddGrade.js":"247","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\gradings.js":"248","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentAssignments.js":"249","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercises.js":"250","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\StudentProfile.js":"251","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\About.js":"252","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Assignments.js":"253","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Attendance.js":"254","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Excercises.js":"255","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\ProfileBag.js":"256","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Tests.js":"257","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\appStyles-jss.js":"258","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendance.js":"259","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\About.js":"260","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AttendanceBag.js":"261","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\Records.js":"262","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\appStyles-jss.js":"263","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AddRecord.js":"264","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\TestRecords.js":"265","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\About.js":"266","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\GradingBag.js":"267","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\appStyles-jss.js":"268","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminGradingTest.js":"269","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\ExcerciseRecords.js":"270","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\EditRecord.js":"271","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercise.js":"272","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminAssignment.js":"273","c:\\gosso\\gbc_oms\\frontend\\src\\test\\StudentLog.js":"274","c:\\gosso\\gbc_oms\\frontend\\src\\test\\TeacherLog.js":"275","c:\\gosso\\gbc_oms\\frontend\\src\\test\\BursarLog.js":"276","c:\\gosso\\gbc_oms\\frontend\\src\\auth\\Login.js":"277","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\auth.js":"278","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\dashboard\\TeacherHome.js":"279","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\SliderWidget.js":"280","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\dashboard\\dashboard-jss.js":"281","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\PerformanceChartWidget.js":"282","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\DateWidget.js":"283","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\CounterIconsWidget.js":"284","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\TaskWidget.js":"285","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\WeatherWidget.js":"286","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\CalculatorWidget.js":"287","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\TeacherLayout.js":"288","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\TimelineWidget.js":"289","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\ContactWidget.js":"290","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\widget-jss.js":"291","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\appStyles-jss.js":"292","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\MegaMenuLayout.js":"293","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarBigLayout.js":"294","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarLayout.js":"295","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\RightSidebarLayout.js":"296","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\DropMenuLayout.js":"297","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Counter\\CounterWidget.js":"298","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\Sidebar.js":"299","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\navigationConfig.js":"300","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\index.js":"301","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavigation.js":"302","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\sidebar-jss.js":"303","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\sidebarBig-jss.js":"304","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MainMenuBig.js":"305","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\Navigation.js":"306","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MenuProfile.js":"307","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavGroup.js":"308","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavItem.js":"309","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavCollapse.js":"310","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavLink.js":"311","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\NavLinkAdapter.js":"312","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavBadge.js":"313","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendances.js":"314","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendance.js":"315","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\About.js":"316","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddAttendance.js":"317","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AttendanceBag.js":"318","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\Records.js":"319","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddRecord.js":"320","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\appStyles-jss.js":"321","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTests.js":"322","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercises.js":"323","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTest.js":"324","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignments.js":"325","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignment.js":"326","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercise.js":"327","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TestRecords.js":"328","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\AddGrade.js":"329","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\About.js":"330","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\ExcerciseRecords.js":"331","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\GradingBag.js":"332","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\EditRecord.js":"333","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\appStyles-jss.js":"334","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudentProfile.js":"335","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudents.js":"336","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\About.js":"337","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Attendance.js":"338","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Assignments.js":"339","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Excercises.js":"340","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\ProfileBag.js":"341","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Tests.js":"342","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\appStyles-jss.js":"343","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\courses.js":"344","c:\\gosso\\gbc_oms\\frontend\\src\\types\\courseTypes.js":"345","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminUpcomingCourses.js":"346","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\SearchCourse.js":"347","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AddCourse.js":"348","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\courses.js":"349","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\search-jss.js":"350","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\CourseCard.js":"351","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\cardStyles-jss.js":"352","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminOngoingCourses.js":"353","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminFinishedCourses.js":"354","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminInactiveCourses.js":"355","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminUpcomingCourse.js":"356","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\CourseBag.js":"357","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\About.js":"358","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\appStyles-jss.js":"359","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\Topics.js":"360","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\AddTopic.js":"361","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\TopicCard.js":"362","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\SearchTopic.js":"363","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\search-jss.js":"364","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\cardStyles-jss.js":"365","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\AdminTopic.js":"366","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\About.js":"367","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\TopicBag.js":"368","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\appStyles-jss.js":"369","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\objectives\\Objectives.js":"370","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\objectives\\AddObjective.js":"371","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\guidelines\\GuideLines.js":"372","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\guidelines\\AddGuideLine.js":"373","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\SubTopics.js":"374","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\AddSubTopic.js":"375","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\AdminSubTopic.js":"376","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\About.js":"377","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\SubTopicBag.js":"378","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\appStyles-jss.js":"379","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\Notes.js":"380","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\AddNote.js":"381","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\AdminStudyNote.js":"382","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\About.js":"383","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\NoteBag.js":"384","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\appStyles-jss.js":"385","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminFinishedCourse.js":"386","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminOngoingCourse.js":"387","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminInactiveCourse.js":"388","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\reports.js":"389","c:\\gosso\\gbc_oms\\frontend\\src\\types\\reportTypes.js":"390","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\reports.js":"391","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\errors.js":"392","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\messages.js":"393","c:\\gosso\\gbc_oms\\frontend\\src\\types\\alertTypes.js":"394"},{"size":420,"mtime":1611141663906,"results":"395","hashOfConfig":"396"},{"size":403,"mtime":1609310314949,"results":"397","hashOfConfig":"396"},{"size":10429,"mtime":1612414533862,"results":"398","hashOfConfig":"396"},{"size":286,"mtime":1609310311636,"results":"399","hashOfConfig":"396"},{"size":290,"mtime":1609310312063,"results":"400","hashOfConfig":"396"},{"size":311,"mtime":1609310311673,"results":"401","hashOfConfig":"396"},{"size":7654,"mtime":1609342020753,"results":"402","hashOfConfig":"396"},{"size":2548,"mtime":1612350420946,"results":"403","hashOfConfig":"396"},{"size":1495,"mtime":1612360216107,"results":"404","hashOfConfig":"396"},{"size":4983,"mtime":1609310311635,"results":"405","hashOfConfig":"396"},{"size":1240,"mtime":1609310312063,"results":"406","hashOfConfig":"396"},{"size":3039,"mtime":1609310312037,"results":"407","hashOfConfig":"396"},{"size":4601,"mtime":1609310311674,"results":"408","hashOfConfig":"396"},{"size":1232,"mtime":1609310311993,"results":"409","hashOfConfig":"396"},{"size":3046,"mtime":1609310311992,"results":"410","hashOfConfig":"396"},{"size":592,"mtime":1609310314745,"results":"411","hashOfConfig":"396"},{"size":16209,"mtime":1609310315021,"results":"412","hashOfConfig":"396"},{"size":1257,"mtime":1609310308749,"results":"413","hashOfConfig":"396"},{"size":3257,"mtime":1612352483670,"results":"414","hashOfConfig":"396"},{"size":2841,"mtime":1612350092214,"results":"415","hashOfConfig":"396"},{"size":1600,"mtime":1609310314365,"results":"416","hashOfConfig":"396"},{"size":2758,"mtime":1609310314725,"results":"417","hashOfConfig":"396"},{"size":2108,"mtime":1609310314725,"results":"418","hashOfConfig":"396"},{"size":6051,"mtime":1609310314480,"results":"419","hashOfConfig":"396"},{"size":1034,"mtime":1609310314729,"results":"420","hashOfConfig":"396"},{"size":616,"mtime":1609310314336,"results":"421","hashOfConfig":"396"},{"size":7075,"mtime":1611742369408,"results":"422","hashOfConfig":"396"},{"size":14148,"mtime":1609310314341,"results":"423","hashOfConfig":"396"},{"size":14038,"mtime":1609341852178,"results":"424","hashOfConfig":"396"},{"size":216,"mtime":1611745981882,"results":"425","hashOfConfig":"396"},{"size":2964,"mtime":1611643451969,"results":"426","hashOfConfig":"396"},{"size":2409,"mtime":1609311868686,"results":"427","hashOfConfig":"396"},{"size":422,"mtime":1609310314869,"results":"428","hashOfConfig":"396"},{"size":2203,"mtime":1611816539592,"results":"429","hashOfConfig":"396"},{"size":1107,"mtime":1609310314856,"results":"430","hashOfConfig":"396"},{"size":1250,"mtime":1612414267974,"results":"431","hashOfConfig":"396"},{"size":452,"mtime":1609310314866,"results":"432","hashOfConfig":"396"},{"size":1406,"mtime":1609310314868,"results":"433","hashOfConfig":"396"},{"size":2964,"mtime":1611644129367,"results":"434","hashOfConfig":"396"},{"size":11735,"mtime":1609310311640,"results":"435","hashOfConfig":"396"},{"size":2610,"mtime":1609310311643,"results":"436","hashOfConfig":"396"},{"size":157,"mtime":1609310308748,"results":"437","hashOfConfig":"396"},{"size":3563,"mtime":1609310309086,"results":"438","hashOfConfig":"396"},{"size":2058,"mtime":1609310310559,"results":"439","hashOfConfig":"396"},{"size":2529,"mtime":1609310310622,"results":"440","hashOfConfig":"396"},{"size":1682,"mtime":1609310311262,"results":"441","hashOfConfig":"396"},{"size":2362,"mtime":1609310311260,"results":"442","hashOfConfig":"396"},{"size":4611,"mtime":1609310311262,"results":"443","hashOfConfig":"396"},{"size":3468,"mtime":1609310311260,"results":"444","hashOfConfig":"396"},{"size":4245,"mtime":1611746351009,"results":"445","hashOfConfig":"396"},{"size":5162,"mtime":1609310311265,"results":"446","hashOfConfig":"396"},{"size":4007,"mtime":1609310311261,"results":"447","hashOfConfig":"396"},{"size":3942,"mtime":1609310311267,"results":"448","hashOfConfig":"396"},{"size":2877,"mtime":1609310311260,"results":"449","hashOfConfig":"396"},{"size":1639,"mtime":1609310311993,"results":"450","hashOfConfig":"396"},{"size":2386,"mtime":1611742283331,"results":"451","hashOfConfig":"396"},{"size":5367,"mtime":1609310312038,"results":"452","hashOfConfig":"396"},{"size":259,"mtime":1609310315051,"results":"453","hashOfConfig":"396"},{"size":16068,"mtime":1609310314733,"results":"454","hashOfConfig":"396"},{"size":5758,"mtime":1609310309751,"results":"455","hashOfConfig":"396"},{"size":4639,"mtime":1609310309752,"results":"456","hashOfConfig":"396"},{"size":4858,"mtime":1609310310518,"results":"457","hashOfConfig":"396"},{"size":2062,"mtime":1612274847084,"results":"458","hashOfConfig":"396"},{"size":1613,"mtime":1609310309973,"results":"459","hashOfConfig":"396"},{"size":1083,"mtime":1609310310468,"results":"460","hashOfConfig":"396"},{"size":1862,"mtime":1609310310469,"results":"461","hashOfConfig":"396"},{"size":2038,"mtime":1609310310537,"results":"462","hashOfConfig":"396"},{"size":6128,"mtime":1609310311968,"results":"463","hashOfConfig":"396"},{"size":1659,"mtime":1609310310540,"results":"464","hashOfConfig":"396"},{"size":1994,"mtime":1609310310520,"results":"465","hashOfConfig":"396"},{"size":1516,"mtime":1609310310521,"results":"466","hashOfConfig":"396"},{"size":517,"mtime":1611816242363,"results":"467","hashOfConfig":"396"},{"size":132,"mtime":1609310316180,"results":"468","hashOfConfig":"396"},{"size":678,"mtime":1609310316156,"results":"469","hashOfConfig":"396"},{"size":166,"mtime":1609310315630,"results":"470","hashOfConfig":"396"},{"size":9579,"mtime":1612273632489,"results":"471","hashOfConfig":"396"},{"size":1772,"mtime":1609310311659,"results":"472","hashOfConfig":"396"},{"size":4161,"mtime":1609310309756,"results":"473","hashOfConfig":"396"},{"size":1456,"mtime":1609310309073,"results":"474","hashOfConfig":"396"},{"size":1516,"mtime":1609310311268,"results":"475","hashOfConfig":"396"},{"size":2114,"mtime":1609310309098,"results":"476","hashOfConfig":"396"},{"size":22090,"mtime":1609310311288,"results":"477","hashOfConfig":"396"},{"size":5618,"mtime":1609310315050,"results":"478","hashOfConfig":"396"},{"size":5620,"mtime":1609310315050,"results":"479","hashOfConfig":"396"},{"size":558,"mtime":1609310309087,"results":"480","hashOfConfig":"396"},{"size":1866,"mtime":1609310310556,"results":"481","hashOfConfig":"396"},{"size":4177,"mtime":1609310310616,"results":"482","hashOfConfig":"396"},{"size":1851,"mtime":1609310309756,"results":"483","hashOfConfig":"396"},{"size":5584,"mtime":1609310315050,"results":"484","hashOfConfig":"396"},{"size":2713,"mtime":1609310309745,"results":"485","hashOfConfig":"396"},{"size":5107,"mtime":1609310310542,"results":"486","hashOfConfig":"396"},{"size":427,"mtime":1609310308872,"results":"487","hashOfConfig":"396"},{"size":787,"mtime":1609310311657,"results":"488","hashOfConfig":"396"},{"size":7210,"mtime":1609310311652,"results":"489","hashOfConfig":"396"},{"size":2554,"mtime":1609310311651,"results":"490","hashOfConfig":"396"},{"size":8673,"mtime":1609310310626,"results":"491","hashOfConfig":"396"},{"size":752,"mtime":1609310309098,"results":"492","hashOfConfig":"396"},{"size":4469,"mtime":1609310309097,"results":"493","hashOfConfig":"396"},{"size":2261,"mtime":1609310311264,"results":"494","hashOfConfig":"396"},{"size":270,"mtime":1609310309092,"results":"495","hashOfConfig":"396"},{"size":1936,"mtime":1609310310618,"results":"496","hashOfConfig":"396"},{"size":9240,"mtime":1609310309764,"results":"497","hashOfConfig":"396"},{"size":3516,"mtime":1609310314750,"results":"498","hashOfConfig":"396"},{"size":5367,"mtime":1609310314753,"results":"499","hashOfConfig":"396"},{"size":3359,"mtime":1609310314748,"results":"500","hashOfConfig":"396"},{"size":3518,"mtime":1611742014990,"results":"501","hashOfConfig":"396"},{"size":3412,"mtime":1609310314752,"results":"502","hashOfConfig":"396"},{"size":3552,"mtime":1609310314752,"results":"503","hashOfConfig":"396"},{"size":2176,"mtime":1609310311931,"results":"504","hashOfConfig":"396"},{"size":6801,"mtime":1609310308780,"results":"505","hashOfConfig":"396"},{"size":2372,"mtime":1612350160736,"results":"506","hashOfConfig":"396"},{"size":9947,"mtime":1609310309749,"results":"507","hashOfConfig":"396"},{"size":4267,"mtime":1609310309578,"results":"508","hashOfConfig":"396"},{"size":1241,"mtime":1609310309752,"results":"509","hashOfConfig":"396"},{"size":2428,"mtime":1612344873112,"results":"510","hashOfConfig":"396"},{"size":3806,"mtime":1609310314753,"results":"511","hashOfConfig":"396"},{"size":957,"mtime":1611742107879,"results":"512","hashOfConfig":"396"},{"size":5972,"mtime":1612351097346,"results":"513","hashOfConfig":"396"},{"size":7699,"mtime":1609310309733,"results":"514","hashOfConfig":"396"},{"size":774,"mtime":1609310308785,"results":"515","hashOfConfig":"396"},{"size":3874,"mtime":1609310309763,"results":"516","hashOfConfig":"396"},{"size":976,"mtime":1609310309572,"results":"517","hashOfConfig":"396"},{"size":1134,"mtime":1609310308787,"results":"518","hashOfConfig":"396"},{"size":3091,"mtime":1609310310621,"results":"519","hashOfConfig":"396"},{"size":1683,"mtime":1609310314326,"results":"520","hashOfConfig":"396"},{"size":7223,"mtime":1609310311649,"results":"521","hashOfConfig":"396"},{"size":9240,"mtime":1609310314754,"results":"522","hashOfConfig":"396"},{"size":1671,"mtime":1609310308778,"results":"523","hashOfConfig":"396"},{"size":3228,"mtime":1612351907834,"results":"524","hashOfConfig":"396"},{"size":5902,"mtime":1612351035642,"results":"525","hashOfConfig":"396"},{"size":623,"mtime":1609310309096,"results":"526","hashOfConfig":"396"},{"size":11881,"mtime":1609310309741,"results":"527","hashOfConfig":"396"},{"size":6320,"mtime":1609310309735,"results":"528","hashOfConfig":"396"},{"size":5261,"mtime":1609310309762,"results":"529","hashOfConfig":"396"},{"size":5757,"mtime":1609310309720,"results":"530","hashOfConfig":"396"},{"size":4312,"mtime":1611742326734,"results":"531","hashOfConfig":"396"},{"size":1995,"mtime":1609310314759,"results":"532","hashOfConfig":"396"},{"size":6306,"mtime":1609310314329,"results":"533","hashOfConfig":"396"},{"size":6305,"mtime":1609310314224,"results":"534","hashOfConfig":"396"},{"size":4817,"mtime":1609310309760,"results":"535","hashOfConfig":"396"},{"size":3085,"mtime":1609310309759,"results":"536","hashOfConfig":"396"},{"size":19766,"mtime":1609310309093,"results":"537","hashOfConfig":"396"},{"size":696,"mtime":1609310314757,"results":"538","hashOfConfig":"396"},{"size":3302,"mtime":1609310314224,"results":"539","hashOfConfig":"396"},{"size":2980,"mtime":1609310314756,"results":"540","hashOfConfig":"396"},{"size":1049,"mtime":1609310314756,"results":"541","hashOfConfig":"396"},{"size":1042,"mtime":1609310314756,"results":"542","hashOfConfig":"396"},{"size":1069,"mtime":1609310314755,"results":"543","hashOfConfig":"396"},{"size":212,"mtime":1609310314757,"results":"544","hashOfConfig":"396"},{"size":630,"mtime":1611642869250,"results":"545","hashOfConfig":"396"},{"size":486,"mtime":1609310315802,"results":"546","hashOfConfig":"396"},{"size":2920,"mtime":1612338742907,"results":"547","hashOfConfig":"396"},{"size":7867,"mtime":1611318332452,"results":"548","hashOfConfig":"396"},{"size":3666,"mtime":1611650244981,"results":"549","hashOfConfig":"396"},{"size":774,"mtime":1609310316100,"results":"550","hashOfConfig":"396"},{"size":5152,"mtime":1611122093295,"results":"551","hashOfConfig":"396"},{"size":587,"mtime":1611316110435,"results":"552","hashOfConfig":"396"},{"size":5352,"mtime":1611122414954,"results":"553","hashOfConfig":"396"},{"size":34256,"mtime":1611131921584,"results":"554","hashOfConfig":"396"},{"size":440,"mtime":1609310310768,"results":"555","hashOfConfig":"396"},{"size":917,"mtime":1609310310777,"results":"556","hashOfConfig":"396"},{"size":800,"mtime":1609310310775,"results":"557","hashOfConfig":"396"},{"size":753,"mtime":1609310310734,"results":"558","hashOfConfig":"396"},{"size":814,"mtime":1611299842937,"results":"559","hashOfConfig":"396"},{"size":873,"mtime":1609310310730,"results":"560","hashOfConfig":"396"},{"size":737,"mtime":1609310310731,"results":"561","hashOfConfig":"396"},{"size":924,"mtime":1609310310767,"results":"562","hashOfConfig":"396"},{"size":16614,"mtime":1612348265688,"results":"563","hashOfConfig":"396"},{"size":4466,"mtime":1611124826284,"results":"564","hashOfConfig":"396"},{"size":3927,"mtime":1611142327878,"results":"565","hashOfConfig":"396"},{"size":1369,"mtime":1609310310772,"results":"566","hashOfConfig":"396"},{"size":1226,"mtime":1611660900567,"results":"567","hashOfConfig":"396"},{"size":5099,"mtime":1611124299996,"results":"568","hashOfConfig":"396"},{"size":2627,"mtime":1611124385913,"results":"569","hashOfConfig":"396"},{"size":3421,"mtime":1611125402200,"results":"570","hashOfConfig":"396"},{"size":5190,"mtime":1611125185815,"results":"571","hashOfConfig":"396"},{"size":3442,"mtime":1611124822743,"results":"572","hashOfConfig":"396"},{"size":1275,"mtime":1609310314800,"results":"573","hashOfConfig":"396"},{"size":223,"mtime":1609310315470,"results":"574","hashOfConfig":"396"},{"size":5374,"mtime":1611142191698,"results":"575","hashOfConfig":"396"},{"size":1746,"mtime":1611132157806,"results":"576","hashOfConfig":"396"},{"size":6261,"mtime":1611139709399,"results":"577","hashOfConfig":"396"},{"size":1492,"mtime":1611138793425,"results":"578","hashOfConfig":"396"},{"size":325,"mtime":1611138706658,"results":"579","hashOfConfig":"396"},{"size":5520,"mtime":1611142412606,"results":"580","hashOfConfig":"396"},{"size":1949,"mtime":1611139178090,"results":"581","hashOfConfig":"396"},{"size":1064,"mtime":1609310314868,"results":"582","hashOfConfig":"396"},{"size":151,"mtime":1609310316156,"results":"583","hashOfConfig":"396"},{"size":5019,"mtime":1611143916277,"results":"584","hashOfConfig":"396"},{"size":3046,"mtime":1611144125501,"results":"585","hashOfConfig":"396"},{"size":1330,"mtime":1611142932290,"results":"586","hashOfConfig":"396"},{"size":1164,"mtime":1609310314809,"results":"587","hashOfConfig":"396"},{"size":192,"mtime":1609310315801,"results":"588","hashOfConfig":"396"},{"size":5041,"mtime":1611144927679,"results":"589","hashOfConfig":"396"},{"size":3057,"mtime":1611144794344,"results":"590","hashOfConfig":"396"},{"size":1440,"mtime":1611145044722,"results":"591","hashOfConfig":"396"},{"size":1318,"mtime":1609310314874,"results":"592","hashOfConfig":"396"},{"size":235,"mtime":1609310316180,"results":"593","hashOfConfig":"396"},{"size":4940,"mtime":1611145727537,"results":"594","hashOfConfig":"396"},{"size":2618,"mtime":1611145357118,"results":"595","hashOfConfig":"396"},{"size":1769,"mtime":1611145987205,"results":"596","hashOfConfig":"396"},{"size":1271,"mtime":1609310314858,"results":"597","hashOfConfig":"396"},{"size":214,"mtime":1609310316137,"results":"598","hashOfConfig":"396"},{"size":4893,"mtime":1611146593783,"results":"599","hashOfConfig":"396"},{"size":2614,"mtime":1611146268021,"results":"600","hashOfConfig":"396"},{"size":1719,"mtime":1611146076161,"results":"601","hashOfConfig":"396"},{"size":1295,"mtime":1611150525015,"results":"602","hashOfConfig":"396"},{"size":224,"mtime":1611150402948,"results":"603","hashOfConfig":"396"},{"size":5131,"mtime":1611322294969,"results":"604","hashOfConfig":"396"},{"size":3069,"mtime":1611150047389,"results":"605","hashOfConfig":"396"},{"size":1745,"mtime":1611150362271,"results":"606","hashOfConfig":"396"},{"size":4510,"mtime":1611640286265,"results":"607","hashOfConfig":"396"},{"size":1247,"mtime":1609310314803,"results":"608","hashOfConfig":"396"},{"size":205,"mtime":1609310315627,"results":"609","hashOfConfig":"396"},{"size":1260,"mtime":1611640026230,"results":"610","hashOfConfig":"396"},{"size":5238,"mtime":1611301927069,"results":"611","hashOfConfig":"396"},{"size":1656,"mtime":1609310308572,"results":"612","hashOfConfig":"396"},{"size":8337,"mtime":1611567144189,"results":"613","hashOfConfig":"396"},{"size":7614,"mtime":1612417624193,"results":"614","hashOfConfig":"396"},{"size":1805,"mtime":1611314957647,"results":"615","hashOfConfig":"396"},{"size":519,"mtime":1611836655269,"results":"616","hashOfConfig":"396"},{"size":923,"mtime":1611313374938,"results":"617","hashOfConfig":"396"},{"size":919,"mtime":1611574486346,"results":"618","hashOfConfig":"396"},{"size":5205,"mtime":1611316643141,"results":"619","hashOfConfig":"396"},{"size":5599,"mtime":1611574255969,"results":"620","hashOfConfig":"396"},{"size":2471,"mtime":1611836657581,"results":"621","hashOfConfig":"396"},{"size":4892,"mtime":1611318001584,"results":"622","hashOfConfig":"396"},{"size":2481,"mtime":1611317729858,"results":"623","hashOfConfig":"396"},{"size":5106,"mtime":1611568138785,"results":"624","hashOfConfig":"396"},{"size":3313,"mtime":1611569307442,"results":"625","hashOfConfig":"396"},{"size":5126,"mtime":1611569174190,"results":"626","hashOfConfig":"396"},{"size":5297,"mtime":1612425382243,"results":"627","hashOfConfig":"396"},{"size":5397,"mtime":1611820045647,"results":"628","hashOfConfig":"396"},{"size":5113,"mtime":1611570922857,"results":"629","hashOfConfig":"396"},{"size":5645,"mtime":1611826388060,"results":"630","hashOfConfig":"396"},{"size":3199,"mtime":1612426189079,"results":"631","hashOfConfig":"396"},{"size":5092,"mtime":1612420059198,"results":"632","hashOfConfig":"396"},{"size":5327,"mtime":1611642377009,"results":"633","hashOfConfig":"396"},{"size":3987,"mtime":1611641585172,"results":"634","hashOfConfig":"396"},{"size":3593,"mtime":1611641200896,"results":"635","hashOfConfig":"396"},{"size":5347,"mtime":1611643142828,"results":"636","hashOfConfig":"396"},{"size":5339,"mtime":1611643274436,"results":"637","hashOfConfig":"396"},{"size":5337,"mtime":1611643442780,"results":"638","hashOfConfig":"396"},{"size":5268,"mtime":1611834505242,"results":"639","hashOfConfig":"396"},{"size":1380,"mtime":1611822823666,"results":"640","hashOfConfig":"396"},{"size":5519,"mtime":1611829333427,"results":"641","hashOfConfig":"396"},{"size":5751,"mtime":1611652615570,"results":"642","hashOfConfig":"396"},{"size":7236,"mtime":1611834550123,"results":"643","hashOfConfig":"396"},{"size":5651,"mtime":1611835198812,"results":"644","hashOfConfig":"396"},{"size":5650,"mtime":1611833823539,"results":"645","hashOfConfig":"396"},{"size":4489,"mtime":1612000802126,"results":"646","hashOfConfig":"396"},{"size":3773,"mtime":1612000718489,"results":"647","hashOfConfig":"396"},{"size":3810,"mtime":1611820040728,"results":"648","hashOfConfig":"396"},{"size":3603,"mtime":1611751329685,"results":"649","hashOfConfig":"396"},{"size":3801,"mtime":1611752589268,"results":"650","hashOfConfig":"396"},{"size":2340,"mtime":1611734076459,"results":"651","hashOfConfig":"396"},{"size":3786,"mtime":1611752252965,"results":"652","hashOfConfig":"396"},{"size":5367,"mtime":1611733952074,"results":"653","hashOfConfig":"396"},{"size":3777,"mtime":1611827774191,"results":"654","hashOfConfig":"396"},{"size":402,"mtime":1611826356299,"results":"655","hashOfConfig":"396"},{"size":2349,"mtime":1611816764280,"results":"656","hashOfConfig":"396"},{"size":5251,"mtime":1611826426156,"results":"657","hashOfConfig":"396"},{"size":5367,"mtime":1611816695583,"results":"658","hashOfConfig":"396"},{"size":3053,"mtime":1611820326231,"results":"659","hashOfConfig":"396"},{"size":4946,"mtime":1611831767369,"results":"660","hashOfConfig":"396"},{"size":401,"mtime":1611830857302,"results":"661","hashOfConfig":"396"},{"size":2340,"mtime":1611825092418,"results":"662","hashOfConfig":"396"},{"size":5367,"mtime":1611825036173,"results":"663","hashOfConfig":"396"},{"size":3751,"mtime":1611831082367,"results":"664","hashOfConfig":"396"},{"size":4929,"mtime":1611832623832,"results":"665","hashOfConfig":"396"},{"size":2609,"mtime":1611831230105,"results":"666","hashOfConfig":"396"},{"size":3866,"mtime":1611832697098,"results":"667","hashOfConfig":"396"},{"size":3864,"mtime":1611835506873,"results":"668","hashOfConfig":"396"},{"size":155,"mtime":1611927421280,"results":"669","hashOfConfig":"396"},{"size":155,"mtime":1611927435074,"results":"670","hashOfConfig":"396"},{"size":153,"mtime":1611927403586,"results":"671","hashOfConfig":"396"},{"size":2667,"mtime":1611989887120,"results":"672","hashOfConfig":"396"},{"size":1953,"mtime":1612414278037,"results":"673","hashOfConfig":"396"},{"size":3144,"mtime":1611993665590,"results":"674","hashOfConfig":"396"},{"size":3162,"mtime":1609310314723,"results":"675","hashOfConfig":"396"},{"size":592,"mtime":1609310314745,"results":"676","hashOfConfig":"396"},{"size":6051,"mtime":1609310314480,"results":"677","hashOfConfig":"396"},{"size":1600,"mtime":1609310314365,"results":"678","hashOfConfig":"396"},{"size":2344,"mtime":1609310314355,"results":"679","hashOfConfig":"396"},{"size":2758,"mtime":1609310314725,"results":"680","hashOfConfig":"396"},{"size":1034,"mtime":1609310314729,"results":"681","hashOfConfig":"396"},{"size":616,"mtime":1609310314336,"results":"682","hashOfConfig":"396"},{"size":6340,"mtime":1611993852584,"results":"683","hashOfConfig":"396"},{"size":2108,"mtime":1609310314725,"results":"684","hashOfConfig":"396"},{"size":14148,"mtime":1609310314341,"results":"685","hashOfConfig":"396"},{"size":16068,"mtime":1609310314733,"results":"686","hashOfConfig":"396"},{"size":5367,"mtime":1609310314753,"results":"687","hashOfConfig":"396"},{"size":3412,"mtime":1609310314752,"results":"688","hashOfConfig":"396"},{"size":3516,"mtime":1609310314750,"results":"689","hashOfConfig":"396"},{"size":3389,"mtime":1611993889156,"results":"690","hashOfConfig":"396"},{"size":3552,"mtime":1609310314752,"results":"691","hashOfConfig":"396"},{"size":3359,"mtime":1609310314748,"results":"692","hashOfConfig":"396"},{"size":2339,"mtime":1609310314223,"results":"693","hashOfConfig":"396"},{"size":3806,"mtime":1609310314753,"results":"694","hashOfConfig":"396"},{"size":3289,"mtime":1611998763626,"results":"695","hashOfConfig":"396"},{"size":1683,"mtime":1609310314326,"results":"696","hashOfConfig":"396"},{"size":5187,"mtime":1611749058940,"results":"697","hashOfConfig":"396"},{"size":9240,"mtime":1609310314754,"results":"698","hashOfConfig":"396"},{"size":6306,"mtime":1609310314329,"results":"699","hashOfConfig":"396"},{"size":6305,"mtime":1609310314224,"results":"700","hashOfConfig":"396"},{"size":1995,"mtime":1609310314759,"results":"701","hashOfConfig":"396"},{"size":3302,"mtime":1609310314224,"results":"702","hashOfConfig":"396"},{"size":1042,"mtime":1609310314756,"results":"703","hashOfConfig":"396"},{"size":1049,"mtime":1609310314756,"results":"704","hashOfConfig":"396"},{"size":2980,"mtime":1609310314756,"results":"705","hashOfConfig":"396"},{"size":696,"mtime":1609310314757,"results":"706","hashOfConfig":"396"},{"size":212,"mtime":1609310314757,"results":"707","hashOfConfig":"396"},{"size":1069,"mtime":1609310314755,"results":"708","hashOfConfig":"396"},{"size":5568,"mtime":1612427286837,"results":"709","hashOfConfig":"396"},{"size":3783,"mtime":1611994548950,"results":"710","hashOfConfig":"396"},{"size":319,"mtime":1611994223596,"results":"711","hashOfConfig":"396"},{"size":3176,"mtime":1612427066894,"results":"712","hashOfConfig":"396"},{"size":2293,"mtime":1611994501151,"results":"713","hashOfConfig":"396"},{"size":5251,"mtime":1611826426156,"results":"714","hashOfConfig":"396"},{"size":3053,"mtime":1611820326231,"results":"715","hashOfConfig":"396"},{"size":5367,"mtime":1611816695583,"results":"716","hashOfConfig":"396"},{"size":5459,"mtime":1611997020677,"results":"717","hashOfConfig":"396"},{"size":5570,"mtime":1611995203955,"results":"718","hashOfConfig":"396"},{"size":3736,"mtime":1611996256209,"results":"719","hashOfConfig":"396"},{"size":5510,"mtime":1611996178172,"results":"720","hashOfConfig":"396"},{"size":3860,"mtime":1611996061302,"results":"721","hashOfConfig":"396"},{"size":3851,"mtime":1611995303104,"results":"722","hashOfConfig":"396"},{"size":4946,"mtime":1611831767369,"results":"723","hashOfConfig":"396"},{"size":5751,"mtime":1611652615570,"results":"724","hashOfConfig":"396"},{"size":401,"mtime":1611830857302,"results":"725","hashOfConfig":"396"},{"size":4929,"mtime":1611832623832,"results":"726","hashOfConfig":"396"},{"size":2284,"mtime":1611995016926,"results":"727","hashOfConfig":"396"},{"size":2609,"mtime":1611831230105,"results":"728","hashOfConfig":"396"},{"size":5367,"mtime":1611825036173,"results":"729","hashOfConfig":"396"},{"size":4510,"mtime":1611998205741,"results":"730","hashOfConfig":"396"},{"size":4168,"mtime":1611998647232,"results":"731","hashOfConfig":"396"},{"size":3759,"mtime":1612001439105,"results":"732","hashOfConfig":"396"},{"size":3603,"mtime":1611751329685,"results":"733","hashOfConfig":"396"},{"size":3810,"mtime":1611820040728,"results":"734","hashOfConfig":"396"},{"size":3801,"mtime":1611752589268,"results":"735","hashOfConfig":"396"},{"size":2284,"mtime":1611998099507,"results":"736","hashOfConfig":"396"},{"size":3786,"mtime":1611752252965,"results":"737","hashOfConfig":"396"},{"size":5367,"mtime":1611733952074,"results":"738","hashOfConfig":"396"},{"size":13055,"mtime":1612356810549,"results":"739","hashOfConfig":"396"},{"size":3883,"mtime":1612356635687,"results":"740","hashOfConfig":"396"},{"size":4789,"mtime":1612358678369,"results":"741","hashOfConfig":"396"},{"size":2297,"mtime":1612251109173,"results":"742","hashOfConfig":"396"},{"size":6030,"mtime":1612359047303,"results":"743","hashOfConfig":"396"},{"size":21671,"mtime":1612358562821,"results":"744","hashOfConfig":"396"},{"size":3085,"mtime":1612187461542,"results":"745","hashOfConfig":"396"},{"size":2663,"mtime":1612355870251,"results":"746","hashOfConfig":"396"},{"size":8679,"mtime":1612186089574,"results":"747","hashOfConfig":"396"},{"size":4756,"mtime":1612255671886,"results":"748","hashOfConfig":"396"},{"size":4761,"mtime":1612255934836,"results":"749","hashOfConfig":"396"},{"size":4761,"mtime":1612256622773,"results":"750","hashOfConfig":"396"},{"size":3444,"mtime":1612261050833,"results":"751","hashOfConfig":"396"},{"size":2345,"mtime":1612257187201,"results":"752","hashOfConfig":"396"},{"size":3763,"mtime":1612350781537,"results":"753","hashOfConfig":"396"},{"size":5370,"mtime":1612256914431,"results":"754","hashOfConfig":"396"},{"size":4588,"mtime":1612264239607,"results":"755","hashOfConfig":"396"},{"size":3782,"mtime":1612263577857,"results":"756","hashOfConfig":"396"},{"size":2567,"mtime":1612260889020,"results":"757","hashOfConfig":"396"},{"size":2297,"mtime":1612259306857,"results":"758","hashOfConfig":"396"},{"size":3085,"mtime":1612259262130,"results":"759","hashOfConfig":"396"},{"size":8679,"mtime":1612261231499,"results":"760","hashOfConfig":"396"},{"size":3876,"mtime":1612336047258,"results":"761","hashOfConfig":"396"},{"size":3774,"mtime":1612330329040,"results":"762","hashOfConfig":"396"},{"size":2345,"mtime":1612259328696,"results":"763","hashOfConfig":"396"},{"size":5370,"mtime":1612259284795,"results":"764","hashOfConfig":"396"},{"size":4990,"mtime":1612332603621,"results":"765","hashOfConfig":"396"},{"size":3179,"mtime":1612331072541,"results":"766","hashOfConfig":"396"},{"size":4996,"mtime":1612333312702,"results":"767","hashOfConfig":"396"},{"size":3179,"mtime":1612332893098,"results":"768","hashOfConfig":"396"},{"size":5182,"mtime":1612336055547,"results":"769","hashOfConfig":"396"},{"size":2714,"mtime":1612336059198,"results":"770","hashOfConfig":"396"},{"size":3439,"mtime":1612339860797,"results":"771","hashOfConfig":"396"},{"size":3670,"mtime":1612336668663,"results":"772","hashOfConfig":"396"},{"size":2345,"mtime":1612335085251,"results":"773","hashOfConfig":"396"},{"size":5370,"mtime":1612336598709,"results":"774","hashOfConfig":"396"},{"size":5374,"mtime":1612339872611,"results":"775","hashOfConfig":"396"},{"size":4888,"mtime":1612353109284,"results":"776","hashOfConfig":"396"},{"size":3143,"mtime":1612341977375,"results":"777","hashOfConfig":"396"},{"size":3749,"mtime":1612342133389,"results":"778","hashOfConfig":"396"},{"size":2345,"mtime":1612341217856,"results":"779","hashOfConfig":"396"},{"size":5370,"mtime":1612340640059,"results":"780","hashOfConfig":"396"},{"size":3444,"mtime":1612342509359,"results":"781","hashOfConfig":"396"},{"size":3440,"mtime":1612343810385,"results":"782","hashOfConfig":"396"},{"size":3444,"mtime":1612344349305,"results":"783","hashOfConfig":"396"},{"size":402,"mtime":1612348834457,"results":"784","hashOfConfig":"396"},{"size":55,"mtime":1612349343791,"results":"785","hashOfConfig":"396"},{"size":408,"mtime":1612348830008,"results":"786","hashOfConfig":"396"},{"size":328,"mtime":1612360157321,"results":"787","hashOfConfig":"396"},{"size":278,"mtime":1612360514670,"results":"788","hashOfConfig":"396"},{"size":135,"mtime":1612360488067,"results":"789","hashOfConfig":"396"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},"1f8c9lg",{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"792"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"822","usedDeprecatedRules":"792"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"792"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834","usedDeprecatedRules":"792"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"792"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"792"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"792"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"792"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"871","messages":"872","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"873","usedDeprecatedRules":"792"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876","usedDeprecatedRules":"792"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"792"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"792"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"792"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"792"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"792"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932","usedDeprecatedRules":"792"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"792"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"792"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019","usedDeprecatedRules":"792"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1022","usedDeprecatedRules":"792"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1025","usedDeprecatedRules":"792"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"792"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1035","usedDeprecatedRules":"792"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1038","usedDeprecatedRules":"792"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1045","usedDeprecatedRules":"792"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048","usedDeprecatedRules":"792"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1051","usedDeprecatedRules":"792"},{"filePath":"1052","messages":"1053","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1054","usedDeprecatedRules":"792"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075","usedDeprecatedRules":"792"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"792"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081","usedDeprecatedRules":"792"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"792"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1097","usedDeprecatedRules":"792"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1110","messages":"1111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1112","messages":"1113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1128","usedDeprecatedRules":"792"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1137","usedDeprecatedRules":"792"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1144","messages":"1145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1164","usedDeprecatedRules":"792"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173","usedDeprecatedRules":"792"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1176","usedDeprecatedRules":"792"},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1181","usedDeprecatedRules":"792"},{"filePath":"1182","messages":"1183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1184","usedDeprecatedRules":"792"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1187","usedDeprecatedRules":"792"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"792"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1197","usedDeprecatedRules":"792"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1204","usedDeprecatedRules":"792"},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1209","usedDeprecatedRules":"792"},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214","usedDeprecatedRules":"792"},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1217","usedDeprecatedRules":"792"},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222","usedDeprecatedRules":"792"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"792"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1230","usedDeprecatedRules":"792"},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235","usedDeprecatedRules":"792"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1240","usedDeprecatedRules":"792"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1243","usedDeprecatedRules":"792"},{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1248","usedDeprecatedRules":"792"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"792"},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1256","usedDeprecatedRules":"792"},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261","usedDeprecatedRules":"792"},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"792"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"792"},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1276","usedDeprecatedRules":"792"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283","usedDeprecatedRules":"792"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"792"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1299","messages":"1300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1301","usedDeprecatedRules":"792"},{"filePath":"1302","messages":"1303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1304","usedDeprecatedRules":"792"},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1307","usedDeprecatedRules":"792"},{"filePath":"1308","messages":"1309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1310","usedDeprecatedRules":"792"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1313","usedDeprecatedRules":"792"},{"filePath":"1314","messages":"1315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1316","usedDeprecatedRules":"792"},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1319","usedDeprecatedRules":"792"},{"filePath":"1320","messages":"1321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1322","usedDeprecatedRules":"792"},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1325","messages":"1326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1327","usedDeprecatedRules":"792"},{"filePath":"1328","messages":"1329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1330","usedDeprecatedRules":"792"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1333","usedDeprecatedRules":"792"},{"filePath":"1334","messages":"1335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1340","usedDeprecatedRules":"792"},{"filePath":"1341","messages":"1342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1345","usedDeprecatedRules":"792"},{"filePath":"1346","messages":"1347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1348","usedDeprecatedRules":"792"},{"filePath":"1349","messages":"1350","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"792"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1354","usedDeprecatedRules":"792"},{"filePath":"1355","messages":"1356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1357","messages":"1358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1359","messages":"1360","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1361","usedDeprecatedRules":"792"},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1364","usedDeprecatedRules":"792"},{"filePath":"1365","messages":"1366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1367","messages":"1368","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1369","usedDeprecatedRules":"792"},{"filePath":"1370","messages":"1371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1372","usedDeprecatedRules":"792"},{"filePath":"1373","messages":"1374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1375","messages":"1376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1377","messages":"1378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1379","usedDeprecatedRules":"792"},{"filePath":"1380","messages":"1381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1382","usedDeprecatedRules":"792"},{"filePath":"1383","messages":"1384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1385","usedDeprecatedRules":"792"},{"filePath":"1386","messages":"1387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1388","messages":"1389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1390","usedDeprecatedRules":"792"},{"filePath":"1391","messages":"1392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1393","messages":"1394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1395","messages":"1396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1397","messages":"1398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1399","messages":"1400","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"792"},{"filePath":"1402","messages":"1403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1404","messages":"1405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1406","usedDeprecatedRules":"792"},{"filePath":"1407","messages":"1408","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"792"},{"filePath":"1410","messages":"1411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1412","messages":"1413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1414","messages":"1415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1416","messages":"1417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1418","messages":"1419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1420","messages":"1421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1422","usedDeprecatedRules":"792"},{"filePath":"1423","messages":"1424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1425","messages":"1426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1427","messages":"1428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1429","messages":"1430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1431"},{"filePath":"1432","messages":"1433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1434","messages":"1435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1436","messages":"1437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1438","messages":"1439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1440","messages":"1441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1442","messages":"1443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1446","messages":"1447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1448","messages":"1449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1450","messages":"1451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1452","messages":"1453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1454","messages":"1455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1456","messages":"1457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1458","messages":"1459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1460","messages":"1461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1462","messages":"1463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1464","messages":"1465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1466","messages":"1467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1025","usedDeprecatedRules":"792"},{"filePath":"1468","messages":"1469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"792"},{"filePath":"1470","messages":"1471","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1472","usedDeprecatedRules":"792"},{"filePath":"1473","messages":"1474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"792"},{"filePath":"1475","messages":"1476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019","usedDeprecatedRules":"792"},{"filePath":"1477","messages":"1478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1479","messages":"1480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048","usedDeprecatedRules":"792"},{"filePath":"1481","messages":"1482","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1483","usedDeprecatedRules":"792"},{"filePath":"1484","messages":"1485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1486","messages":"1487","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1488","usedDeprecatedRules":"792"},{"filePath":"1489","messages":"1490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1491","messages":"1492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1493","messages":"1494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1495","messages":"1496","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1097","usedDeprecatedRules":"792"},{"filePath":"1497","messages":"1498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1499","messages":"1500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1501","messages":"1502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1503","messages":"1504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1505","messages":"1506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1507","messages":"1508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1509","messages":"1510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1511","messages":"1512","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1513","messages":"1514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1515","messages":"1516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1517","messages":"1518","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1519","messages":"1520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1521","messages":"1522","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"792"},{"filePath":"1523","messages":"1524","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1406","usedDeprecatedRules":"792"},{"filePath":"1525","messages":"1526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1527","messages":"1528","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1529","usedDeprecatedRules":"792"},{"filePath":"1530","messages":"1531","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1532","usedDeprecatedRules":"792"},{"filePath":"1533","messages":"1534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1535","messages":"1536","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1537","usedDeprecatedRules":"792"},{"filePath":"1538","messages":"1539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1540","messages":"1541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1542","messages":"1543","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"792"},{"filePath":"1544","messages":"1545","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1364","usedDeprecatedRules":"792"},{"filePath":"1546","messages":"1547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1548","messages":"1549","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1550","usedDeprecatedRules":"792"},{"filePath":"1551","messages":"1552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1553","messages":"1554","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1422","usedDeprecatedRules":"792"},{"filePath":"1555","messages":"1556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1557","messages":"1558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1559","messages":"1560","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561","usedDeprecatedRules":"792"},{"filePath":"1562","messages":"1563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1564","messages":"1565","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1382","usedDeprecatedRules":"792"},{"filePath":"1566","messages":"1567","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1379","usedDeprecatedRules":"792"},{"filePath":"1568","messages":"1569","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1385","usedDeprecatedRules":"792"},{"filePath":"1570","messages":"1571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1572","messages":"1573","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1390","usedDeprecatedRules":"792"},{"filePath":"1574","messages":"1575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1576","messages":"1577","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1578","usedDeprecatedRules":"792"},{"filePath":"1579","messages":"1580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1581","messages":"1582","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1583","usedDeprecatedRules":"792"},{"filePath":"1584","messages":"1585","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1586","usedDeprecatedRules":"792"},{"filePath":"1587","messages":"1588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1589","usedDeprecatedRules":"792"},{"filePath":"1590","messages":"1591","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1592","usedDeprecatedRules":"792"},{"filePath":"1593","messages":"1594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1595","messages":"1596","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1597","usedDeprecatedRules":"792"},{"filePath":"1598","messages":"1599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1600","messages":"1601","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1602","usedDeprecatedRules":"792"},{"filePath":"1603","messages":"1604","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1605","usedDeprecatedRules":"792"},{"filePath":"1606","messages":"1607","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1608","usedDeprecatedRules":"792"},{"filePath":"1609","messages":"1610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1611","messages":"1612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1613","messages":"1614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1615","messages":"1616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1617","messages":"1618","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1619","usedDeprecatedRules":"792"},{"filePath":"1620","messages":"1621","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1622","usedDeprecatedRules":"792"},{"filePath":"1623","messages":"1624","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1625","usedDeprecatedRules":"792"},{"filePath":"1626","messages":"1627","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1586","usedDeprecatedRules":"792"},{"filePath":"1628","messages":"1629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1630","messages":"1631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1632","messages":"1633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1634","messages":"1635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1636","messages":"1637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1638","messages":"1639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1640","messages":"1641","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1642","usedDeprecatedRules":"792"},{"filePath":"1643","messages":"1644","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1645","usedDeprecatedRules":"792"},{"filePath":"1646","messages":"1647","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1648","usedDeprecatedRules":"792"},{"filePath":"1649","messages":"1650","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1651","usedDeprecatedRules":"792"},{"filePath":"1652","messages":"1653","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1654","usedDeprecatedRules":"792"},{"filePath":"1655","messages":"1656","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1657","usedDeprecatedRules":"792"},{"filePath":"1658","messages":"1659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1660","messages":"1661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1662","messages":"1663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1664","messages":"1665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1666","messages":"1667","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1668","usedDeprecatedRules":"792"},{"filePath":"1669","messages":"1670","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1671","usedDeprecatedRules":"792"},{"filePath":"1672","messages":"1673","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1674","usedDeprecatedRules":"792"},{"filePath":"1675","messages":"1676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1677","messages":"1678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1679","messages":"1680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1681","messages":"1682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1683","messages":"1684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1685","messages":"1686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1687","messages":"1688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1689","messages":"1690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1691","messages":"1692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},{"filePath":"1693","messages":"1694","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1695","usedDeprecatedRules":"792"},{"filePath":"1696","messages":"1697","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1698","usedDeprecatedRules":"792"},{"filePath":"1699","messages":"1700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"792"},"c:\\gosso\\gbc_oms\\frontend\\src\\index.js",[],["1701","1702"],"c:\\gosso\\gbc_oms\\frontend\\src\\store.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\App.js",["1703"],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogPage.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\landing\\LandingPage.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Profile\\CompanyProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\ThemeWrapper.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\dashboard\\InformationTechnologyHome.js",["1704","1705","1706","1707","1708","1709"],"import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport brand from '../../api/dummy/brand';\r\nimport { Helmet } from 'react-helmet';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SliderWidget from \"../Widget/SliderWidget\";\r\nimport PerformanceChartWidget from \"../Widget/PerformanceChartWidget\";\r\nimport CounterIconsWidget from \"../Widget/CounterIconsWidget\";\r\nimport DateWidget from '../Widget/DateWidget';\r\nimport TaskWidget from '../Widget/TaskWidget';\r\nimport WeatherWidget from '../Widget/WeatherWidget';\r\nimport ContactWidget from '../Widget/ContactWidget';\r\nimport TimelineWidget from '../Widget/TimelineWidget';\r\nimport CalculatorWidget from '../Widget/CalculatorWidget';\r\nimport InformationTechnologyLayout from '../layout/InformationTechnologyLayout'\r\n\r\n\r\nimport styles from './dashboard-jss';\r\n\r\n\r\nclass InformationTechnologyHome extends PureComponent {\r\n  render() {\r\n    const title = brand.name + ' - Personal Dashboard';\r\n    const description = brand.desc;\r\n    const { classes } = this.props;\r\n    return (\r\n      <InformationTechnologyLayout>\r\n        <Helmet>\r\n          <title>{title}</title>\r\n          <meta name=\"description\" content={description} />\r\n          <meta property=\"og:title\" content={title} />\r\n          <meta property=\"og:description\" content={description} />\r\n          <meta property=\"twitter:title\" content={title} />\r\n          <meta property=\"twitter:description\" content={description} />\r\n        </Helmet>\r\n        {/* 1st Section */}\r\n        <Grid container spacing={3} className={classes.root}>\r\n          <Grid item md={6} xs={12}>\r\n            <CounterIconsWidget />\r\n          </Grid>\r\n          <Grid item md={6} sm={12} xs={12}>\r\n            <div className={classes.sliderWrap}>\r\n              <SliderWidget />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider className={classes.divider} />\r\n        {/* 2nd Section */}\r\n        <Grid container spacing={2} className={classes.root}>\r\n          <Grid item xs={12}>\r\n            <PerformanceChartWidget />\r\n          </Grid>\r\n        </Grid>\r\n        <Divider className={classes.divider} />\r\n        <CalculatorWidget />\r\n      </InformationTechnologyLayout>\r\n    );\r\n  }\r\n}\r\n\r\nInformationTechnologyHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InformationTechnologyHome);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogHome.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\landing\\HomePage.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\ProfileBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Profile\\Profile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Corporate.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Blog.js",["1710"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { bindActionCreators } from 'redux';\r\nimport { toggleAction, playTransitionAction } from '../../actions/uiactions';\r\nimport Footer from '../../components/landing/Footer';\r\nimport Decoration from './Decoration';\r\nimport styles from './appStyles-jss';\r\nimport BlogBar from './BlogBar';\r\nimport Header from '../../components/landing/Header';\r\n\r\n\r\nclass Blog extends React.Component {\r\n  state = {\r\n    transform: 0,\r\n    openGuide: false\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // const { history } = this.props;\r\n    // Scroll content to top\r\n    window.addEventListener('scroll', this.handleScroll);\r\n    // Execute all arguments when page changes\r\n    // this.unlisten = history.listen(() => {\r\n    //   window.scrollTo(0, 0);\r\n    // });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    this.setState({\r\n      transform: scroll\r\n    });\r\n  }\r\n\r\n  handleOpenGuide = () => {\r\n    this.setState({ openGuide: true });\r\n  };\r\n\r\n  handleCloseGuide = () => {\r\n    this.setState({ openGuide: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      layout,\r\n\r\n    } = this.props;\r\n  \r\n    return (\r\n      <div className={classes.appFrameLanding} id=\"mainContent\">\r\n        <Header /> \r\n        <Decoration\r\n          mode={mode}\r\n          gradient={gradient}\r\n          decoration={deco}\r\n          bgPosition=\"header\"\r\n          horizontalMenu={layout === 'top-navigation' || layout === 'mega-menu'}\r\n        />\r\n\r\n        <div className={classes.blogWrap}>\r\n          {children}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBlog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  layout: PropTypes.string.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  sidebarOpen: state.ui.sidebarOpen,\r\n  pageLoaded: state.ui.pageLoaded,\r\n  mode: state.ui.type,\r\n  deco: state.ui.deco,\r\n  gradient: state.ui.gradient,\r\n  decoration: state.ui.decoration,\r\n  layout: state.ui.layout,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDrawer: () => dispatch(toggleAction),\r\n  loadTransition: bindActionCreators(playTransitionAction, dispatch),\r\n});\r\n\r\nconst BlogMapped = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Blog);\r\n\r\nexport default (withStyles(styles)(BlogMapped));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\dashboard\\dashboard-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\applicationTheme.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\uiactions.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\SliderWidget.js",["1711","1712"],"import React from 'react';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Slider from 'react-animated-slider';\r\nimport './slider.css';\r\nimport one from './images/1.jpg';\r\nimport two from './images/2.jpg';\r\nimport three from './images/3.jpg';\r\nimport four from './images/4.jpg';\r\nimport five from './images/5.jpg';\r\n\r\nconst styles = theme => ({\r\n  tag: {\r\n    background: fade(theme.palette.primary.light, 0.8),\r\n    color: theme.palette.primary.dark,\r\n    position: 'absolute',\r\n    right: 10,\r\n    top: 10,\r\n    padding: theme.spacing(1),\r\n    borderRadius: theme.rounded.big,\r\n    fontSize: 11,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    boxShadow: theme.shadows[3]\r\n  },\r\n  title: {\r\n    color: theme.palette.common.white\r\n  }\r\n});\r\n\r\nconst content = [\r\n  {\r\n    title: 'Vulputate Mollis Ultricies',\r\n    description:\r\n    'Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.',\r\n    button: 'Watch Video',\r\n    image: one,\r\n    label: 'Uploaded to',\r\n    tag: 'Just Uploaded',\r\n    to: 'Lorem Video',\r\n    userProfile: two,\r\n    type: 'video',\r\n  },\r\n  {\r\n    title: 'Tortor Dapibus Fermentum',\r\n    description:\r\n    'Cras mattis consectetur purus sit amet fermentum.',\r\n    button: 'See Post',\r\n    image: two,\r\n    label: 'Posted to',\r\n    tag: 'Newest Post',\r\n    to: 'Ipsum Media',\r\n    userProfile: two,\r\n    type: 'article'\r\n  },\r\n  {\r\n    title: 'Phasellus volutpat',\r\n    description:\r\n    'Lorem ipsum dolor sit amet',\r\n    button: 'Read Article',\r\n    image: three,\r\n    label: 'Posted to',\r\n    tag: 'Latest Article',\r\n    to: 'Dolor Sit News',\r\n    userProfile: three,\r\n    type: 'article'\r\n  }\r\n];\r\n\r\nfunction SliderWidget(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Slider className=\"slider-wrapper short\">\r\n        {content.map((item, index) => (\r\n          <div\r\n            key={index.toString()}\r\n            className=\"slider-content\"\r\n            style={{ background: `url('${item.image}') no-repeat center center` }}\r\n          >\r\n            <span className={classes.tag}>{item.tag}</span>\r\n            <div className=\"inner\">\r\n              <Typography variant=\"subtitle1\" component=\"h3\" className={classNames(classes.title)} gutterBottom>{item.title}</Typography>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                {item.type === 'video' && <Icon>play_arrow</Icon>}\r\n                {item.button}\r\n              </Button>\r\n            </div>\r\n            <section>\r\n              <img src={item.userProfile} alt={item.user} />\r\n              <span>\r\n                {item.label}\r\n                &nbsp;\r\n                <strong>\r\n                  {item.to}\r\n                </strong>\r\n              </span>\r\n            </section>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n}\r\n\r\nSliderWidget.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SliderWidget);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\CounterIconsWidget.js",["1713","1714"],"import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\nimport OndemandVideo from '@material-ui/icons/OndemandVideo';\r\nimport SupervisorAccount from '@material-ui/icons/SupervisorAccount';\r\nimport CollectionsBookmark from '@material-ui/icons/CollectionsBookmark';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport colorfull from '../../api/palette/colorfull';\r\nimport CounterWidget from '../Counter/CounterWidget';\r\nimport {getCounterStats} from '../../actions/reports';\r\nimport styles from './widget-jss';\r\n\r\n\r\nclass CounterIconWidget extends PureComponent {\r\n\r\n  componentDidMount() {\r\n    this.props.getCounterStats();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {statscounter} = this.props;\r\n    console.log(statscounter)\r\n\r\n    return (\r\n      <div className={classes.rootCounterFull}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6} md={6}>\r\n            <CounterWidget\r\n              color={colorfull[2]}\r\n              start={0}\r\n              end={statscounter.courses}\r\n              duration={statscounter.courses}\r\n              title=\"Courses\"\r\n            >\r\n              <OndemandVideo className={classes.counterIcon} />\r\n            </CounterWidget>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <CounterWidget\r\n              color={colorfull[2]}\r\n              start={0}\r\n              end={statscounter.students}\r\n              duration={statscounter.students}\r\n              title=\"STUDENTS\"\r\n            >\r\n              <SupervisorAccount className={classes.counterIcon} />\r\n            </CounterWidget>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <CounterWidget\r\n              color={colorfull[2]}\r\n              start={0}\r\n              end={statscounter.staffusers}\r\n              duration={statscounter.staffusers}\r\n              title=\"STAFF\"\r\n            >\r\n              <SupervisorAccount className={classes.counterIcon} />\r\n            </CounterWidget>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <CounterWidget\r\n              color={colorfull[3]}\r\n              start={0}\r\n              end={statscounter.topics}\r\n              duration={statscounter.topics}\r\n              title=\"Total Topics\"\r\n            >\r\n              <CollectionsBookmark className={classes.counterIcon} />\r\n            </CounterWidget>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  statscounter: state.reports.statscounter,\r\n\r\n});\r\n\r\nconst BlogMapped = connect(\r\n  mapStateToProps,\r\n  {getCounterStats}\r\n)(CounterIconWidget);\r\n\r\nexport default (withStyles(styles)(BlogMapped));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\DateWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\TaskWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\TimelineWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\PerformanceChartWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\WeatherWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\CalculatorWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\InformationTechnologyLayout.js",["1715"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport  GuideSlider  from '../../components/GuideSlider';\r\nimport { toggleAction, openAction, playTransitionAction } from '../../actions/uiactions';\r\nimport LeftSidebarLayout from './LeftSidebarLayout';\r\nimport RightSidebarLayout from './RightSidebarLayout';\r\nimport LeftSidebarBigLayout from './LeftSidebarBigLayout';\r\nimport DropMenuLayout from './DropMenuLayout';\r\nimport MegaMenuLayout from './MegaMenuLayout';\r\nimport styles from './appStyles-jss';\r\n\r\nclass InformationTechnologyLayout extends React.Component {\r\n  // Initial header style\r\n  state = {\r\n    openGuide: false,\r\n    appHeight: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const {  loadTransition } = this.props;\r\n\r\n    // Adjust min height\r\n    this.setState({ appHeight: window.innerHeight + 112 });\r\n\r\n    // Set expanded sidebar menu\r\n\r\n    // Play page transition\r\n    loadTransition(true);\r\n\r\n    // Execute all arguments when page changes\r\n\r\n  }\r\n\r\n  handleOpenGuide = () => {\r\n    this.setState({ openGuide: true });\r\n  };\r\n\r\n  handleCloseGuide = () => {\r\n    this.setState({ openGuide: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      history,\r\n      gradient,\r\n      deco,\r\n      bgPosition,\r\n      layout,\r\n      changeMode\r\n    } = this.props;\r\n    const { openGuide, appHeight } = this.state;\r\n    const titleException = ['/app', '/app/crm-dashboard', '/app/crypto-dashboard'];\r\n    // const parts = history.location.pathname.split('/');\r\n    // const place = parts[parts.length - 1].replace('-', ' ');\r\n    return (\r\n      <div\r\n        style={{ minHeight: appHeight }}\r\n        className={\r\n          classNames(\r\n            classes.appFrameInner,\r\n            layout === 'top-navigation' || layout === 'mega-menu' ? classes.topNav : classes.sideNav,\r\n            mode === 'dark' ? 'dark-mode' : 'light-mode'\r\n          )\r\n        }\r\n      >\r\n        <GuideSlider openGuide={openGuide} closeGuide={this.handleCloseGuide} />\r\n        { /* Left Sidebar Layout */\r\n          layout === 'left-sidebar' && (\r\n            <LeftSidebarLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </LeftSidebarLayout>\r\n          )\r\n        }\r\n        { /* Left Big-Sidebar Layout */\r\n          layout === 'big-sidebar' && (\r\n            <LeftSidebarBigLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              mode={mode}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </LeftSidebarBigLayout>\r\n          )\r\n        }\r\n        { /* Right Sidebar Layout */\r\n          layout === 'right-sidebar' && (\r\n            <RightSidebarLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </RightSidebarLayout>\r\n          )\r\n        }\r\n        { /* Top Bar with Dropdown Menu */\r\n          layout === 'top-navigation' && (\r\n            <DropMenuLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </DropMenuLayout>\r\n          )\r\n        }\r\n        { /* Top Bar with Mega Menu */\r\n          layout === 'mega-menu' && (\r\n            <MegaMenuLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </MegaMenuLayout>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInformationTechnologyLayout.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // children: PropTypes.node.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n  // initialOpen: PropTypes.func.isRequired,\r\n  // toggleDrawer: PropTypes.func.isRequired,\r\n  // loadTransition: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // sidebarOpen: PropTypes.bool.isRequired,\r\n  // pageLoaded: PropTypes.bool.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // deco: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // layout: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  sidebarOpen: state.ui.sidebarOpen,\r\n  pageLoaded: state.ui.pageLoaded,\r\n  mode: state.ui.mode,\r\n  gradient: state.ui.gradient,\r\n  deco: state.ui.deco,\r\n  layout: state.ui.layout,\r\n  bgPosition: state.ui.bgPosition,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDrawer: () => dispatch(toggleAction),\r\n  initialOpen: bindActionCreators(openAction, dispatch),\r\n  loadTransition: bindActionCreators(playTransitionAction, dispatch),\r\n});\r\n\r\nconst DashboardMaped = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InformationTechnologyLayout);\r\n\r\nexport default (withStyles(styles)(DashboardMaped));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\ContactWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\index.js",["1716","1717","1718","1719","1720"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Palette from '@material-ui/icons/Palette';\r\nimport Close from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport LeftSidebarThumb from './templatePreview/LeftSidebarThumb';\r\nimport LeftSidebarBigThumb from './templatePreview/LeftSidebarBigThumb';\r\nimport TopNavigationThumb  from './templatePreview/TopNavigationThumb';\r\nimport MegaMenuThumb from './templatePreview/MegaMenuThumb';\r\nimport ThemeThumb from './ThemeThumbs';\r\nimport LayoutThumb from './LayoutThumb';\r\nimport styles from './settings-jss';\r\n\r\nfunction TabContainer({ children }) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 1.5 }}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nclass TemplateSettings extends React.Component {\r\n  state = {\r\n    type: 0,\r\n    show: false,\r\n    showAllThemes: false\r\n  };\r\n\r\n  // Tab Handle\r\n  handleChangeTab = (event, type) => {\r\n    this.setState({ type });\r\n  };\r\n\r\n  handleChangeIndexTab = index => {\r\n    this.setState({ type: index });\r\n  };\r\n\r\n  // Theme Mode Handle\r\n  handleSwitchMode = name => event => {\r\n    const { changeMode } = this.props;\r\n    const mode = event.target.checked ? 'dark' : 'light';\r\n    changeMode(mode);\r\n    this.setState({ [name]: event.target.checked });\r\n  };\r\n\r\n  handeSwitchDirection = name => event => {\r\n    const { changeDirection } = this.props;\r\n    const dir = event.target.checked ? 'rtl' : 'ltr';\r\n    changeDirection(dir);\r\n    this.setState({ [name]: event.target.checked });\r\n  }\r\n\r\n  // Background Position Handle\r\n  handleBgChangePosition = event => {\r\n    const { changeBgPosition } = this.props;\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    changeBgPosition(event.target.value);\r\n  };\r\n\r\n  // Decoration Handle\r\n  handleChangeDecoration = name => event => {\r\n    const { changeDecoration } = this.props;\r\n    this.setState({ [name]: event.target.checked });\r\n    changeDecoration(event.target.checked);\r\n  };\r\n\r\n  // Decoration Handle\r\n  handleChangeGradient = name => event => {\r\n    const { changeGradient } = this.props;\r\n    this.setState({ [name]: event.target.checked });\r\n    changeGradient(event.target.checked);\r\n  };\r\n\r\n  // Layout Handle\r\n  handleChangeLayout = event => {\r\n    const { changeLayout } = this.props;\r\n    changeLayout(event.target.value);\r\n  };\r\n\r\n  // Show Hide Panel\r\n  handleTogglePanel = () => {\r\n    const { show } = this.state;\r\n    this.setState({ show: !show });\r\n  }\r\n\r\n  // Toggle All Themes\r\n  handleToggleAllThemes = () => {\r\n    const { showAllThemes } = this.state;\r\n    this.setState({ showAllThemes: !showAllThemes });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      palette,\r\n      mode,\r\n      gradient,\r\n      decoration,\r\n      bgPosition,\r\n      selectedValue,\r\n      layout,\r\n      direction,\r\n      changeTheme,\r\n      changeRandomTheme\r\n    } = this.props;\r\n    const { show, type, showAllThemes } = this.state;\r\n    const getItem = dataArray => dataArray.map((item, index) => (\r\n      <FormControlLabel\r\n        key={index.toString()}\r\n        className={\r\n          classNames(\r\n            classes.themeField,\r\n            index > 7 && !showAllThemes ? classes.hide : ''\r\n          )\r\n        }\r\n        control={(\r\n          <ThemeThumb\r\n            value={item.value}\r\n            selectedValue={selectedValue}\r\n            handleChange={changeTheme}\r\n            name={item.name}\r\n          />\r\n        )}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <aside\r\n        className={\r\n          classNames(\r\n            classes.settingSidebar,\r\n            layout === 'right-sidebar' ? classes.leftSidebar : classes.rightSidebar,\r\n            show && classes.expanded\r\n          )\r\n        }\r\n      >\r\n        <div className={classes.toggleButton}>\r\n          <Fab\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            aria-label=\"toggle\"\r\n            className={classes.button}\r\n            onClick={this.handleTogglePanel}\r\n            classes={{\r\n              root: classes.buttonDrawer,\r\n            }}\r\n          >\r\n            {show ? <Close /> : <Palette />}\r\n          </Fab>\r\n        </div>\r\n        <Slide direction={direction === 'rtl' ? 'right' : 'left'} in={show} mountOnEnter unmountOnExit>\r\n          <div className={classes.root}>\r\n            <AppBar position=\"fixed\" className={classes.tab} color=\"default\">\r\n              <div className={classes.header}>\r\n                <IconButton\r\n                  onClick={this.handleTogglePanel}\r\n                  className={classes.backButton}\r\n                  aria-label=\"Baack\"\r\n                >\r\n                  <ArrowBack />\r\n                </IconButton>\r\n                <Typography variant=\"button\">Template Settings</Typography>\r\n              </div>\r\n              <Tabs\r\n                value={type}\r\n                onChange={this.handleChangeTab}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"fullWidth\"\r\n              >\r\n                <Tab label=\"Theme\" />\r\n                <Tab label=\"Layout\" />\r\n              </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n              index={type}\r\n              onChangeIndex={this.handleChangeIndexTab}\r\n            >\r\n              <TabContainer>\r\n                <section className={classes.settingWraper}>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>invert_colors</Icon>\r\n                        Theme Mode\r\n                      </FormLabel>\r\n                      <FormGroup className={classes.themeMode}>\r\n                        <span>Light Mode</span>\r\n                        <FormControlLabel\r\n                          className={classes.switch}\r\n                          control={(\r\n                            <Switch\r\n                              checked={mode === 'dark'}\r\n                              onChange={this.handleSwitchMode('dark')}\r\n                              value=\"dark\"\r\n                              color=\"default\"\r\n                              classes={{\r\n                                track: classes.themeCheckBar,\r\n                                thumb: classes.themeCheck,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        <span>Dark Mode</span>\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>\r\n                          format_textdirection_r_to_l\r\n                        </Icon>\r\n                        Layout Direction\r\n                      </FormLabel>\r\n                      <FormGroup className={classes.themeMode}>\r\n                        <span>LTR</span>\r\n                        <FormControlLabel\r\n                          className={classes.switch}\r\n                          control={(\r\n                            <Switch\r\n                              checked={direction === 'rtl'}\r\n                              onChange={this.handeSwitchDirection('rtl')}\r\n                              value=\"rtl\"\r\n                              color=\"default\"\r\n                              classes={{\r\n                                track: classes.themeCheckBar,\r\n                                thumb: classes.themeCheck,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        <span>RTL</span>\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\" className={classes.themeGroup}>\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>color_lens</Icon>\r\n                        Theme Color\r\n                      </FormLabel>\r\n                      <div className={classes.randomThemeField}>\r\n                        <ButtonBase onClick={() => changeRandomTheme()}>\r\n                          <img src=\"/images/random.jpg\" alt=\"random\" />\r\n                        </ButtonBase>\r\n                      </div>\r\n                      { palette !== undefined && getItem(palette) }\r\n                      <div className={classes.center}>\r\n                        <Button color=\"primary\" onClick={this.handleToggleAllThemes}>\r\n                          {showAllThemes ? 'Hide Some' : 'Show All'}\r\n                        </Button>\r\n                      </div>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>branding_watermark</Icon>\r\n                        Background Size\r\n                      </FormLabel>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel htmlFor=\"background-position\">Choose Size</InputLabel>\r\n                        <Select\r\n                          value={bgPosition}\r\n                          onChange={this.handleBgChangePosition}\r\n                          inputProps={{\r\n                            name: 'position',\r\n                            id: 'background-position',\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"header\">Header</MenuItem>\r\n                          <MenuItem value=\"half\">Half</MenuItem>\r\n                          <MenuItem value=\"full\">Full</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>texture</Icon>\r\n                        Art Decoration\r\n                      </FormLabel>\r\n                      <FormGroup row>\r\n                        <FormControlLabel\r\n                          control={(\r\n                            <Checkbox\r\n                              checked={decoration}\r\n                              onChange={this.handleChangeDecoration('decorated')}\r\n                              value=\"decorated\"\r\n                            />\r\n                          )}\r\n                          label=\"Show Art Decoration\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup row>\r\n                        <FormControlLabel\r\n                          control={(\r\n                            <Checkbox\r\n                              checked={gradient}\r\n                              onChange={this.handleChangeGradient('gradient')}\r\n                              value=\"gradient\"\r\n                            />\r\n                          )}\r\n                          label=\"Use Gradient\"\r\n                        />\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Paper>\r\n                </section>\r\n                {/* END */}\r\n              </TabContainer>\r\n            </SwipeableViews>\r\n          </div>\r\n        </Slide>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nTemplateSettings.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  // palette: PropTypes.,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  decoration: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n  layout: PropTypes.string.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  changeTheme: PropTypes.func.isRequired,\r\n  changeRandomTheme: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  changeGradient: PropTypes.func.isRequired,\r\n  changeDecoration: PropTypes.func.isRequired,\r\n  changeBgPosition: PropTypes.func.isRequired,\r\n  changeLayout: PropTypes.func.isRequired,\r\n  changeDirection: PropTypes.func.isRequired,\r\n};\r\n\r\nTemplateSettings.defaultProps = {\r\n  palette: undefined\r\n};\r\n\r\nexport default withStyles(styles)(TemplateSettings);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\brand.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\admissions.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\curriculums.js",["1721"],"import {\r\n    ADD_CURRICULUM,\r\n    GET_CURRICULUMS,\r\n    DELETE_CURRICULUM,\r\n    GET_CURRICULUM,\r\n    EDIT_CURRICULUM,\r\n    ADD_SUBJECT,\r\n    GET_SUBJECTS,\r\n    DELETE_SUBJECT,\r\n    GET_SUBJECT,\r\n    EDIT_SUBJECT,\r\n} from '../types/curriculumTypes';\r\n\r\nconst initialState = {\r\n    subjects: [],\r\n    subject: [],\r\n    curriculums: [],\r\n    curriculum: [],\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SUBJECTS:\r\n            return {\r\n                ...state,\r\n                subjects: action.payload\r\n            };\r\n        case DELETE_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subject: state.subjects.filter(subject=> subject.id !== action.payload)\r\n            };\r\n        case ADD_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subject: [...state.subjects, action.payload]\r\n            }\r\n        case GET_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subject:action.payload\r\n                };\r\n        case EDIT_SUBJECT:\r\n            const subarrayList = state.subjects;\r\n            subarrayList.splice(subarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                subjects: subarrayList,\r\n            };\r\n        case GET_CURRICULUMS:\r\n            return {\r\n                ...state,\r\n                curriculums: action.payload\r\n            };\r\n        case DELETE_CURRICULUM:\r\n            return {\r\n                ...state,\r\n                curriculum: state.curriculums.filter(curriculum=> curriculum.id !== action.payload)\r\n            };\r\n        case ADD_CURRICULUM:\r\n            return {\r\n                ...state,\r\n                curriculum: [...state.curriculums, action.payload]\r\n            }\r\n        case GET_CURRICULUM:\r\n            return {\r\n                ...state,\r\n                curriculum:action.payload\r\n            };\r\n        case EDIT_CURRICULUM:\r\n            const cuarrayList = state.curriculums;\r\n            cuarrayList.splice(cuarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                curriculums: cuarrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\timelines.js",["1722"],"\r\nimport {\r\n    FETCH_TIMELINE_DATA\r\n    \r\n  } from '../types/uitypes';\r\n\r\nconst initialState = {\r\n    timelines: [],\r\n\r\n  };\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case FETCH_TIMELINE_DATA:\r\n            return {\r\n                ...state,\r\n                timelines: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n     \r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\adminattendances.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\itmenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\auth.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\studentattendances.js",["1723"],"import {\r\n    GET_STUDENT_ATTENDANCES ,\r\n\r\n\r\n} from '../types/attendanceTypes';\r\n\r\nconst initialState = {\r\n    studentattendances: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_STUDENT_ATTENDANCES:\r\n            return {\r\n                ...state,\r\n                studentattendances: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\teacherattendances.js",["1724"],"import {\r\n    ADD_ATTENDANCE,\r\n    GET_ATTENDANCES ,\r\n    DELETE_ATTENDANCE,\r\n    GET_ATTENDANCE,\r\n    EDIT_ATTENDANCE,\r\n\r\n\r\n} from '../types/attendanceTypes';\r\n\r\nconst initialState = {\r\n    teacherattendances: [],\r\n    teacherattendance: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ATTENDANCES:\r\n            return {\r\n                ...state,\r\n                teacherattendances: action.payload\r\n            };\r\n        case DELETE_ATTENDANCE:\r\n            return {\r\n                ...state,\r\n                teacherattendance: state.teacherattendances.filter(account=> account.id !== action.payload)\r\n            };\r\n        case ADD_ATTENDANCE:\r\n            return {\r\n                ...state,\r\n                teacherattendance: [...state.teacherattendances, action.payload]\r\n            }\r\n        case GET_ATTENDANCE:\r\n            return {\r\n                ...state,\r\n                teacherattendance:action.payload\r\n                };\r\n        case EDIT_ATTENDANCE:\r\n            const arrayList = state.teacherattendances;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                teacherattendances: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\ui.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\SidebarBlog.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\blogStyle-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\timeline.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\photos.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\HeadlineCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\ShowcaseCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Pricing.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Feature.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Showcase.js",["1725","1726","1727","1728","1729"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { Parallax, ParallaxProvider } from 'react-scroll-parallax';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShowcaseCard from '../cards/ShowcaseCard';\r\nimport Title from './Title';\r\nimport styles from './landingStyle-jss';\r\nimport petal3 from '../../images/decoration/petal3.svg';\r\nimport petal4 from '../../images/decoration/petal4.svg';\r\nimport thumb1 from '../../images/screen/thumb1.jpg';\r\nimport thumb3 from '../../images/screen/thumb3.jpg';\r\nimport thumb5 from '../../images/screen/thumb5.jpg';\r\nimport thumb2 from '../../images/screen/thumb2.jpg';\r\nimport thumb4 from '../../images/screen/thumb4.jpg';\r\n\r\nimport four from './four.jpg';\r\nimport six from './six.jpg';\r\nimport seven from './seven.jpg';\r\nimport eight from './eight.jpg';\r\nimport five from './five.png';\r\n\r\n\r\nfunction ParallaxDeco(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.parallaxWrap}>\r\n      <ParallaxProvider>\r\n        <div className={classes.bannerParallaxWrap}>\r\n          <Parallax\r\n            offsetYMax={70}\r\n            offsetYMin={-200}\r\n            slowerScrollRate\r\n            tag=\"figure\"\r\n          >\r\n            <svg\r\n              fill=\"#fff\"\r\n              className={\r\n                classNames(\r\n                  classes.parallaxVertical,\r\n                  classes.parallaxPetal1\r\n                )\r\n              }\r\n            >\r\n              <use xlinkHref={petal3} />\r\n            </svg>\r\n          </Parallax>\r\n          <Parallax\r\n            offsetYMax={100}\r\n            offsetYMin={-200}\r\n            slowerScrollRate\r\n            tag=\"figure\"\r\n          >\r\n            <svg\r\n              fill=\"#fff\"\r\n              className={\r\n                classNames(\r\n                  classes.parallaxVertical,\r\n                  classes.parallaxPetal2\r\n                )\r\n              }\r\n            >\r\n              <use xlinkHref={petal4} />\r\n            </svg>\r\n          </Parallax>\r\n        </div>\r\n      </ParallaxProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nParallaxDeco.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ParallaxDecoStyled = withStyles(styles)(ParallaxDeco);\r\n\r\nclass Showcase extends React.Component {\r\n  render() {\r\n    const { classes, slideMode, width } = this.props;\r\n    return (\r\n      <section className={classes.showcase}>\r\n        {!slideMode && <ParallaxDecoStyled />}\r\n        <div className={classes.container}>\r\n          <Grid container className={classes.root} spacing={5}>\r\n            <Grid item sm={6} md={4} xs={12}>\r\n              <Title \r\n                title=\"Our Services\" \r\n                align={width === 'lg' ? 'left' : 'center'} \r\n                monocolor={slideMode && true} \r\n              />\r\n              <ShowcaseCard\r\n                title=\"Information Technology\"\r\n                desc=\"We develop systems that connect all your systems\"\r\n                action=\"Try Us\"\r\n                image={four}\r\n              />\r\n              <ShowcaseCard\r\n                title=\"Industrial Systems\"\r\n                desc=\"We integrate all your Industrial Systems \"\r\n                action=\"Visit Us\"\r\n                image={five}\r\n              />\r\n            </Grid>\r\n            <Grid item sm={6} md={4} xs={12}>\r\n              <ShowcaseCard\r\n                title=\"Energy Renewal Systems\"\r\n                desc=\"We are the kings in Energy Systems\"\r\n                action=\"Get in touch\"\r\n                image={six}\r\n              />\r\n              <ShowcaseCard\r\n                title=\"IIoT & SCADA/HMI/DCS\"\r\n                desc=\"Industrial Internet of Thins Experts\"\r\n                action=\"LETS GO IIoT\"\r\n                image={eight}\r\n              />\r\n            </Grid>\r\n            <Grid item sm={6} md={4} xs={12}>\r\n              <div className={classes.lastShowcase}>\r\n                <ShowcaseCard\r\n                  title=\"Industrial Computing Systems\"\r\n                  desc=\"Making your job easier\"\r\n                  action=\"At your Service\"\r\n                  image={seven}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nShowcase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  slideMode: PropTypes.bool\r\n};\r\n\r\nShowcase.defaultProps = {\r\n  slideMode: false\r\n};\r\n\r\n\r\nexport default withWidth()(withStyles(styles)(Showcase));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Contact.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Banner.js",["1730","1731"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Parallax, ParallaxProvider } from 'react-scroll-parallax';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport link from '../../api/ui/link';\r\nimport styles from './landingStyle-jss';\r\nimport one from './one.jpg';\r\nimport two from './two.jpg';\r\nimport three from './three.jpg';\r\n\r\nfunction ParallaxDeco(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <ParallaxProvider>\r\n      <div className={classes.bannerParallaxWrap}>\r\n        <Parallax\r\n          offsetYMax={10}\r\n          offsetYMin={-60}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.lineBanner1)} />\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={15}\r\n          offsetYMin={-50}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.lineBanner2)} />\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={70}\r\n          offsetYMin={-1}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.petalBanner1)} />\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={60}\r\n          offsetYMin={-30}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.petalBanner2)} />\r\n        </Parallax>\r\n      </div>\r\n    </ParallaxProvider>\r\n  );\r\n}\r\n\r\nParallaxDeco.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ParallaxDecoStyled = withStyles(styles)(ParallaxDeco);\r\n\r\nclass Banner extends React.Component {\r\n  render() {\r\n    const { classes, gradient, slideMode } = this.props;\r\n    return (\r\n      <div\r\n        className={\r\n          classNames(\r\n            classes.banner,\r\n            gradient ? classes.gradient : classes.solid,\r\n            slideMode ? classes.out : classes.fit\r\n          )\r\n        }\r\n      >\r\n        {!slideMode && <ParallaxDecoStyled />}\r\n        <div className={!slideMode ? classes.container : ''}>\r\n          <Typography component=\"h2\" variant=\"h2\" gutterBottom>GERERE BUSINESS COLLEGE</Typography>\r\n          <Typography component=\"p\" variant=\"h5\" gutterBottom>WELCOME TO GERERE BUSINESS COLLEGE</Typography>\r\n          <div className={classes.btnArea}>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              className={classNames(classes.button, classes.btnLight)}\r\n            >\r\n              Visit Us\r\n            </Button>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              We Serve\r\n            </Button>\r\n          </div>\r\n          <div className={classes.previewApp}>\r\n            <Hidden smDown>\r\n              <div className={classNames(classes.m2, classes.screen, slideMode ? classes.bottom : '')}>\r\n                <img src={one} alt=\"crm dashboard\" />\r\n              </div>\r\n            </Hidden>\r\n            <div className={classNames(classes.m1, classes.screen)}>\r\n              <img src={two} alt=\"personal dashboard\" />\r\n            </div>\r\n            <Hidden smDown>\r\n              <div className={classNames(classes.m3, classes.screen, slideMode ? classes.bottom : '')}>\r\n                <img src={three} alt=\"crypto dashboard\" />\r\n              </div>\r\n            </Hidden>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBanner.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  slideMode: PropTypes.bool\r\n};\r\n\r\nBanner.defaultProps = {\r\n  slideMode: false\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  gradient: state.ui.gradient,\r\n});\r\n\r\nconst BannerMaped = connect(\r\n  mapStateToProps,\r\n)(Banner);\r\n\r\nexport default (withStyles(styles)(BannerMaped));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Technology.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Header.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Testimonials.js",["1732"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport { Parallax, ParallaxProvider } from 'react-scroll-parallax';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Slider from 'react-animated-slider';\r\nimport imgApi from '../../api/images/photos';\r\nimport './styles.css';\r\nimport Title from './Title';\r\nimport styles from './landingStyle-jss';\r\nimport lineside1 from '../../images/decoration/lineSide1.svg';\r\nimport lineside2 from '../../images/decoration/lineSide2.svg';\r\nimport nine from './nine.jpg';\r\nimport ten from './ten.jpg';\r\nimport leven from './leven.jpg';\r\n\r\nconst content = [\r\n  {\r\n    title: 'With Flexible Measurements you will never go wrong',\r\n    image: nine,\r\n    user: '',\r\n  },\r\n  {\r\n    title: 'They care, they listen and solve your roblem',\r\n    image: ten,\r\n    user: '',\r\n  },\r\n  {\r\n    title: 'Offering the best is what they do best',\r\n    image: leven,\r\n    user: '',\r\n  }\r\n];\r\n\r\nfunction ParallaxDeco(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.parallaxWrap}>\r\n      <ParallaxProvider>\r\n        <Parallax\r\n          offsetYMax={180}\r\n          offsetYMin={-200}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <svg\r\n            fill=\"#fff\"\r\n            className={\r\n              classNames(\r\n                classes.parallaxVertical,\r\n                classes.parallaxLineSide1\r\n              )\r\n            }\r\n          >\r\n            <use xlinkHref={lineside1} />\r\n          </svg>\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={100}\r\n          offsetYMin={-350}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <svg\r\n            fill=\"#fff\"\r\n            className={\r\n              classNames(\r\n                classes.parallaxVertical,\r\n                classes.parallaxLineSide2\r\n              )\r\n            }\r\n          >\r\n            <use xlinkHref={lineside2} />\r\n          </svg>\r\n        </Parallax>\r\n      </ParallaxProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nParallaxDeco.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ParallaxDecoStyled = withStyles(styles)(ParallaxDeco);\r\n\r\nclass Testimonials extends React.Component {\r\n  render() {\r\n    const { classes, slideMode } = this.props;\r\n    return (\r\n      <div className={classes.testimonials}>\r\n        {!slideMode && (<ParallaxDecoStyled />)}\r\n        <div className={!slideMode ? classes.container : classes.fullSliderContent}>\r\n          <Title title=\"What people said\" align=\"center\" monocolor={slideMode && true} />\r\n          <div className={classes.sliderWrap}>\r\n            <Slider className=\"slider-wrapper\">\r\n              {content.map((item, index) => (\r\n                <div\r\n                  key={index.toString()}\r\n                  className=\"slider-content\"\r\n                  style={{ background: `url('${item.image}') no-repeat center center` }}\r\n                >\r\n                  <IconButton aria-label=\"Play/pause\" className={classes.playIcon}>\r\n                    <PlayArrowIcon />\r\n                  </IconButton>\r\n                  <p className={classNames(classes.videoCaption, slideMode ? classes.mono : classes.color)}>\r\n                    <Typography variant=\"h6\" component=\"span\" gutterBottom>{item.title}</Typography>\r\n                    <Typography component=\"span\">{item.user}</Typography>\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTestimonials.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  slideMode: PropTypes.bool,\r\n};\r\n\r\nTestimonials.defaultProps = {\r\n  slideMode: false\r\n};\r\n\r\nexport default withStyles(styles)(Testimonials);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Footer.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\BlogBar.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Decoration.js",["1733"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport decorationLight from '../../images/decoration_light.svg';\r\nimport decorationDark from '../../images/decoration_dark.svg';\r\nimport petalLight from '../../images/petal_bg.svg';\r\nimport styles from './appStyles-jss';\r\n\r\nclass Decoration extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      mode,\r\n      gradient,\r\n      decoration,\r\n      bgPosition,\r\n      horizontalMenu\r\n    } = this.props;\r\n    const getBgPosition = position => {\r\n      if (position === 'header') {\r\n        return classes.headerBg;\r\n      }\r\n      if (position === 'half') {\r\n        return classes.halfBg;\r\n      }\r\n      return classes.fullBg;\r\n    };\r\n    const renderDecor = (type, position) => {\r\n      const mergeDeco = type + '-' + position;\r\n      if (mergeDeco === 'dark-half') {\r\n        return (\r\n          <img src={decorationDark} alt=\"decoration\" className={classes.decorationWave} />\r\n        );\r\n      }\r\n      if (mergeDeco === 'dark-full') {\r\n        return (\r\n          <img src={petalLight} alt=\"decoration\" className={classes.decorationPetal} />\r\n        );\r\n      }\r\n      if (mergeDeco === 'light-half') {\r\n        return (\r\n          <img src={decorationLight} alt=\"decoration\" className={classes.decorationWave} />\r\n        );\r\n      }\r\n      if (mergeDeco === 'light-full') {\r\n        return (\r\n          <img src={petalLight} alt=\"decoration\" className={classes.decorationPetal} />\r\n        );\r\n      }\r\n      return false;\r\n    };\r\n    return (\r\n      <div className={classes.bgWrap}>\r\n        <div\r\n          className={classNames(\r\n            classes.bgbar,\r\n            horizontalMenu && classes.highTop,\r\n            gradient ? classes.gradientBg : classes.solidBg,\r\n            getBgPosition(bgPosition),\r\n          )}\r\n        >\r\n          { decoration && renderDecor(mode, bgPosition) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDecoration.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // decoration: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // horizontalMenu: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default (withStyles(styles)(Decoration));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\themePaletteMode.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\widget-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Albums.js",["1734"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport imgData from '../../api/images/imgData';\r\nimport styles from './profile-jss';\r\n\r\n// const LinkBtn = React.forwardRef(function LinkBtn(props, ref) { // eslint-disable-line\r\n//   return <NavLink to={props.to} {...props} innerRef={ref} />; // eslint-disable-line\r\n// });\r\n\r\nfunction Albums(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        spacing={3}\r\n      >\r\n        <Grid item md={6} sm={12} xs={12}>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n            \r\n          >\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index > 6) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number One\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n          >\r\n            <GridList cellHeight={160} className={classes.gridListAlbum} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index > 2 && index < 9) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number Three\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n        </Grid>\r\n        <Grid item md={6} sm={12} xs={12}>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n      \r\n             >\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index > 4 && index < 10) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number Two\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n          >\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index % 2) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number Four\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlbums.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Albums);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Favorites.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\settings-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\PapperBlock\\PapperBlock.js",["1735"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'recompose';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GiAbstract014 } from \"react-icons/gi\";\r\nimport styles from './papperStyle-jss';\r\n\r\nclass PapperBlock extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      title,\r\n      desc,\r\n      children,\r\n      whiteBg,\r\n      noMargin,\r\n      colorMode,\r\n      overflowX,\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classNames(classes.root, noMargin && classes.noMargin, colorMode && classes.colorMode)} elevation={0}>\r\n          <div className={classes.descBlock}>\r\n            <span className={classes.iconTitle}>\r\n              <GiAbstract014/>\r\n            </span>\r\n            <div className={classes.titleText}>\r\n              <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\r\n                {title}\r\n              </Typography>\r\n              <Typography component=\"p\" className={classes.description}>\r\n                {desc}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <section className={classNames(classes.content, whiteBg && classes.whiteBg, overflowX && classes.overflowX)}>\r\n            {children}\r\n          </section>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PapperBlock.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   title: PropTypes.string.isRequired,\r\n//   desc: PropTypes.string.isRequired,\r\n//   icon: PropTypes.string,\r\n//   children: PropTypes.node.isRequired,\r\n//   whiteBg: PropTypes.bool,\r\n//   colorMode: PropTypes.bool,\r\n//   noMargin: PropTypes.bool,\r\n//   overflowX: PropTypes.bool,\r\n// };\r\n\r\nPapperBlock.defaultProps = {\r\n  whiteBg: false,\r\n  noMargin: false,\r\n  colorMode: false,\r\n  overflowX: false,\r\n  icon: 'ios-bookmark-outline'\r\n};\r\n\r\nexport default compose(withStyles(styles))(PapperBlock);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\SocialMedia\\jss\\cover-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\LayoutThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\ThemeThumbs.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\MegaMenuThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Timeline\\api\\timelineData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\TopNavigationThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarBigThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\attendanceTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\utility.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\uitypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\authTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\navigationConfig.js",["1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752","1753"],"import React from 'react';\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n\r\n} from \"@material-ui/icons\";\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport ShutterSpeedIcon from '@material-ui/icons/ShutterSpeed';\r\nimport LocalCarWashIcon from '@material-ui/icons/LocalCarWash';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\n\r\nconst navigationConfig = [\r\n  {\r\n    id: \"Main\",\r\n    type: \"group\",\r\n    children: [\r\n      {\r\n        id: \"dashboard\",\r\n        title: \"Home\",\r\n        type: \"item\",\r\n        url: \"/itdashboard\",\r\n        exact: true,\r\n        icon: <HomeIcon />\r\n      },\r\n      {\r\n        id: \"dashes\",\r\n        title: \"DASHBOARDS\",\r\n        type: \"collapse\",\r\n        icon: <Brightness5Icon />,\r\n        badge: {\r\n          title: \"1\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"all stats\",\r\n            title: \"All Posts\",\r\n            type: \"item\",\r\n            url: \"/pages/posts\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"stats\",\r\n            title: \"Add Post\",\r\n            type: \"item\",\r\n            url: \"/pages/posts/add-post\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"configs\",\r\n        title: \"CONFIGURATIONS\",\r\n        type: \"collapse\",\r\n        icon: <Brightness5Icon />,\r\n        badge: {\r\n          title: \"1\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"all configs\",\r\n            title: \"All Posts\",\r\n            type: \"item\",\r\n            url: \"/pages/posts\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"add config\",\r\n            title: \"Add Post\",\r\n            type: \"item\",\r\n            url: \"/pages/posts/add-post\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"users\",\r\n        title: \"STAFF USERS\",\r\n        type: \"collapse\",\r\n        icon: <HowToRegIcon />,\r\n        badge: {\r\n          title: \"2\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"principals\",\r\n            title: \"ADMINSTRATORS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/principals\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"bursars\",\r\n            title: \"BURSARS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/bursars\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"teachers\",\r\n            title: \"TEACHERS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/teachers\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"classes\",\r\n        title: \"CLASSES\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"classes\",\r\n            title: \"CLASSES\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/classes\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"streams\",\r\n            title: \"LEVEL\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/streams\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"parents\",\r\n        title: \"PARENTS\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"parents\",\r\n            title: \"PARENTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/parents\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"students\",\r\n        title: \"STUDENTS\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"students\",\r\n            title: \"STUDENTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/students\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"courses\",\r\n        title: \"COURSES\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"activeaccounts\",\r\n            title: \"UPCOMING\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/upcomingcourses\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"ongoings\",\r\n            title: \"ONGOING\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/ongoingcourses\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"finished\",\r\n            title: \"FINSHED\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/finishedcourses\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"inactive\",\r\n            title: \"INACTIVE\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/inactivecourses\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"fees\",\r\n        title: \"FEES\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"fees\",\r\n            title: \"Fees\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/fees\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"curriculums\",\r\n        title: \"CURRICULUMS\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"curriculums\",\r\n            title: \"CURRICULUMS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/curriculums\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"subjects\",\r\n            title: \"SUBJECTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/subjects\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"attendance\",\r\n        title: \"ATTENDANCE\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"attendance\",\r\n            title: \"ATTENDANCE\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/attendance\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"grading\",\r\n        title: \"GRADING\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"tests\",\r\n            title: \"TESTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/tests\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"excercises\",\r\n            title: \"EXCERCISES\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/excercises\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"assignments\",\r\n            title: \"ASSIGNMENTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/assignments\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"admissions\",\r\n        title: \"ADMISSION\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n\r\n        },\r\n        children: [\r\n          {\r\n            id: \"accepted\",\r\n            title: \"ACCEPTED\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/approved-admissions\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"pending\",\r\n            title: \"PENDING\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/pending-admissions\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"meeting\",\r\n            title: \"MEETING\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/meeting-admissions\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"rejected\",\r\n            title: \"REJECTED\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/rejected-admissions\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n\r\n    ],\r\n  },\r\n];\r\n\r\nexport default navigationConfig;\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\profile-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\imgData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Title.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\landingStyle-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\darkPalette.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\lightPalette.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\palette\\colorfull.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\GeneralCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\PostCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Quote\\Quote.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\themePalette.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\PapperBlock\\papperStyle-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\thumbPreview-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\avatars.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\helpSupport-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Qna.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\ContactForm.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\cardStyle-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\ResultPanel.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\ButtonPanel.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\SideNavMobile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\ui\\link.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\PricingCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\sidebar-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarBigLayout.js",["1754"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Header from '../../components/Header/Header';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport SidebarBig from '../SidebarBig';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass LeftSidebarBigLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide,\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"left-sidebar-big\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <SidebarBig\r\n          dataMenu={navigationConfig}\r\n          loadTransition={loadTransition}\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingLeftBig : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLeftSidebarBigLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  // place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LeftSidebarBigLayout);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\DropMenuLayout.js",["1755"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport HeaderMenu from '../../components/Header/HeaderMenu';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass DropMenuLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      bgPosition,\r\n      changeMode,\r\n      history,\r\n      titleException,\r\n      handleOpenGuide,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <HeaderMenu\r\n          type=\"top-navigation\"\r\n          dataMenu={navigationConfig}\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          openMobileNav={sidebarOpen}\r\n          loadTransition={loadTransition}\r\n          logoLink=\"/itdashboard\"\r\n        />\r\n        <main\r\n          className={\r\n            classNames(\r\n              classes.content,\r\n              classes.highMargin\r\n            )\r\n          }\r\n          id=\"mainContent\"\r\n        >\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.topbarLayout)}>\r\n              <div>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">viola</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDropMenuLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(DropMenuLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarLayout.js",["1756","1757","1758"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport Header from '../../components/Header/Header';\r\nimport Sidebar from './Sidebar';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass LeftSidebarLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"left-sidebar\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <Sidebar\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          loadTransition={loadTransition}\r\n          leftSidebar\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingLeft : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLeftSidebarLayout.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // children: PropTypes.node.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n  // toggleDrawer: PropTypes.func.isRequired,\r\n  // loadTransition: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // sidebarOpen: PropTypes.bool.isRequired,\r\n  // pageLoaded: PropTypes.bool.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // deco: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // place: PropTypes.string.isRequired,\r\n  // titleException: PropTypes.array.isRequired,\r\n  // handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(LeftSidebarLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\MegaMenuLayout.js",["1759"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport HeaderMenu from '../../components/Header/HeaderMenu';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass DropMenuLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <HeaderMenu\r\n          type=\"mega-menu\"\r\n          dataMenu={navigationConfig}\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          openMobileNav={sidebarOpen}\r\n          loadTransition={loadTransition}\r\n          logoLink=\"/itdashboard\"\r\n        />\r\n        <main\r\n          className={\r\n            classNames(\r\n              classes.content,\r\n              classes.highMargin\r\n            )\r\n          }\r\n          id=\"mainContent\"\r\n        >\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.topbarLayout)}>\r\n            \r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDropMenuLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(DropMenuLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\RightSidebarLayout.js",["1760"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport Header from '../../components/Header/Header';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass RightSidebarLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      history,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"right-sidebar\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingRight : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n            \r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n        <Sidebar\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          loadTransition={loadTransition}\r\n          dataMenu={navigationConfig}\r\n          leftSidebar={false}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nRightSidebarLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(RightSidebarLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Contact\\api\\contactData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\chart\\chartData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Counter\\CounterWidget.js",["1761"],"import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CountUp from 'react-countup';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n    padding: 10,\r\n    height: 190,\r\n    marginBottom: 6,\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 126,\r\n      marginBottom: -1,\r\n      alignItems: 'flex-end',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n    '& > *': {\r\n      padding: '0 5px'\r\n    }\r\n  },\r\n  title: {\r\n    color: theme.palette.common.white,\r\n    fontSize: 14,\r\n    [theme.breakpoints.up('sm')]: {\r\n      fontSize: 16,\r\n    },\r\n    fontWeight: 400\r\n  },\r\n  counter: {\r\n    color: theme.palette.common.white,\r\n    fontSize: 28,\r\n    fontWeight: 500\r\n  },\r\n  customContent: {\r\n    textAlign: 'right'\r\n  }\r\n});\r\n\r\nclass CounterWidget extends PureComponent {\r\n  render() {\r\n    const {\r\n      classes,\r\n      color,\r\n      start,\r\n      end,\r\n      duration,\r\n      title,\r\n      children,\r\n      unitBefore,\r\n      unitAfter\r\n    } = this.props;\r\n    return (\r\n      <Paper className={classes.root} style={{ backgroundColor: color }}>\r\n        <div>\r\n          <Typography className={classes.counter}>\r\n            { unitBefore }\r\n            <CountUp start={start} end={end} duration={duration} useEasing />\r\n            { unitAfter }\r\n          </Typography>\r\n          <Typography className={classes.title} variant=\"subtitle1\">{title}</Typography>\r\n        </div>\r\n        <div className={classes.customContent}>\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n// CounterWidget.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   color: PropTypes.string.isRequired,\r\n//   start: PropTypes.number.isRequired,\r\n//   end: PropTypes.number.isRequired,\r\n//   duration: PropTypes.number.isRequired,\r\n//   title: PropTypes.string.isRequired,\r\n//   children: PropTypes.node.isRequired,\r\n//   unitBefore: PropTypes.string,\r\n//   unitAfter: PropTypes.string,\r\n// };\r\n\r\nCounterWidget.defaultProps = {\r\n  unitBefore: '',\r\n  unitAfter: '',\r\n};\r\n\r\nexport default withStyles(styles)(CounterWidget);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\About.js",["1762"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport LocalPhone from '@material-ui/icons/LocalPhone';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Check from '@material-ui/icons/Check';\r\nimport AcUnit from '@material-ui/icons/AcUnit';\r\nimport Adb from '@material-ui/icons/Adb';\r\nimport AllInclusive from '@material-ui/icons/AllInclusive';\r\nimport AssistantPhoto from '@material-ui/icons/AssistantPhoto';\r\nimport imgData from '../../api/images/imgData';\r\nimport Company from '../../containers/HelpSupport/Company';\r\nimport PapperBlock from '../PapperBlock/PapperBlock';\r\nimport styles from './profile-jss';\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    const { classes, data } = this.props;\r\n    return (\r\n      <Grid\r\n        container\r\n        alignItems=\"flex-start\"\r\n        justify=\"flex-start\"\r\n        direction=\"row\"\r\n        spacing={3}\r\n      >\r\n        <Grid item md={7} xs={12}>\r\n          <div>\r\n            <Company />   \r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={5} xs={12}>\r\n          {/* Profile Progress */}\r\n          <div className={classes.progressRoot}>\r\n            <Paper className={classes.styledPaper} elevation={4}>\r\n              <Typography className={classes.title} variant=\"h5\" component=\"h3\">\r\n                <span >Profile Strength: </span>\r\n                <span >Intermediate</span>\r\n              </Typography>\r\n              <Grid container justify=\"center\">\r\n                <Chip\r\n                  avatar={(\r\n                    <Avatar>\r\n                      <Check />\r\n                    </Avatar>\r\n                  )}\r\n                  label=\"60% Progress\"\r\n                  className={classes.chip}\r\n                  color=\"primary\"\r\n                />\r\n              </Grid>\r\n              <LinearProgress variant=\"determinate\" className={classes.progress} value={60} />\r\n            </Paper>\r\n          </div>\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* About Me */}\r\n          <PapperBlock title=\"About Me\" icon=\"ios-contact-outline\" whiteBg noMargin desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sed urna in justo euismod condimentum.\">\r\n            <Divider className={classes.divider} />\r\n            <List dense className={classes.profileList}>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <DateRange />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Born\" secondary=\"Jan 9, 1994\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <LocalPhone />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Phone\" secondary=\"(+62)8765432190\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <LocationOn />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Address\" secondary=\"Chicendo Street no.105 Block A/5A - Barcelona, Spain\" />\r\n              </ListItem>\r\n            </List>\r\n          </PapperBlock>\r\n          <Divider className={classes.divider} />\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* My Albums */}\r\n          <PapperBlock title=\"My Albums (6)\" icon=\"ios-images-outline\" whiteBg desc=\"\">\r\n            <div className={classes.albumRoot}>\r\n              <GridList cellHeight={180} className={classes.gridList}>\r\n                {\r\n                  imgData.map((tile, index) => {\r\n                    if (index >= 4) {\r\n                      return false;\r\n                    }\r\n                    return (\r\n                      <GridListTile key={index.toString()}>\r\n                        <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                        <GridListTileBar\r\n                          title={tile.title}\r\n                          subtitle={(\r\n                            <span>\r\n                              by:&nbsp;\r\n                              {tile.author}\r\n                            </span>\r\n                          )}\r\n                          actionIcon={(\r\n                            <IconButton className={classes.icon}>\r\n                              <InfoIcon />\r\n                            </IconButton>\r\n                          )}\r\n                        />\r\n                      </GridListTile>\r\n                    );\r\n                  })\r\n                }\r\n              </GridList>\r\n            </div>\r\n            <Divider className={classes.divider} />\r\n            <Grid container justify=\"center\">\r\n              <Button color=\"secondary\" className={classes.button}>\r\n                See All\r\n              </Button>\r\n            </Grid>\r\n          </PapperBlock>\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* My Connection Me */}\r\n          <PapperBlock title=\"My Connection\" icon=\"ios-contacts-outline\" whiteBg desc=\"\">\r\n            <List dense className={classes.profileList}>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.orangeAvatar)}>H</Avatar>\r\n                <ListItemText primary=\"Harry Wells\" secondary=\"2 Mutual Connection\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.purpleAvatar)}>J</Avatar>\r\n                <ListItemText primary=\"John DOe\" secondary=\"8 Mutual Connection\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.pinkAvatar)}>V</Avatar>\r\n                <ListItemText primary=\"Victor Wanggai\" secondary=\"12 Mutual Connection\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.greenAvatar)}>H</Avatar>\r\n                <ListItemText primary=\"Baron Phoenix\" secondary=\"10 Mutual Connection\" />\r\n              </ListItem>\r\n            </List>\r\n            <Divider className={classes.divider} />\r\n            <Grid container justify=\"center\">\r\n              <Button color=\"secondary\" className={classes.button}>\r\n                See All\r\n              </Button>\r\n            </Grid>\r\n          </PapperBlock>\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* My Interests */}\r\n          <PapperBlock title=\"My Interests\" icon=\"ios-aperture-outline\" whiteBg desc=\"\">\r\n            <Grid container className={classes.colList}>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.purpleAvatar)}>\r\n                      <AcUnit />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"Snow\" secondary=\"100 Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.greenAvatar)}>\r\n                      <Adb />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"Android\" secondary=\"120 Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.pinkAvatar)}>\r\n                      <AllInclusive />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"All Inclusive\" secondary=\"999+ Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.orangeAvatar)}>\r\n                      <AssistantPhoto />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"My Country\" secondary=\"99+ Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n            </Grid>\r\n          </PapperBlock>\r\n          {/* ----------------------------------------------------------------------*/}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nAbout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  // data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(About);\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\GuideSlider\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Connection.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\SocialMedia\\Cover.js",["1763","1764","1765","1766","1767","1768","1769","1770"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\r\nimport Info from '@material-ui/icons/Info';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './jss/cover-jss';\r\n\r\nconst optionsOpt = [\r\n  'Edit Profile',\r\n  'Change Cover',\r\n  'Option 1',\r\n  'Option 2',\r\n  'Option 3',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nclass Cover extends React.Component {\r\n  state = {\r\n    anchorElOpt: null,\r\n  };\r\n\r\n  handleClickOpt = event => {\r\n    this.setState({ anchorElOpt: event.currentTarget });\r\n  };\r\n\r\n  handleCloseOpt = () => {\r\n    this.setState({ anchorElOpt: null });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      avatar,\r\n      name,\r\n      desc,\r\n      coverImg,\r\n    } = this.props;\r\n    const { anchorElOpt } = this.state;\r\n    return (\r\n      <div className={classes.cover} style={{ backgroundImage: `url(${coverImg})` }}>\r\n        <div className={classes.opt}>\r\n          <IconButton className={classes.button} aria-label=\"Delete\">\r\n            <Info />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-owns={anchorElOpt ? 'long-menu' : null}\r\n            aria-haspopup=\"true\"\r\n            className={classes.button}\r\n            onClick={this.handleClickOpt}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <Typography variant=\"h4\" className={classes.name} gutterBottom>\r\n            {name}\r\n            <VerifiedUser className={classes.verified} />\r\n          </Typography>\r\n          <Typography className={classes.subheading} gutterBottom>\r\n            {desc}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCover.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // avatar: PropTypes.string.isRequired,\r\n  // name: PropTypes.string.isRequired,\r\n  // desc: PropTypes.string.isRequired,\r\n  // coverImg: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Cover);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\Sidebar.js",["1771"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport styles from './sidebar-jss';\r\nimport DumbalinyoloNavigation from '../navigations/DumbalinyoloNavigation';\r\n\r\nclass Sidebar extends React.Component {\r\n  state = {\r\n    status: dummy.user.status,\r\n    anchorEl: null,\r\n    turnDarker: false\r\n  };\r\n\r\n  // Initial header style\r\n  flagDarker = false;\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    const newFlagDarker = (scroll > 30);\r\n    if (this.flagDarker !== newFlagDarker) {\r\n      this.setState({ turnDarker: newFlagDarker });\r\n      this.flagDarker = newFlagDarker;\r\n    }\r\n  }\r\n\r\n  handleOpen = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleChangeStatus = status => {\r\n    this.setState({ status });\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      open,\r\n      toggleDrawerOpen,\r\n      loadTransition,\r\n      leftSidebar,\r\n      dataMenu\r\n    } = this.props;\r\n    const { status, anchorEl, turnDarker } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Hidden lgUp>\r\n          <SwipeableDrawer\r\n            onClose={toggleDrawerOpen}\r\n            onOpen={toggleDrawerOpen}\r\n            open={!open}\r\n            anchor={leftSidebar ? 'left' : 'right'}\r\n          >\r\n            <div className={classes.swipeDrawerPaper}>\r\n              <DumbalinyoloNavigation\r\n                drawerPaper\r\n                leftSidebar={leftSidebar}\r\n                toggleDrawerOpen={toggleDrawerOpen}\r\n                loadTransition={loadTransition}\r\n                status={status}\r\n                anchorEl={anchorEl}\r\n                openMenuStatus={this.handleOpen}\r\n                closeMenuStatus={this.handleClose}\r\n                changeStatus={this.handleChangeStatus}\r\n              />\r\n            </div>\r\n          </SwipeableDrawer>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            onClose={toggleDrawerOpen}\r\n            className={open ? classes.drawer : ''}\r\n            classes={{\r\n              paper: classNames(classes.drawer, classes.drawerPaper, !open ? classes.drawerPaperClose : ''),\r\n            }}\r\n            open={open}\r\n            anchor={leftSidebar ? 'left' : 'right'}\r\n          >\r\n            <DumbalinyoloNavigation\r\n              drawerPaper={open}\r\n              leftSidebar={leftSidebar}\r\n              turnDarker={turnDarker}\r\n              loadTransition={loadTransition}\r\n              status={status}\r\n              anchorEl={anchorEl}\r\n              openMenuStatus={this.handleOpen}\r\n              closeMenuStatus={this.handleClose}\r\n              changeStatus={this.handleChangeStatus}\r\n            />\r\n          </Drawer>\r\n        </Hidden>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  toggleDrawerOpen: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  leftSidebar: PropTypes.bool,\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  leftSidebar: true\r\n};\r\n\r\nexport default withStyles(styles)(Sidebar);\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\BreadCrumb.js",["1772","1773","1774"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport styles from './breadCrumb-jss';\r\n\r\nconst Breadcrumbs = (props) => {\r\n  const {\r\n    classes,\r\n    theme,\r\n  } = props;\r\n  return (\r\n    <section className={classNames(theme === 'dark' ? classes.dark : classes.light, classes.breadcrumbs)}>\r\n      <Route\r\n        path=\"*\"\r\n        render={() => {\r\n          \r\n          \r\n          return (\r\n            <p>\r\n              You are here:\r\n            </p>\r\n          );\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nBreadcrumbs.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // location: PropTypes.object.isRequired,\r\n  // theme: PropTypes.string.isRequired,\r\n  // separator: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Breadcrumbs);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\Header.js",["1775","1776","1777","1778"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserMenu from './UserMenu';\r\nimport SearchUi from '../Search/SearchUi';\r\nimport styles from './header-jss';\r\n\r\nconst elem = document.documentElement;\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    open: false,\r\n    fullScreen: false,\r\n    turnDarker: false,\r\n    showTitle: false\r\n  };\r\n\r\n  // Initial header style\r\n  flagDarker = false;\r\n\r\n  flagTitle = false;\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    const newFlagDarker = (scroll > 30);\r\n    const newFlagTitle = (scroll > 40);\r\n    if (this.flagDarker !== newFlagDarker) {\r\n      this.setState({ turnDarker: newFlagDarker });\r\n      this.flagDarker = newFlagDarker;\r\n    }\r\n    if (this.flagTitle !== newFlagTitle) {\r\n      this.setState({ showTitle: newFlagTitle });\r\n      this.flagTitle = newFlagTitle;\r\n    }\r\n  }\r\n\r\n  openFullScreen = () => {\r\n    this.setState({ fullScreen: true });\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) { /* Firefox */\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) { /* IE/Edge */\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n\r\n  closeFullScreen = () => {\r\n    this.setState({ fullScreen: false });\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n  };\r\n\r\n  turnMode = mode => {\r\n    const { changeMode } = this.props;\r\n\r\n    if (mode === 'light') {\r\n      changeMode('dark');\r\n    } else {\r\n      changeMode('light');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      toggleDrawerOpen,\r\n      margin,\r\n      position,\r\n      gradient,\r\n      mode,\r\n      title,\r\n      openGuide,\r\n      history\r\n    } = this.props;\r\n    const {\r\n      fullScreen,\r\n      open,\r\n      turnDarker,\r\n      showTitle\r\n    } = this.state;\r\n\r\n    const setMargin = (sidebarPosition) => {\r\n      if (sidebarPosition === 'right-sidebar') {\r\n        return classes.right;\r\n      }\r\n      if (sidebarPosition === 'left-sidebar-big') {\r\n        return classes.leftBig;\r\n      }\r\n      return classes.left;\r\n    };\r\n\r\n    return (\r\n      <AppBar\r\n        className={\r\n          classNames(\r\n            classes.appBar,\r\n            classes.floatingBar,\r\n            margin && classes.appBarShift,\r\n            setMargin(position),\r\n            turnDarker && classes.darker,\r\n            gradient ? classes.gradientBg : classes.solidBg\r\n          )\r\n        }\r\n      >\r\n        <Toolbar disableGutters={!open}>\r\n          <Fab\r\n            size=\"small\"\r\n            className={classes.menuButton}\r\n            aria-label=\"Menu\"\r\n            onClick={toggleDrawerOpen}\r\n          >\r\n            <MenuIcon />\r\n          </Fab>\r\n          <Hidden smDown>\r\n            <div className={classes.headerProperties}>\r\n              <div className={classNames(classes.headerAction, showTitle && classes.fadeOut)}>\r\n                {fullScreen ? (\r\n                  <Tooltip title=\"Exit Full Screen\" placement=\"bottom\">\r\n                    <IconButton className={classes.button} onClick={this.closeFullScreen}>\r\n                      <i className=\"ion-ios-crop\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                ) : (\r\n                  <Tooltip title=\"Full Screen\" placement=\"bottom\">\r\n                    <IconButton className={classes.button} onClick={this.openFullScreen}>\r\n                      <i className=\"ion-ios-crop\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                )}\r\n              </div>\r\n              <Typography component=\"h2\" className={classNames(classes.headerTitle, showTitle && classes.show)}>\r\n                {title}\r\n              </Typography>\r\n            </div>\r\n          </Hidden>\r\n          <div className={classes.searchWrapper}>\r\n            <div className={classNames(classes.wrapper, classes.light)}>\r\n              <div className={classes.search}>\r\n                <SearchIcon />\r\n              </div>\r\n              <SearchUi history={history} />\r\n            </div>\r\n          </div>\r\n          <Hidden xsDown>\r\n            <span className={classes.separatorV} />\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // toggleDrawerOpen: PropTypes.func.isRequired,\r\n  // margin: PropTypes.bool.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // position: PropTypes.string.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // title: PropTypes.string.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // openGuide: PropTypes.func.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\HeaderMenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\dummyContents.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\GuideSlider\\guide-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\guideData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\ProfileCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Company.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\sidebar-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\apps\\connectionData.js",["1779"],"import imgApi from '../images/photos';\r\nimport avatarApi from '../images/avatars';\r\nimport one from '../images/one.png';\r\nconst connectionData = [\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[6],\r\n    name: 'John Doe',\r\n    title: 'UX Designer',\r\n    connection: 203,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[2],\r\n    name: 'Jane Doe',\r\n    title: 'Administrator',\r\n    connection: 10,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[7],\r\n    name: 'James Doe',\r\n    title: 'Marketing',\r\n    connection: 18,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[10],\r\n    name: 'Mickey Joe',\r\n    title: 'Teacher Lecture',\r\n    connection: 6,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[5],\r\n    name: 'Janet Doe',\r\n    title: 'UI Designer',\r\n    connection: 18,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[1],\r\n    name: 'Michele Joe',\r\n    title: 'Designer',\r\n    connection: 100,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[9],\r\n    name: 'James Doe',\r\n    title: 'Programmer',\r\n    connection: 20,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[8],\r\n    name: 'Jimmy Doe',\r\n    title: 'Interior Designer',\r\n    connection: 1,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[3],\r\n    name: 'Maya Joe',\r\n    title: 'Contributor',\r\n    connection: 100,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[3],\r\n    name: 'Mayah Joe',\r\n    title: 'Contributor',\r\n    connection: 100,\r\n    verified: false\r\n  },\r\n];\r\n\r\nexport default connectionData;\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavigation.js",["1780","1781","1782","1783","1784","1785","1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1796","1797"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport brand from '../../api/dummy/brand';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport logo from '../../images/logo.svg';\r\nimport Navigation from './Navigation';\r\n\r\n\r\nimport styles from '../layout/sidebar-jss';\r\n\r\nclass DumbalinyoloNavigation extends React.Component {\r\n  state = {\r\n    transform: 0,\r\n  };\r\n\r\n\r\n  componentDidMount = () => {\r\n    // Scroll content to top\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = (event) => {\r\n    const scroll = event.target.scrollTop;\r\n    this.setState({\r\n      transform: scroll\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      turnDarker,\r\n      drawerPaper,\r\n      toggleDrawerOpen,\r\n      loadTransition,\r\n      leftSidebar,\r\n      dataMenu,\r\n      status,\r\n      anchorEl,\r\n      openMenuStatus,\r\n      closeMenuStatus,\r\n      changeStatus,\r\n      isLogin\r\n    } = this.props;\r\n    const { transform } = this.state;\r\n\r\n    const setStatus = st => {\r\n      switch (st) {\r\n        case 'online':\r\n          return classes.online;\r\n        case 'idle':\r\n          return classes.idle;\r\n        case 'bussy':\r\n          return classes.bussy;\r\n        default:\r\n          return classes.offline;\r\n      }\r\n    };\r\n    return (\r\n      <div className={classNames(classes.drawerInner, !drawerPaper ? classes.drawerPaperClose : '')}>\r\n        \r\n        <div\r\n          id=\"sidebar\"\r\n          className={\r\n            classNames(\r\n              classes.menuContainer,\r\n              leftSidebar && classes.rounded,\r\n              isLogin && classes.withProfile\r\n            )\r\n          }\r\n        >\r\n          <Navigation\r\n            loadTransition={loadTransition}\r\n            toggleDrawerOpen={toggleDrawerOpen}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDumbalinyoloNavigation.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // drawerPaper: PropTypes.bool.isRequired,\r\n  // turnDarker: PropTypes.bool,\r\n  // toggleDrawerOpen: PropTypes.func,\r\n  // loadTransition: PropTypes.func,\r\n  // leftSidebar: PropTypes.bool.isRequired,\r\n  // dataMenu: PropTypes.array.isRequired,\r\n  // status: PropTypes.string.isRequired,\r\n  // anchorEl: PropTypes.object,\r\n  // openMenuStatus: PropTypes.func.isRequired,\r\n  // closeMenuStatus: PropTypes.func.isRequired,\r\n  // changeStatus: PropTypes.func.isRequired,\r\n  // isLogin: PropTypes.bool\r\n};\r\n\r\nDumbalinyoloNavigation.defaultProps = {\r\n  turnDarker: false,\r\n  toggleDrawerOpen: () => {},\r\n  loadTransition: () => {},\r\n  anchorEl: null,\r\n  isLogin: true,\r\n};\r\n\r\nexport default withStyles(styles)(DumbalinyoloNavigation);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\UserMenu.js",["1798"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Info from '@material-ui/icons/Info';\r\nimport Warning from '@material-ui/icons/Warning';\r\nimport Check from '@material-ui/icons/CheckCircle';\r\nimport Error from '@material-ui/icons/RemoveCircle';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport avatarApi from '../../api/images/avatars';\r\nimport link from '../../api/ui/link';\r\nimport styles from './header-jss';\r\n\r\nclass UserMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n    openMenu: null\r\n  };\r\n\r\n  handleMenu = menu => (event) => {\r\n    const { openMenu } = this.state;\r\n    this.setState({\r\n      openMenu: openMenu === menu ? null : menu,\r\n      anchorEl: event.currentTarget\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null, openMenu: null });\r\n  };\r\n\r\n  render() {\r\n    const { classes, dark } = this.props;\r\n    const { anchorEl, openMenu } = this.state;\r\n    return (\r\n      <div>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleMenu('notification')}\r\n          color=\"inherit\"\r\n          className={classNames(classes.notifIcon, dark ? classes.dark : classes.light)}\r\n        >\r\n          <Badge className={classes.badge} badgeContent={4} color=\"secondary\">\r\n            <i className=\"ion-ios-bell-outline\" />\r\n          </Badge>\r\n        </IconButton>\r\n        <Menu\r\n          id=\"menu-notification\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          className={classes.notifMenu}\r\n          PaperProps={{\r\n            style: {\r\n              width: 350,\r\n            },\r\n          }}\r\n          open={openMenu === 'notification'}\r\n          onClose={this.handleClose}\r\n        >\r\n          <MenuItem onClick={this.handleClose}>\r\n            <div >\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"User Name\" src={avatarApi[0]} />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={dummy.text.subtitle} secondary={dummy.text.date} />\r\n            </div>\r\n          </MenuItem>\r\n          <Divider variant=\"inset\" />\r\n          <Divider variant=\"inset\" />\r\n          <MenuItem onClick={this.handleClose}>\r\n            <div >\r\n              <ListItemAvatar>\r\n                <Avatar >\r\n                  <Check />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={dummy.text.subtitle} className={classes.textNotif} secondary={dummy.text.date} />\r\n            </div>\r\n          </MenuItem>\r\n          <Divider variant=\"inset\" />\r\n          <MenuItem onClick={this.handleClose}>\r\n            <div >\r\n              <ListItemAvatar>\r\n                <Avatar >\r\n                  <Warning />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={dummy.text.subtitle} className={classes.textNotif} secondary={dummy.text.date} />\r\n            </div>\r\n          </MenuItem>\r\n          <Divider variant=\"inset\" />\r\n          <MenuItem onClick={this.handleClose}>\r\n            <div >\r\n              <ListItemAvatar>\r\n                <Avatar >\r\n                  <Error />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Suspendisse pharetra pulvinar sollicitudin. Aenean ut orci eu odio cursus lobortis eget tempus velit. \" className={classes.textNotif} secondary=\"Jan 9, 2016\" />\r\n            </div>\r\n          </MenuItem>\r\n        </Menu>\r\n        <Button onClick={this.handleMenu('user-setting')}>\r\n          <Avatar\r\n            alt={dummy.user.name}\r\n            src={dummy.user.avatar}\r\n          />\r\n        </Button>\r\n        <Menu\r\n          id=\"menu-appbar\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={openMenu === 'user-setting'}\r\n          onClose={this.handleClose}\r\n        >\r\n          <MenuItem onClick={this.handleClose} component={Link} to={link.profile}>My Profile</MenuItem>\r\n          <MenuItem onClick={this.handleClose} component={Link} to={link.calendar}>My Calendar</MenuItem>\r\n          <MenuItem onClick={this.handleClose} component={Link} to={link.email}>\r\n            My Inbox\r\n            <ListItemIcon>\r\n              <Badge className={classNames(classes.badge, classes.badgeMenu)} badgeContent={2} color=\"secondary\" />\r\n            </ListItemIcon>\r\n          </MenuItem>\r\n          <Divider />\r\n          <MenuItem onClick={this.handleClose} component={Link} to=\"/\">\r\n            <ListItemIcon>\r\n              <ExitToApp />\r\n            </ListItemIcon>\r\n            Log Out\r\n          </MenuItem>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUserMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  dark: PropTypes.bool,\r\n};\r\n\r\nUserMenu.defaultProps = {\r\n  dark: false\r\n};\r\n\r\nexport default withStyles(styles)(UserMenu);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\breadCrumb-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\header-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\MegaMenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\SidebarContent.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\DropListMenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Search\\SearchUi.js",["1799"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport { NavLink } from 'react-router-dom';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport suggestionsApi from '../../api/ui/menu';\r\nimport styles from './search-jss';\r\n\r\nconst menu = [];\r\n\r\nfunction renderInput(inputProps) {\r\n  const { classes, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.inputHeader}\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: ref,\r\n        ...other,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.name, query);\r\n  const parts = parse(suggestion.name, matches);\r\n  return (\r\n    <MenuItem button selected={isHighlighted} component={NavLink} to={suggestion.link}>\r\n      <div>\r\n        {parts.map((part, index) => (\r\n          part.highlight ? (\r\n            <span key={String(index)} style={{ fontWeight: 700 }}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n              {part.text}\r\n            </strong>\r\n          )\r\n        ))}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction renderSuggestionsContainer(options) {\r\n  const { containerProps, children } = options;\r\n\r\n  return (\r\n    <Paper {...containerProps}>\r\n      {children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name;\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n  return inputLength === 0 ? [] : menu.filter(suggestion => {\r\n    const keep = (!inputValue || suggestion.name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1) && count < 5;\r\n\r\n    if (keep) {\r\n      count += 1;\r\n    }\r\n\r\n    return keep;\r\n  });\r\n}\r\n\r\nclass SearchUi extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    suggestionsApi.map(item => {\r\n      if (item.child) {\r\n        item.child.map(itemChild => {\r\n          if (itemChild.link) {\r\n            menu.push(itemChild);\r\n          }\r\n          return menu;\r\n        });\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value),\r\n    });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  handleChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  handleSuggestionSelected = (event, { suggestion, method }) => {\r\n    const { history } = this.props;\r\n    if (method === 'enter') {\r\n      history.push(suggestion.link);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { suggestions, value } = this.state;\r\n\r\n    return (\r\n      <Autosuggest\r\n        theme={{\r\n          container: classes.containerSearch,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion,\r\n        }}\r\n        renderInputComponent={renderInput}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\r\n        renderSuggestionsContainer={renderSuggestionsContainer}\r\n        getSuggestionValue={getSuggestionValue}\r\n        onSuggestionSelected={this.handleSuggestionSelected}\r\n        renderSuggestion={renderSuggestion}\r\n        className={classes.autocomplete}\r\n        inputProps={{\r\n          classes,\r\n          placeholder: 'Search UI',\r\n          value,\r\n          onChange: this.handleChange,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSearchUi.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SearchUi);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\Navigation.js",["1800","1801"],"import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport navigationConfig from \"./navigationConfig\";\r\nimport DumbalinyoloNavGroup from \"./DumbalinyoloNavGroup\";\r\nimport DumbalinyoloNavCollapse from \"./DumbalinyoloNavCollapse\";\r\nimport DumbalinyoloNavItem from \"./DumbalinyoloNavItem\";\r\nimport DumbalinyoloNavLink from \"./DumbalinyoloNavLink\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: theme.mixins.toolbar,\r\n  logoBg: {\r\n    backgroundColor: theme.palette.type !== \"dark\" && \"#18202c\",\r\n    // backgroundColor: \"#18202c\"\r\n  },\r\n  logo: {\r\n    padding: \"1rem\",\r\n    \"& span\": {\r\n      display: \"block\",\r\n      color: \"rgba(41, 113, 245, 0.87)\",\r\n    },\r\n  },\r\n  navCustom: {\r\n    \"& .MuiTypography-root\": {\r\n      fontSize: \".85rem\",\r\n    },\r\n    \"& .MuiListItemIcon-root\": {\r\n      minWidth: \"35px\",\r\n    },\r\n    \"& .MuiCollapse-wrapperInner a\": {\r\n      paddingLeft: \"50px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navigation = (props) => {\r\n  const classes = useStyles(props);\r\n  // handleClick(){\r\n  //   const {toggleDrawerOpen, loadTransition} = props;\r\n  //   toggleDrawerOpen();\r\n  //   loadTransition(false);\r\n\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <List className={classes.navCustom}>\r\n        {navigationConfig.map((item) => (\r\n          <React.Fragment key={item.id}>\r\n            {item.type === \"group\" && <DumbalinyoloNavGroup item={item} />}\r\n\r\n            {item.type === \"collapse\" && <DumbalinyoloNavCollapse item={item} />}\r\n\r\n            {item.type === \"item\" && <DumbalinyoloNavItem item={item} />}\r\n\r\n            {item.type === \"link\" && <DumbalinyoloNavLink item={item} />}\r\n\r\n            {item.type === \"divider\" && <Divider className=\"my-16\" />}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\sidebarBig-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MainMenuBig.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\MainMenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Search\\search-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\ui\\menu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavLink.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MenuProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavCollapse.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavItem.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavGroup.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavBadge.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\NavLinkAdapter.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\admissionTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\curriculumTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\feechoices.js",["1802"],"import {\r\n    GET_FEE_TARGETS_CHOICES,\r\n    GET_FEE_TYPE_CHOICES,\r\n    GET_ACCOUNT_STATUS_CHOICES,\r\n    GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES,\r\n    GET_ACCOUNT_TYPE_CHOICES,\r\n    GET_ASSET_TYPES_CHOICES,\r\n    GET_ASSETS_DEPRECIATION_METHOD_CHOICES,\r\n    GET_GENERAL_GRADING_TYPE_CHOICES,\r\n    GET_ATTENDANCE_STATUS_CHOICES,\r\n    GET_INVENTORY_CHECK_FREQUENCY_CHOICES,\r\n    GET_STUDYNOTES_STATUS_CHOICES,\r\n    GET_STUDY_NOTES_APPROVAL_STATUS_CHOICES,\r\n} from '../types/choiceTypes'\r\n\r\nconst initialState = {\r\n    feetypechoices: [],\r\n    feetargetschoices: [],\r\n    accountstatuschoices: [],\r\n    accountbalancesheetcategorieschoices : [],\r\n    accounttypechoices : [],\r\n    assettypechoices: [],\r\n    assetsdepriciationmethodchoices : [],\r\n    generalgradingtypechoices : [],\r\n    attendancestatuschoices : [],\r\n    studynotesstatuschoices : [],\r\n    studynotesapprovalstatuschoices : [],\r\n\r\n }\r\n\r\n\r\n export default function choices(state = initialState, action){\r\n     switch(action.type){\r\n        case GET_STUDYNOTES_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                studynotesstatuschoices: action.payload\r\n            };\r\n        case GET_STUDY_NOTES_APPROVAL_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                studynotesapprovalstatuschoices: action.payload\r\n            };\r\n        case GET_ATTENDANCE_STATUS_CHOICES:\r\n             return {\r\n                 ...state,\r\n                 attendancestatuschoices: action.payload\r\n             };\r\n        case GET_GENERAL_GRADING_TYPE_CHOICES:\r\n             return {\r\n                 ...state,\r\n                 generalgradingtypechoices: action.payload\r\n             };\r\n        case GET_FEE_TARGETS_CHOICES:\r\n             return {\r\n                 ...state,\r\n                 feetargetschoices: action.payload\r\n             };\r\n        case GET_FEE_TYPE_CHOICES:\r\n            return {\r\n                ...state,\r\n                feetypechoices: action.payload\r\n            };\r\n        case GET_ACCOUNT_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                accountstatuschoices: action.payload\r\n            };\r\n        case GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES:\r\n            return {\r\n                ...state,\r\n                accountbalancesheetcategorieschoices : action.payload\r\n            };\r\n        case GET_ACCOUNT_TYPE_CHOICES:\r\n            return {\r\n                ...state,\r\n                accounttypechoices : action.payload\r\n            };\r\n        case GET_ASSET_TYPES_CHOICES:\r\n            return {\r\n                ...state,\r\n                assettypechoices : action.payload\r\n            };\r\n        case GET_ASSETS_DEPRECIATION_METHOD_CHOICES:\r\n            return {\r\n                ...state,\r\n                assetsdepriciationmethodchoices : action.payload\r\n            };\r\n         default:\r\n             return state;\r\n     }\r\n }\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\choiceTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\fees.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\feeTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\fees\\Fees.js",["1803","1804","1805"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getFees, addFee, editFee } from '../../actions/fees';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddFee from './AddFee';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'amount', label: 'AMOUNT' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'targets', label: 'TARGETS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst FeeItView = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getFees();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editFee(fee.id, fee)    \r\n      else\r\n        props.addFee(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.amount}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.targets}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddFee\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.fees.fees\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getFees, addFee, editFee} ) \r\n  (FeeItView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Controls.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\fees.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\choices.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Input.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Select.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\RadioGroup.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\CheckBox.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\DatePicker.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\ActionButton.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Button.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\DictSelect.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\constants.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\fees\\AddFee.js",["1806","1807"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getFeeTargetsChoices, getFeeTypeChoices} from '../../actions/choices';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  targets: '',\r\n  type: '',\r\n  amount: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddFee = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('targets' in fieldValues)\r\n        temp.targets = fieldValues.targets ? \"\" : \"This field is required.\"\r\n    if ('type' in fieldValues)\r\n        temp.type = fieldValues.type ? \"\" : \"This field is required.\"\r\n    if ('amount' in fieldValues)\r\n        temp.amount = fieldValues.amount ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getFeeTargetsChoices();\r\n        props.getFeeTypeChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"AMOUNT\"\r\n                          name=\"amount\"\r\n                          value={values.amount}\r\n                          onChange={handleInputChange}\r\n                          error={errors.amount}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.DictSelect\r\n                          name=\"type\"\r\n                          label=\"TYPE\"\r\n                          value={values.type}\r\n                          onChange={handleInputChange}\r\n                          options={props.feetypechoices}\r\n                          error={errors.type}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"targets\"\r\n                          label=\"TARGETS\"\r\n                          value={values.targets}\r\n                          onChange={handleInputChange}\r\n                          options={props.feetargetschoices}\r\n                          error={errors.targets}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    feetypechoices: state.feechoices.feetypechoices,\r\n    feetargetschoices: state.feechoices.feetargetschoices\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getFeeTypeChoices, getFeeTargetsChoices} ) (AddFee);","c:\\gosso\\gbc_oms\\frontend\\src\\components\\table\\useTable.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Popup.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\useForm.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\Curriculum.js",["1808","1809","1810"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getCurriculums, addCurriculum, editCurriculum } from '../../actions/curriculums';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddCurriculum from './AddCurriculum';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'code', label: 'CODE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst FeeItView = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCurriculums();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (curriculum, resetForm) => {\r\n      if (curriculum.id > 0)\r\n        props.editCurriculum(curriculum.id, curriculum)    \r\n      else\r\n        props.addCurriculum(curriculum)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Curriculum\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.code}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Curriculum Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCurriculum\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.curriculums.curriculums\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getCurriculums, addCurriculum, editCurriculum} ) \r\n  (FeeItView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\AddCurriculum.js",["1811","1812"],"import React, {useEffect} from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddCurriculum = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default  AddCurriculum;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\curriculums.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\SubjectsAdminView.js",["1813","1814","1815"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getSubjects, addSubject, editSubject } from '../../actions/curriculums';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddSubject from './AddSubject';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'subject_code', label: 'CODE' },\r\n  { id: 'curriculum', label: 'CURRICULUM' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst SubjectAdminView = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getSubjects();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (subject, resetForm) => {\r\n      if (subject.id > 0)\r\n        props.editSubject(subject.id, subject)    \r\n      else\r\n        props.addSubject(subject)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Curriculum\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.subject_code}</TableCell>\r\n                          <TableCell>{item.curriculum}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Curriculum Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddSubject\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.curriculums.subjects,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getSubjects, addSubject, editSubject} ) \r\n  (SubjectAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\AddSubject.js",["1816","1817"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getCurriculums } from '../../actions/curriculums';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n  name: '',\r\n  curriculum: '',\r\n}\r\n\r\n\t\t\t\r\n\r\n\r\n\r\nconst AddSubject = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('curriculum' in fieldValues)\r\n        temp.curriculum = fieldValues.curriculum ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCurriculums();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Select\r\n                          name=\"curriculum\"\r\n                          label=\"CURRICULUM\"\r\n                          value={values.curriculum}\r\n                          onChange={handleInputChange}\r\n                          options={props.curriculums}\r\n                          error={errors.curriculum}\r\n                      />\r\n\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    curriculums: state.curriculums.curriculums\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCurriculums} ) (AddSubject);","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\accounts.js",["1818"],"import {\r\n    ADD_ACCOUNT,\r\n    GET_ACCOUNTS ,\r\n    DELETE_ACCOUNT,\r\n    GET_ACCOUNT,\r\n    EDIT_ACCOUNT,\r\n\r\n\r\n} from '../types/accountTypes';\r\n\r\nconst initialState = {\r\n    accounts: [],\r\n    account: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNTS:\r\n            return {\r\n                ...state,\r\n                accounts: action.payload\r\n            };\r\n        case DELETE_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: state.accounts.filter(account=> account.id !== action.payload)\r\n            };\r\n        case ADD_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: [...state.accounts, action.payload]\r\n            }\r\n        case GET_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account:action.payload\r\n                };\r\n        case EDIT_ACCOUNT:\r\n            const arrayList = state.accounts;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                accounts: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\accountTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AccountsAdminView.js",["1819","1820"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAccounts, editAccount, addAccount } from '../../actions/accounts';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddAccount from './AddAccount';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'account_number', label: 'NUMBER' },\r\n  { id: 'balance', label: 'BALANCE' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'balance_sheet_category', label: 'CATEGORY' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AccountsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAccounts();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (account, resetForm) => {\r\n      if (account.id > 0)\r\n        props.editAccount(account.id, account)    \r\n      else\r\n        props.addAccount(account)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.account_number}</TableCell>\r\n                          <TableCell>{item.balance}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.balance_sheet_category}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Account Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddAccount\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.accounts.accounts\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAccounts, editAccount, addAccount} ) \r\n  (AccountsAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\accounts.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddAccount.js",["1821","1822"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getAccounts } from '../../actions/accounts';\r\nimport { getAccountBalanceSheetCategoriesChoices, getAccountStatusChoices, getAccountTypeChoices} from '../../actions/choices';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  balance: '',\r\n  type: '',\r\n  description: '',\r\n  parent_account: '',\r\n  balance_sheet_category: '',\r\n  active: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddAccount = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('type' in fieldValues)\r\n        temp.type = fieldValues.type ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    if ('balance_sheet_category' in fieldValues)\r\n        temp.balance_sheet_category = fieldValues.balance_sheet_category ? \"\" : \"This field is required.\"\r\n    if ('active' in fieldValues)\r\n        temp.active = fieldValues.active ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAccountStatusChoices();\r\n        props.getAccounts();\r\n        props.getAccountTypeChoices();\r\n        props.getAccountBalanceSheetCategoriesChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"BALANCE\"\r\n                          name=\"balance\"\r\n                          value={values.balance}\r\n                          onChange={handleInputChange}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"type\"\r\n                          label=\"TYPE\"\r\n                          value={values.type}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounttypechoices}\r\n                          error={errors.type}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.DictSelect\r\n                          name=\"balance_sheet_category\"\r\n                          label=\"BALANACE SHEET CATEGORY\"\r\n                          value={values.balance_sheet_category}\r\n                          onChange={handleInputChange}\r\n                          options={props.accountbalancesheetcategorieschoices}\r\n                          error={errors.balance_sheet_category}\r\n                      />\r\n                      <Controls.Select\r\n                          name=\"parent_account\"\r\n                          label=\"PARENT ACCOUNT\"\r\n                          value={values.parent_account}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounts}\r\n                          error={errors.parent_account}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"active\"\r\n                          label=\"STATUS\"\r\n                          value={values.active}\r\n                          onChange={handleInputChange}\r\n                          options={props.accountstatuschoices}\r\n                          error={errors.active}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accounts.accounts,\r\n    accountstatuschoices: state.feechoices.accountstatuschoices,\r\n    accounttypechoices: state.feechoices.accounttypechoices,\r\n    accountbalancesheetcategorieschoices: state.feechoices.accountbalancesheetcategorieschoices,\r\n\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getAccountBalanceSheetCategoriesChoices, getAccounts, getAccountTypeChoices, getAccountStatusChoices} ) \r\n    (AddAccount);","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\inactiveaccounts.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\inactiveaccountTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminInactiveAccounts.js",["1823","1824"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getInActiveAccounts, editInactiveAccount, addInActiveAccount } from '../../actions/inactiveaccounts';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddAccount from './AddAccount';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'account_number', label: 'NUMBER' },\r\n  { id: 'balance', label: 'BALANCE' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'balance_sheet_category', label: 'CATEGORY' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst InActiveAccountsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getInActiveAccounts();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (account, resetForm) => {\r\n      if (account.id > 0)\r\n        props.editInactiveAccount(account.id, account)    \r\n      else\r\n        props.addInActiveAccount(account)\r\n        console.log(account)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Account\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.account_number}</TableCell>\r\n                          <TableCell>{item.balance}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.balance_sheet_category}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Account Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddAccount\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.inactiveaccounts.inactiveaccounts\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getInActiveAccounts, editInactiveAccount, addInActiveAccount} ) \r\n  (InActiveAccountsAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\inactiveaccounts.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\taxes.js",["1825"],"import {\r\n        ADD_TAX,\r\n        GET_TAXES,\r\n        DELETE_TAX,\r\n        EDIT_TAX\r\n    } from '../types/taxTypes';\r\n\r\nconst initialState = {\r\n    taxes: [],\r\n    tax: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_TAXES:\r\n            return {\r\n                ...state,\r\n                taxes: action.payload\r\n            };\r\n        case DELETE_TAX:\r\n            return {\r\n                ...state,\r\n                tax: state.taxes.filter(tax=> tax.id !== action.payload)\r\n            };\r\n        case ADD_TAX:\r\n            return {\r\n                ...state,\r\n                tax: [...state.taxes, action.payload]\r\n            };\r\n        case EDIT_TAX:\r\n            const arrayList = state.taxes;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                taxes: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\taxTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminTaxes.js",["1826","1827","1828"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getTaxes, addTax, editTax } from '../../actions/taxes';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddTax from './AddTax';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\nimport { GiConsoleController } from \"react-icons/gi\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'rate', label: 'RATE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AccountsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getTaxes();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (tax, resetForm) => {\r\n      if (tax.id > 0)\r\n        props.editTax(tax.id, tax)    \r\n      else\r\n        props.addTax(tax)\r\n        console.log(tax)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.rate}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Tax Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddTax\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.taxes.taxes\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getTaxes, addTax, editTax} ) \r\n  (AccountsAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddTax.js",["1829","1830"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  rate: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddTax = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('rate' in fieldValues)\r\n        temp.rate = fieldValues.rate ? \"\" : \"This field is required.\"\r\n    \r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                                  \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"tax\"\r\n                          label=\"TAX\"\r\n                          value={values.tax}\r\n                          onChange={handleInputChange}\r\n                          error={errors.tax}\r\n                      />                    \r\n \r\n                      <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddTax;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\taxes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\currencies.js",["1831"],"import {\r\n        ADD_CURRENCY,\r\n        GET_CURRENCIES,\r\n        EDIT_CURRENCY,\r\n        DELETE_CURRENCY\r\n    } from '../types/currencyTypes';\r\n\r\nconst initialState = {\r\n    currencies: [],\r\n    currency: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CURRENCIES:\r\n            return {\r\n                ...state,\r\n                currencies: action.payload\r\n            };\r\n        case DELETE_CURRENCY:\r\n            return {\r\n                ...state,\r\n                currency: state.currencies.filter(currency=> currency.id !== action.payload)\r\n            };\r\n        case ADD_CURRENCY:\r\n            return {\r\n                ...state,\r\n                currency: [...state.currencies, action.payload]\r\n            };\r\n        case EDIT_CURRENCY:\r\n            const arrayList = state.currencies;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                currencies: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\currencyTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminCurrencies.js",["1832","1833"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getCurrencies, addCurrency, editCurrency } from '../../actions/currencies';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddCurrency from './AddCurrency';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'symbol', label: 'SYMBOL' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminCurrencies = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCurrencies();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (currency, resetForm) => {\r\n      if (currency.id > 0)\r\n        props.editCurrency(currency.id, currency)    \r\n      else\r\n        props.addCurrency(currency)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.symbol}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCurrency\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.currencies.currencies,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getCurrencies, addCurrency, editCurrency} ) \r\n  (AdminCurrencies);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddCurrency.js",["1834","1835"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  symbol: '',\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst AddCurrency = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('symbol' in fieldValues)\r\n        temp.symbol = fieldValues.symbol ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                            label=\"SYMBOL\"\r\n                            name=\"symbol\"\r\n                            value={values.symbol}\r\n                            onChange={handleInputChange}\r\n                            error={errors.symbol}\r\n                    /> \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddCurrency;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\currencies.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\workbooks.js",["1836"],"import {\r\n        ADD_WORKBOOK,\r\n        GET_WORKBOOKS,\r\n        DELETE_WORKBOOK,\r\n        GET_WORKBOOK,\r\n        EDIT_WORKBOOK\r\n    } from '../types/workbookTypes';\r\n\r\nconst initialState = {\r\n    workbooks: [],\r\n    workbook: [],\r\n    loading: false\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_WORKBOOKS:\r\n            return {\r\n                ...state,\r\n                workbooks: action.payload\r\n            };\r\n        case DELETE_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook: state.workbooks.filter(workbook=> workbook.id !== action.payload)\r\n            };\r\n        case ADD_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook: [...state.workbooks, action.payload]\r\n            }\r\n        case GET_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook:action.payload\r\n                };\r\n        case EDIT_WORKBOOK:\r\n            const arrayList = state.workbooks;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                workbooks: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\workbookTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminWorkBooks.js",["1837","1838"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getWorkbooks, addWorkbook, editWorkbook } from '../../actions/workbooks';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddWorkBook from './AddWorkBook';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminWorkBooks = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getWorkbooks();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (workbook, resetForm) => {\r\n      if (workbook.id > 0)\r\n        props.editWorkbook(workbook.id, workbook)    \r\n      else\r\n        props.addWorkbook(workbook)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search WorkBook\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"WorkBook Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddWorkBook\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.workbooks.workbooks\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getWorkbooks, addWorkbook, editWorkbook} ) \r\n  (AdminWorkBooks);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddWorkBook.js",["1839","1840"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddWorkBook = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddWorkBook;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\workbooks.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\ledgers.js",["1841"],"import {\r\n        GET_LEDGERS,\r\n        DELETE_LEDGER,\r\n        GET_LEDGER,\r\n        EDIT_LEDGER,\r\n        ADD_LEDGER\r\n    } from '../types/ledgerTypes';\r\n\r\nconst initialState = {\r\n    ledgers: [],\r\n    ledger: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_LEDGERS:\r\n            return {\r\n                ...state,\r\n                ledgers: action.payload\r\n            };\r\n        case DELETE_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger: state.ledgers.filter(ledger=> ledger.id !== action.payload)\r\n            };\r\n        case GET_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger:action.payload\r\n                };\r\n        case ADD_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger: [...state.ledgers, action.payload]\r\n            };\r\n        case EDIT_LEDGER:\r\n            const arrayList = state.ledgers;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                ledgers: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\ledgerTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminLedger.js",["1842","1843"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getLedgers, addLedger, editLedger } from '../../actions/ledgers';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddLedger from './AddLedger';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminLedgers = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getLedgers();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (ledger, resetForm) => {\r\n    if (ledger.id > 0)\r\n        props.editLedger(ledger.id, ledger)    \r\n      else\r\n        props.addLedger(ledger)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Ledger\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Ledger Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddLedger\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.ledgers.ledgers,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {  getLedgers, addLedger, editLedger } ) \r\n  (AdminLedgers);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddLedger.js",["1844","1845"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddLedger = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddLedger;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\ledgers.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\journals.js",["1846"],"import {\r\n        GET_JOURNALS,\r\n        DELETE_JOURNAL,\r\n        GET_JOURNAL,\r\n        ADD_JOURNAL,\r\n        EDIT_JOURNAL\r\n    } from '../types/journalTypes';\r\n\r\nconst initialState = {\r\n    journals: [],\r\n    journal: [],\r\n    loading: false\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_JOURNALS:\r\n            return {\r\n                ...state,\r\n                journals: action.payload\r\n            };\r\n        case DELETE_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal: state.journals.filter(journal=> journal.id !== action.payload)\r\n            };\r\n        case GET_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal:action.payload\r\n                };\r\n        case ADD_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal: [...state.journals, action.payload]\r\n            }\r\n        case EDIT_JOURNAL:\r\n            const arrayList = state.journals;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                journals: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\journalTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\JournalsAdminView.js",["1847","1848","1849","1850"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getJournals, addJournal, editJournal} from '../../actions/journals';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddWorkBook from './AddWorkBook';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\nimport AddJournal from \"./AddJournal\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'description', label: 'DESCRIPTION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst JournalsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getJournals();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (journal, resetForm) => {\r\n      if (journal.id > 0)\r\n        props.editJournal(journal.id, journal)    \r\n      else\r\n        props.addJournal(journal)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Journal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.description}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CodeIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Journal Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddJournal\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.journals.journals,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getJournals, addJournal, editJournal} ) \r\n  (JournalsAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddJournal.js",["1851","1852"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  description: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddJournal = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"description\"\r\n                        label=\"DESCRIPTION\"\r\n                        value={values.description}\r\n                        onChange={handleInputChange}\r\n                        error={errors.description}\r\n                    /> \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddJournal;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\journals.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\people.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\assets.js",["1853"],"import {\r\n        ADD_ASSET,\r\n        GET_ASSETS,\r\n        DELETE_ASSET,\r\n        GET_ASSET,\r\n        EDIT_ASSET\r\n    } from '../types/assetTypes';\r\n\r\nconst initialState = {\r\n    assets: [],\r\n    asset: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ASSETS:\r\n            return {\r\n                ...state,\r\n                assets: action.payload\r\n            };\r\n        case DELETE_ASSET:\r\n            return {\r\n                ...state,\r\n                asset: state.assets.filter(asset=> asset.id !== action.payload)\r\n            };\r\n        case ADD_ASSET:\r\n            return {\r\n                ...state,\r\n                asset: [...state.assets, action.payload]\r\n            }\r\n        case GET_ASSET:\r\n            return {\r\n                ...state,\r\n                asset:action.payload\r\n                };\r\n        case EDIT_ASSET:\r\n            const arrayList = state.assets;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                assets: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\assetTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\peopleTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AssetsAdminView.js",["1854","1855"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAssets, addAsset, editAsset} from '../../actions/assets';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddAsset from './AddAsset';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'reference_number', label: 'CODE' },\r\n  { id: 'initial_value', label: 'INITIAL VALUE' },\r\n  { id: 'category', label: 'CATEGORY' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AssetsAdminView= props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAssets();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const addOrEdit = (asset, resetForm) => {\r\n      if (asset.id > 0)\r\n        props.editAsset(asset.id, asset)    \r\n      else\r\n        props.addAsset(asset)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Journal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.reference_number}</TableCell>\r\n                          <TableCell>{item.initial_value}</TableCell>\r\n                          <TableCell>{item.category}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Asset Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddAsset\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.assets.assets,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getAssets, addAsset, editAsset} ) \r\n  (AssetsAdminView);\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\assets.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddAsset.js",["1856","1857","1858","1859","1860","1861","1862","1863"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getAccounts } from '../../actions/accounts';\r\nimport { getAdminBursars } from '../../actions/people';\r\nimport { getAssetTypesChoices, getAssetsDepriciationMethodChoices} from '../../actions/choices';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  category: '',\r\n  description: '',\r\n  initial_value: '',\r\n  credit_account: '',\r\n  depreciation_period: '',\r\n  init_date: null,\r\n  depreciation_method: '',\r\n  salvage_value: '',\r\n  created_by: '',\r\n}\r\n\r\n\r\n\r\nconst AddAsset = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('category' in fieldValues)\r\n        temp.category = fieldValues.category ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    if ('initial_value' in fieldValues)\r\n        temp.initial_value = fieldValues.initial_value ? \"\" : \"This field is required.\"\r\n    if ('credit_account' in fieldValues)\r\n        temp.credit_account = fieldValues.credit_account ? \"\" : \"This field is required.\"\r\n    if ('depreciation_period:' in fieldValues)\r\n        temp.depreciation_period = fieldValues.depreciation_period ? \"\" : \"This field is required.\"\r\n    if ('init_date' in fieldValues)\r\n        temp.init_date = fieldValues.init_date ? \"\" : \"This field is required.\"\r\n    if ('depreciation_method' in fieldValues)\r\n        temp.depreciation_method = fieldValues.depreciation_method ? \"\" : \"This field is required.\"\r\n    if ('salvage_value' in fieldValues)\r\n        temp.salvage_value = fieldValues.salvage_value ? \"\" : \"This field is required.\"\r\n    if ('created_by' in fieldValues)\r\n        temp.created_by = fieldValues.created_by ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminBursars();\r\n        props.getAccounts();\r\n        props.getAssetTypesChoices();\r\n        props.getAssetsDepriciationMethodChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"INITIAL VALUE\"\r\n                          name=\"initial_value\"\r\n                          value={values.initial_value}\r\n                          onChange={handleInputChange}\r\n                          error={errors.initial_value}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DEPRECIATION PERIOD\"\r\n                          name=\"depreciation_period\"\r\n                          value={values.depreciation_period}\r\n                          onChange={handleInputChange}\r\n                          error={errors.depreciation_period}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"category\"\r\n                          label=\"CATEGORY\"\r\n                          value={values.category}\r\n                          onChange={handleInputChange}\r\n                          options={props.assettypechoices}\r\n                          error={errors.category}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"depreciation_method\"\r\n                          label=\"DEPRECIATION METHOD\"\r\n                          value={values.depreciation_method}\r\n                          onChange={handleInputChange}\r\n                          options={props.assetsdepriciationmethodchoices}\r\n                          error={errors.depreciation_method}\r\n                      />                 \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Select\r\n                          name=\"credit_account\"\r\n                          label=\"CREDIT ACCOUNT\"\r\n                          value={values.parent_account}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounts}\r\n                          error={errors.parent_account}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"SALVAGE VALUE\"\r\n                          name=\"salvage_value\"\r\n                          value={values.salvage_value}\r\n                          onChange={handleInputChange}\r\n                          error={errors.salvage_value}\r\n                      />\r\n                      <Controls.Select\r\n                          name=\"created_by\"\r\n                          label=\"CREDIT ACCOUNT\"\r\n                          value={values.created_by}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounts}\r\n                          error={errors.created_by}\r\n                      />\r\n                      <input  \r\n                        name=\"init_date\"\r\n                        value={values.init_date}\r\n                        type=\"date\" \r\n                        className=\"form-control\"  \r\n                        onChange={handleInputChange} \r\n                        />\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accounts.accounts,\r\n    assettypechoices: state.feechoices.assettypechoices,\r\n    assetsdepriciationmethodchoices: state.feechoices.assetsdepriciationmethodchoices,\r\n    staffusers: state.people.adminbursars,\r\n    \r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getAccounts, getAssetTypesChoices, getAssetsDepriciationMethodChoices, getAdminBursars} ) \r\n    (AddAsset);\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\people.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\classes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\classTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\GradeSelect.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\UserSelect.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AdminClass.js",["1864","1865"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getClasses, addClass, editClass } from '../../actions/classes';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddClass from './AddClass';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'max_population', label: 'REQUIRED POPULATION' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'year', label: 'YEAR' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminClass = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getClasses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (classi, resetForm) => {\r\n      if (classi.id > 0)\r\n        props.editClass(classi.id, classi)    \r\n      else\r\n        props.addClass(classi)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Class\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.max_population}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>{item.year}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddClass\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.classes.classes,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getClasses, addClass, editClass } ) \r\n  (AdminClass);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AddClass.js",["1866","1867"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getStudentsClassStatusChoices } from '../../actions/choices';\r\nimport { getStreams } from '../../actions/classes';\r\nimport { getAdminTeachers } from '../../actions/people';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  \r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n    name: '',\r\n    stream: '',\r\n    max_population: '',\r\n    class_teacher: '',\r\n    year: '',\r\n    status: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddClass = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('stream' in fieldValues)\r\n        temp.stream = fieldValues.stream ? \"\" : \"This field is required.\"\r\n    if ('max_population' in fieldValues)\r\n        temp.max_population = fieldValues.max_population ? \"\" : \"This field is required.\"\r\n    if ('class_teacher' in fieldValues)\r\n        temp.class_teacher = fieldValues.class_teacher ? \"\" : \"This field is required.\"\r\n    if ('year' in fieldValues)\r\n        temp.year = fieldValues.year ? \"\" : \"This field is required.\"\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStudentsClassStatusChoices();\r\n        props.getStreams();\r\n        props.getAdminTeachers();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"POPULATION LIMIT\"\r\n                          name=\"max_population\"\r\n                          value={values.max_population}\r\n                          onChange={handleInputChange}\r\n                          error={errors.max_population}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"status\"\r\n                          label=\"STATUS\"\r\n                          value={values.status}\r\n                          onChange={handleInputChange}\r\n                          options={props.studentclassstatuschoices}\r\n                          error={errors.status}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.GradeSelect\r\n                          name=\"stream\"\r\n                          label=\"GRADE\"\r\n                          value={values.stream}\r\n                          onChange={handleInputChange}\r\n                          options={props.streams}\r\n                          error={errors.stream}\r\n                      />\r\n                      <Controls.UserSelect\r\n                          name=\"class_teacher\"\r\n                          label=\"CLASS TEACHER\"\r\n                          value={values.class_teacher}\r\n                          onChange={handleInputChange}\r\n                          options={props.adminteachers}\r\n                          error={errors.class_teacher}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"YEAR\"\r\n                          name=\"year\"\r\n                          value={values.year}\r\n                          onChange={handleInputChange}\r\n                          error={errors.year}\r\n                      />\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    streams: state.classes.streams,\r\n    studentclassstatuschoices: state.classes.studentclassstatuschoices,\r\n    adminteachers: state.people.adminteachers,\r\n\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getStudentsClassStatusChoices, getStreams, getAdminTeachers } ) \r\n    (AddClass);","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\classes.js",["1868","1869"],"import axios from 'axios';\r\nimport {\r\n        ADD_CLASS,\r\n        GET_CLASSES,\r\n        GET_CLASS,\r\n        EDIT_CLASS,\r\n        ADD_STREAM,\r\n        GET_STREAMS,\r\n        EDIT_STREAM,\r\n    } from '../types/classTypes';\r\nimport { \r\n    classesURL, \r\n    classstreamsURL,\r\n    classsubjectsURL,\r\n    classstudentsURL,\r\n} from '../constants';\r\n\r\n// Get\r\nexport const getClasses = () => dispatch => {\r\n    axios.get(classesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CLASSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addClass = (classi) => dispatch => {\r\n    axios.post(classesURL, classi)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_CLASS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getClass = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/classes/classes/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CLASS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editClass = (id, classi) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/classes/classes/${id}/`, classi)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_CLASS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStreams = () => dispatch => {\r\n    axios.get(classstreamsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_STREAMS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addStream = (stream) => dispatch => {\r\n    axios.post(classstreamsURL, stream)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STREAM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Edit\r\nexport const editStream = (id, stream) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/classes/class-streams/${id}/`, stream)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STREAM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AdminStream.js",["1870","1871"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getStreams, addStream, editStream } from '../../actions/classes';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddStream from './AddStream';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'grade', label: 'NAME' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStream = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStreams();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (stream, resetForm) => {\r\n      if (stream.id > 0)\r\n        props.editStream(stream.id, stream)    \r\n      else\r\n        props.addStream(stream)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Class\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.grade}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Stream Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddStream\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.classes.streams,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getStreams, addStream, editStream } ) \r\n  (AdminStream);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AddStream.js",["1872","1873"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  \r\n}));\r\n\r\nconst initialFValues = {\r\n    grade: '',\r\n}\r\n\r\n\r\n\r\nconst AddStream = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('grade' in fieldValues)\r\n        temp.grade = fieldValues.grade ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"grade\"\r\n                          label=\"GRADE\"\r\n                          value={values.grade}\r\n                          onChange={handleInputChange}\r\n                          error={errors.grade}\r\n                      />             \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddStream;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminBursars.js",["1874","1875","1876"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminBursars, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from './AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminBursars = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminBursars();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addBursar(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Teacher\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"BURSAR Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminbursars,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminBursars, addBursar} ) \r\n  (AdminBursars);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AddBursar.js",["1877","1878"],"import React from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  email: '',\r\n  username: '',\r\n  password: '',\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst AddBursar = props => {\r\n  const { addOrEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('email' in fieldValues)\r\n        temp.email = fieldValues.email ? \"\" : \"This field is required.\"\r\n    if ('username' in fieldValues)\r\n        temp.username = fieldValues.username ? \"\" : \"This field is required.\"\r\n    if ('password' in fieldValues)\r\n        temp.password = fieldValues.password ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"email\"\r\n                          label=\"EMAIL\"\r\n                          value={values.email}\r\n                          onChange={handleInputChange}\r\n                          error={errors.email}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"USERNAME\"\r\n                          name=\"username\"\r\n                          value={values.username}\r\n                          onChange={handleInputChange}\r\n                          error={errors.username}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        label=\"PASSWORD\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleInputChange}\r\n                        error={errors.password}\r\n                    /> \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nexport default AddBursar;\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminTeachers.js",["1879","1880","1881"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminTeachers, addTeacher } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from './AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminTeachers = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminTeachers();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addTeacher(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Principal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Principal Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminteachers,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminTeachers, addTeacher} ) \r\n  (AdminTeachers);\r\n\r\n  \r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminPrincipals.js",["1882","1883","1884"],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\AdminStudents.js",["1885","1886"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudents, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from '../staff/AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudents = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudents();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addBursar(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/students/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Teacher\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <PermIdentityIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"BURSAR Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminstudents,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudents, addBursar} ) \r\n  (AdminStudents);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\parents\\AdminParents.js",["1887","1888","1889"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminParents, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from '../staff/AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminParents = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminParents();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addBursar(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Teacher\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"BURSAR Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminparents,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminParents, addBursar} ) \r\n  (AdminParents);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendances.js",["1890","1891"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminAttendances, editAdminAttendance, addAdminAttendance } from '../../actions/attendances';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport MarkRegister from './AddAttendance';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'date', label: 'DATE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'recorded_by', label: 'TEACHER' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminAttendances = props => {\r\n    // const [records, setRecords] = useState([])\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminAttendances();\r\n    }\r\n    console.log('mount it!');\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editAdminAttendance(fee.id, fee)    \r\n      else\r\n        props.addAdminAttendance(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/attendance/${id}`)\r\n  }\r\n\r\n  \r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.date}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.recorded_by}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Register Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <MarkRegister\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.adminattendances.adminattendances,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminAttendances, editAdminAttendance, addAdminAttendance} ) \r\n  (AdminAttendances);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AddAttendance.js",["1892","1893"],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\attendances.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminApprovedAdmissions.js",["1894","1895","1896"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAcceptedAdmissions, addAdmission, editAcceptedAdmission } from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminApprovedAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAcceptedAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editFee(fee.id, fee)    \r\n      else\r\n        props.addFee(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.acceptedadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAcceptedAdmissions, addAdmission, editAcceptedAdmission} ) \r\n  (AdminApprovedAdmissions);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\admissions.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AddAdmission.js",["1897","1898"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getStudentProfiles } from '../../actions/people';\r\nimport { getClasses } from  '../../actions/classes';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    klass: '', \r\n    student: '',\r\n}\r\n\r\n\r\n\r\nconst Apply = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('klass' in fieldValues)\r\n        temp.klass = fieldValues.klass ? \"\" : \"This field is required.\"\r\n    if ('student' in fieldValues)\r\n        temp.student = fieldValues.student ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStudentProfiles();\r\n        props.getClasses();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Select\r\n                            name=\"klass\"\r\n                            label=\"CLASS\"\r\n                            value={values.klass}\r\n                            onChange={handleInputChange}\r\n                            options={props.classes}\r\n                            error={errors.klass}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.UserSelect\r\n                          name=\"student\"\r\n                          label=\"APPLICANT\"\r\n                          value={values.student}\r\n                          onChange={handleInputChange}\r\n                          options={props.studentprofiles}\r\n                          error={errors.student}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    classes: state.classes.classes,\r\n    studentprofiles: state.people.studentprofiles,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getClasses, getStudentProfiles} ) (Apply);\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminRejectedAdmissions.js",["1899","1900","1901"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getRejectedAdmissions, addAdmission, editRejectedAdmission } from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminRejectedAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getRejectedAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editRejectedAdmission(fee.id, fee)    \r\n      else\r\n        props.addAdmission(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.rejectedadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getRejectedAdmissions, addAdmission, editRejectedAdmission} ) \r\n  (AdminRejectedAdmissions);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminPendingAdmissions.js",["1902","1903","1904"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getPendingAdmissions, addAdmission, editPendingAdmission } from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminPendingAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getPendingAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editPendingAdmission(fee.id, fee)    \r\n      else\r\n        props.addAdmission(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.pendingadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getPendingAdmissions, addAdmission, editPendingAdmission } ) \r\n  (AdminPendingAdmissions);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminMeetingAdmissions.js",["1905","1906","1907"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getMeetingAdmissions, addAdmission, editMeetingAdmission} from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminMeetingAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getMeetingAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editMeetingAdmission(fee.id, fee)    \r\n      else\r\n        props.addAdmission(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.meetingadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getMeetingAdmissions, addAdmission, editMeetingAdmission} ) \r\n  (AdminMeetingAdmissions);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\gradings.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\gradingTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentTests.js",["1908","1909","1910"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudentTests, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentTests = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentTests();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/tests/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudenttests,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentTests, addGrade, editGrade} ) \r\n  (AdminStudentTests);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AddGrade.js",["1911","1912"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getGeneralGradingTypeChoices } from '../../actions/choices';\r\nimport { getClasses } from '../../actions/classes';\r\nimport { getTeacherProfiles } from '../../actions/people';\r\nimport { getSubjects } from '../../actions/curriculums';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n    name: '',\r\n    klass: '',\r\n    total_marks: '',\r\n    type: '',\r\n    subject: '',\r\n    recorded_by: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddGrade = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('klass' in fieldValues)\r\n        temp.klass = fieldValues.klass ? \"\" : \"This field is required.\"\r\n    if ('type' in fieldValues)\r\n        temp.type = fieldValues.type ? \"\" : \"This field is required.\"\r\n    if ('total_marks' in fieldValues)\r\n        temp.total_marks = fieldValues.total_marks ? \"\" : \"This field is required.\"\r\n    if ('subject' in fieldValues)\r\n        temp.subject = fieldValues.subject ? \"\" : \"This field is required.\"\r\n    if ('recorded_by' in fieldValues)\r\n        temp.recorded_by = fieldValues.recorded_by ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getClasses();\r\n        props.getTeacherProfiles();\r\n        props.getSubjects();\r\n        props.getGeneralGradingTypeChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"TOTAL MARKS\"\r\n                          name=\"total_marks\"\r\n                          value={values.total_marks}\r\n                          onChange={handleInputChange}\r\n                          error={errors.total_marks}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"type\"\r\n                          label=\"TYPE\"\r\n                          value={values.type}\r\n                          onChange={handleInputChange}\r\n                          options={props.generalgradingtypechoices}\r\n                          error={errors.type}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Select\r\n                          name=\"subject\"\r\n                          label=\"SUBJECT\"\r\n                          value={values.subject}\r\n                          onChange={handleInputChange}\r\n                          options={props.subjects}\r\n                          error={errors.subject}\r\n                      />\r\n                      <Controls.Select\r\n                          name=\"klass\"\r\n                          label=\"CLASS\"\r\n                          value={values.klass}\r\n                          onChange={handleInputChange}\r\n                          options={props.classes}\r\n                          error={errors.klass}\r\n                      />\r\n                      <Controls.UserSelect\r\n                          name=\"recorded_by\"\r\n                          label=\"TEACHER\"\r\n                          value={values.recorded_by}\r\n                          onChange={handleInputChange}\r\n                          options={props.teacherprofiles}\r\n                          error={errors.recorded_by}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    generalgradingtypechoices: state.feechoices.generalgradingtypechoices,\r\n    classes: state.classes.classes,\r\n    teacherprofiles: state.people.teacherprofiles,\r\n    subjects: state.curriculums.subjects,\r\n\r\n\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getClasses, getGeneralGradingTypeChoices, getTeacherProfiles, getSubjects} ) \r\n    (AddGrade);","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\gradings.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentAssignments.js",["1913","1914","1915"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudentAssignments, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentAssignments = props => {\r\n    const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentAssignments();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/assignments/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentassignments,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentAssignments, addGrade, editGrade} ) \r\n  (AdminStudentAssignments);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercises.js",["1916","1917","1918"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudentExcercises, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentExcercises = props => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentExcercises();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/excercises/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentexcercises,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentExcercises, addGrade, editGrade} ) \r\n  (AdminStudentExcercises);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\StudentProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Assignments.js",["1919","1920"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'TEST' },\r\n  { id: 'totalmarks', label: 'TOTAL MARKS' },\r\n  { id: 'subject', label: 'SUBJECT' },\r\n  { id: 'score', label: 'STUDENT SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\nconst Asignments = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/assignment-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.subject}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Asignments;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Attendance.js",["1921","1922"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'attendance', label: 'DATE' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Attendance = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/attendance-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.attendance}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Attendance;\r\n\r\n  \r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Excercises.js",["1923","1924"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'TEST' },\r\n  { id: 'totalmarks', label: 'TOTAL MARKS' },\r\n  { id: 'subject', label: 'SUBJECT' },\r\n  { id: 'score', label: 'STUDENT SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\nconst Excercises = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/excercise-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.subject}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Excercises;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\ProfileBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Tests.js",["1925","1926"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'TEST' },\r\n  { id: 'totalmarks', label: 'TOTAL MARKS' },\r\n  { id: 'subject', label: 'SUBJECT' },\r\n  { id: 'score', label: 'STUDENT SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\nconst Tests = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/test-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.subject}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Tests;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendance.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AttendanceBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\Records.js",["1927","1928","1929"],"import React, { useEffect, useState } from \"react\"\r\nimport {  editAttendanceRecord, addAttendanceRecord } from '../../actions/attendances';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from 'axios';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddRecord from './AddRecord';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'attendance', label: 'DATE' },\r\n  { id: 'student', label: 'STUDENT' },\r\n  { id: 'status', label: 'ATTENDANCE STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst Records = props => {\r\n    // const [records, setRecords] = useState([])\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [records, setRecords] = useState([])\r\n\r\n    const {id} =props.data\r\n\r\n\r\n  \r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editAttendanceRecord(fee.id, fee)    \r\n      else\r\n        console.log(fee)        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/attendance/student-attendance-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Record\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.attendance}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Edit Record\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddRecord\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(\r\n  null, \r\n  {editAttendanceRecord, addAttendanceRecord} ) \r\n  (Records);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AddRecord.js",["1930","1931"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getAttendanceStatusChoices } from '../../actions/choices';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    status: '', \r\n}\r\n\r\n\r\n\r\nconst MarkRegister = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAttendanceStatusChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.DictSelect\r\n                            name=\"status\"\r\n                            label=\"ATTENDANCE STATUS\"\r\n                            value={values.status}\r\n                            onChange={handleInputChange}\r\n                            options={props.attendancestatuschoices}\r\n                            error={errors.status}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    attendancestatuschoices: state.feechoices.attendancestatuschoices,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAttendanceStatusChoices} ) (MarkRegister);","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\TestRecords.js",["1932","1933","1934","1935"],"import React, { useEffect, useState } from \"react\"\r\nimport {  editTestRecord } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from 'axios';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport EditRecord from './EditRecord';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'student', label: 'STUDENT' },\r\n  { id: 'totalmarks', label: 'TOTAL' },\r\n  { id: 'score', label: 'SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TestRecords = props => {\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [records, setRecords] = useState([])\r\n\r\n    const {id} =props.data\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editTestRecord(fee.id, fee)    \r\n      else\r\n        console.log(fee)        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/grading/grading-test-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Record\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Edit Record\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <EditRecord\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(\r\n  null, \r\n  { editTestRecord} ) \r\n  (TestRecords);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\GradingBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminGradingTest.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\ExcerciseRecords.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\EditRecord.js",["1936","1937"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    score: '', \r\n}\r\n\r\n\r\n\r\nconst EditRecord = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('score' in fieldValues)\r\n        temp.score = fieldValues.score ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                            name=\"score\"\r\n                            label=\"STUDENT SCORE\"\r\n                            value={values.score}\r\n                            onChange={handleInputChange}\r\n                            error={errors.score}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default EditRecord;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercise.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminAssignment.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\test\\StudentLog.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\test\\TeacherLog.js",[],["1938","1939"],"c:\\gosso\\gbc_oms\\frontend\\src\\test\\BursarLog.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\auth\\Login.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\auth.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\dashboard\\TeacherHome.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\SliderWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\dashboard\\dashboard-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\PerformanceChartWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\DateWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\CounterIconsWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\TaskWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\WeatherWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\CalculatorWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\TeacherLayout.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\TimelineWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\ContactWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\widget-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\MegaMenuLayout.js",["1940"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarBigLayout.js",["1941"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarLayout.js",["1942","1943","1944"],"import React, { Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport Header from '../../components/Header/Header';\r\nimport Sidebar from './Sidebar';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass LeftSidebarLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      handleOpenGuide\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"left-sidebar\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <Sidebar\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          loadTransition={loadTransition}\r\n          leftSidebar\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingLeft : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLeftSidebarLayout.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // children: PropTypes.node.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n  // toggleDrawer: PropTypes.func.isRequired,\r\n  // loadTransition: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // sidebarOpen: PropTypes.bool.isRequired,\r\n  // pageLoaded: PropTypes.bool.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // deco: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // place: PropTypes.string.isRequired,\r\n  // titleException: PropTypes.array.isRequired,\r\n  // handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(LeftSidebarLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\RightSidebarLayout.js",["1945"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\DropMenuLayout.js",["1946"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Counter\\CounterWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\Sidebar.js",["1947"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\navigationConfig.js",["1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967"],"import React from 'react';\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n\r\n} from \"@material-ui/icons\";\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport ShutterSpeedIcon from '@material-ui/icons/ShutterSpeed';\r\nimport LocalCarWashIcon from '@material-ui/icons/LocalCarWash';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\n\r\nconst navigationConfig = [\r\n  {\r\n    id: \"Main\",\r\n    type: \"group\",\r\n    children: [\r\n      {\r\n        id: \"dashboard\",\r\n        title: \"Home\",\r\n        type: \"item\",\r\n        url: \"/teacherdashboard\",\r\n        exact: true,\r\n        icon: <HomeIcon />\r\n      },\r\n      {\r\n        id: \"students\",\r\n        title: \"STUDENTS\",\r\n        type: \"collapse\",\r\n        icon: <Brightness5Icon />,\r\n        badge: {\r\n          title: \"1\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"students\",\r\n            title: \"STUDENTS\",\r\n            type: \"item\",\r\n            url: \"/teacherdashboard/students\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"dashes\",\r\n        title: \"ATTENDANCE\",\r\n        type: \"collapse\",\r\n        icon: <Brightness5Icon />,\r\n        badge: {\r\n          title: \"1\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"attendance\",\r\n            title: \"ATTENDANCE\",\r\n            type: \"item\",\r\n            url: \"/teacherdashboard/attendance\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"gradings\",\r\n        title: \"GRADING\",\r\n        type: \"collapse\",\r\n        icon: <Brightness5Icon />,\r\n        badge: {\r\n          title: \"1\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"tests\",\r\n            title: \"TESTS\",\r\n            type: \"item\",\r\n            url: \"/teacherdashboard/tests\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"excercises\",\r\n            title: \"EXCERCISES\",\r\n            type: \"item\",\r\n            url: \"/teacherdashboard/excercises\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"assignments\",\r\n            title: \"ASSIGNMENTS\",\r\n            type: \"item\",\r\n            url: \"/teacherdashboard/assignments\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      \r\n    ],\r\n  },\r\n];\r\n\r\nexport default navigationConfig;\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavigation.js",["1968","1969","1970","1971"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport brand from '../../api/dummy/brand';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport logo from '../../images/logo.svg';\r\nimport Navigation from './Navigation';\r\n\r\n\r\nimport styles from '../layout/sidebar-jss';\r\n\r\nclass DumbalinyoloNavigation extends React.Component {\r\n  state = {\r\n    transform: 0,\r\n  };\r\n  \r\n\r\n  componentDidMount = () => {\r\n    // Scroll content to top\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = (event) => {\r\n    const scroll = event.target.scrollTop;\r\n    this.setState({\r\n      transform: scroll\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      turnDarker,\r\n      drawerPaper,\r\n      toggleDrawerOpen,\r\n      loadTransition,\r\n      leftSidebar,\r\n      dataMenu,\r\n      status,\r\n      anchorEl,\r\n      openMenuStatus,\r\n      closeMenuStatus,\r\n      changeStatus,\r\n      isLogin\r\n    } = this.props;\r\n    const { transform } = this.state;\r\n\r\n    const setStatus = st => {\r\n      switch (st) {\r\n        case 'online':\r\n          return classes.online;\r\n        case 'idle':\r\n          return classes.idle;\r\n        case 'bussy':\r\n          return classes.bussy;\r\n        default:\r\n          return classes.offline;\r\n      }\r\n    };\r\n    return (\r\n      <div className={classNames(classes.drawerInner, !drawerPaper ? classes.drawerPaperClose : '')}>\r\n        <div className={classes.drawerHeader}>\r\n          <NavLink to=\"/\" className={classNames(classes.brand, classes.brandBar, turnDarker && classes.darker)}>\r\n            {brand.name}\r\n          </NavLink>\r\n          {isLogin && (\r\n            <div\r\n              className={classNames(classes.profile, classes.user)}\r\n              style={{ opacity: 1 - (transform / 100), marginTop: transform * -0.3 }}\r\n            >\r\n              <Avatar\r\n                className={classNames(classes.avatar, classes.bigAvatar)}\r\n              />\r\n              <div>\r\n                <Button size=\"small\" onClick={openMenuStatus}>\r\n                  <i className={classNames(classes.dotStatus, setStatus(status))} />\r\n                  {status}\r\n                </Button>\r\n                <Menu\r\n                  id=\"status-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={closeMenuStatus}\r\n                  className={classes.statusMenu}\r\n                >\r\n                  <MenuItem onClick={() => changeStatus('online')}>\r\n                    <i className={classNames(classes.dotStatus, classes.online)} />\r\n                    Online\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => changeStatus('idle')}>\r\n                    <i className={classNames(classes.dotStatus, classes.idle)} />\r\n                    Idle\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => changeStatus('bussy')}>\r\n                    <i className={classNames(classes.dotStatus, classes.bussy)} />\r\n                    Bussy\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => changeStatus('offline')}>\r\n                    <i className={classNames(classes.dotStatus, classes.offline)} />\r\n                    Offline\r\n                  </MenuItem>\r\n                </Menu>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          id=\"sidebar\"\r\n          className={\r\n            classNames(\r\n              classes.menuContainer,\r\n              leftSidebar && classes.rounded,\r\n              isLogin && classes.withProfile\r\n            )\r\n          }\r\n        >\r\n          <Navigation\r\n            loadTransition={loadTransition} \r\n            toggleDrawerOpen={toggleDrawerOpen} \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDumbalinyoloNavigation.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // drawerPaper: PropTypes.bool.isRequired,\r\n  // turnDarker: PropTypes.bool,\r\n  // toggleDrawerOpen: PropTypes.func,\r\n  // loadTransition: PropTypes.func,\r\n  // leftSidebar: PropTypes.bool.isRequired,\r\n  // dataMenu: PropTypes.array.isRequired,\r\n  // status: PropTypes.string.isRequired,\r\n  // anchorEl: PropTypes.object,\r\n  // openMenuStatus: PropTypes.func.isRequired,\r\n  // closeMenuStatus: PropTypes.func.isRequired,\r\n  // changeStatus: PropTypes.func.isRequired,\r\n  // isLogin: PropTypes.bool\r\n};\r\n\r\nDumbalinyoloNavigation.defaultProps = {\r\n  turnDarker: false,\r\n  toggleDrawerOpen: () => {},\r\n  loadTransition: () => {},\r\n  anchorEl: null,\r\n  isLogin: true,\r\n};\r\n\r\nexport default withStyles(styles)(DumbalinyoloNavigation);","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\sidebar-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\sidebarBig-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MainMenuBig.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\Navigation.js",["1972","1973"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MenuProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavGroup.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavItem.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavCollapse.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavLink.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\NavLinkAdapter.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavBadge.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendances.js",["1974","1975","1976"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendance.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddAttendance.js",["1977","1978"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AttendanceBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\Records.js",["1979","1980","1981"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddRecord.js",["1982","1983"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTests.js",["1984","1985","1986"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../layout/TeacherLayout\";\r\nimport { getAdminStudentTests, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherTests = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentTests();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/tests/${id}`)\r\n  }\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Test\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudenttests,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentTests, addGrade, editGrade} ) \r\n  (TeacherTests);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercises.js",["1987","1988","1989","1990"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../layout/TeacherLayout\";\r\nimport { getAdminStudentExcercises, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherStudentExcercises = props => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentExcercises();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/excercises/${id}`)\r\n  }\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Excercise\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentexcercises,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentExcercises, addGrade, editGrade} ) \r\n  (TeacherStudentExcercises);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTest.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignments.js",["1991","1992","1993"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../layout/TeacherLayout\";\r\nimport { getAdminStudentAssignments, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentAssignments = props => {\r\n    const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentAssignments();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/assignments/${id}`)\r\n  }\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentassignments,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentAssignments, addGrade, editGrade} ) \r\n  (AdminStudentAssignments);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignment.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercise.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TestRecords.js",["1994","1995","1996","1997"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\AddGrade.js",["1998","1999"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\ExcerciseRecords.js",["2000","2001","2002"],"import React, { useEffect, useState } from \"react\"\r\nimport {  editExcerciseRecord } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport axios from 'axios';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport EditRecord from './EditRecord';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'student', label: 'STUDENT' },\r\n  { id: 'totalmarks', label: 'TOTAL' },\r\n  { id: 'score', label: 'SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst ExcerciseRecords = props => {\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [records, setRecords] = useState([])\r\n\r\n    const {id} =props.data\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editExcerciseRecord(fee.id, fee)    \r\n      else\r\n        console.log(fee)        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/grading/grading-excercise-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Record\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Edit Record\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <EditRecord\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(\r\n  null, \r\n  { editExcerciseRecord} ) \r\n  (ExcerciseRecords);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\GradingBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\EditRecord.js",["2003","2004"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudentProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudents.js",["2005","2006","2007"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../layout/TeacherLayout\";\r\nimport { getAdminStudents, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherStudents = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudents();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/students/${id}`)\r\n  }\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Student\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <PermIdentityIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminstudents,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudents, addBursar} ) \r\n  (TeacherStudents);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Attendance.js",["2008","2009"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Assignments.js",["2010","2011"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Excercises.js",["2012","2013"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\ProfileBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Tests.js",["2014","2015"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\courses.js",["2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028"],"import {\r\n  GET_UPCOMING_COURSES,\r\n  GET_UPCOMING_COURSE,\r\n  GET_ONGOING_COURSES,\r\n  GET_ONGOING_COURSE,\r\n  GET_FINISHED_COURSES,\r\n  GET_FINISHED_COURSE,\r\n  GET_INACTIVE_COURSES,\r\n  GET_INACTIVE_COURSE,\r\n  EDIT_COURSE,\r\n  ADD_COURSE,\r\n  GET_ADMIN_TOPICS,\r\n  GET_ADMIN_TOPIC,\r\n  ADD_TOPIC,\r\n  EDIT_TOPIC,\r\n  GET_ADMIN_REVIEWS,\r\n  GET_ADMIN_SUBTOPICS,\r\n  GET_ADMIN_SUBTOPIC,\r\n  ADD_SUBTOPIC,\r\n  EDIT_SUBTOPIC,\r\n  GET_ADMIN_TOPIC_OBJECTIVES,\r\n  GET_ADMIN_TOPIC_OBJECTIVE,\r\n  EDIT_TOPIC_OBJECTIVE,\r\n  ADD_TOPIC_OBJECTIVE,\r\n  GET_ADMIN_TOPIC_GUIDELINES,\r\n  GET_ADMIN_TOPIC_GUIDELINE,\r\n  EDIT_TOPIC_GUIDELINE,\r\n  ADD_TOPIC_GUIDELINE,\r\n  GET_ADMIN_STUDY_NOTES,\r\n  GET_ADMIN_STUDY_NOTE,\r\n  EDIT_STUDY_NOTE,\r\n  ADD_STUDY_NOTE,\r\n  GET_ADMIN_STUDY_NOTES_IMAGES,\r\n  GET_ADMIN_STUDY_NOTE_IMAGE,\r\n  EDIT_STUDY_NOTE_IMAGE,\r\n  ADD_STUDY_NOTE_IMAGE,\r\n  GET_ADMIN_STUDY_NOTES_FILES,\r\n  GET_ADMIN_STUDY_NOTE_FILE,\r\n  EDIT_STUDY_NOTE_FILE,\r\n  ADD_STUDY_NOTE_FILE,\r\n  GET_ADMIN_STUDY_NOTES_VIDEOS,\r\n  GET_ADMIN_STUDY_NOTE_VIDEO,\r\n  EDIT_STUDY_NOTE_VIDEO,\r\n  ADD_STUDY_NOTE_VIDEO,\r\n  GET_ADMIN_STUDY_NOTES_NOTES,\r\n  GET_ADMIN_STUDY_NOTE_NOTE,\r\n  EDIT_STUDY_NOTE_NOTE,\r\n  ADD_STUDY_NOTE_NOTE,\r\n  GET_ADMIN_STUDY_NOTES_REFERENCES,\r\n  GET_ADMIN_STUDY_NOTE_REFERENCE,\r\n  EDIT_STUDY_NOTE_REFERENCE,\r\n  ADD_STUDY_NOTE_REFERENCE,\r\n  GET_ADMIN_AUTHORS,\r\n  GET_ADMIN_AUTHOR,\r\n  EDIT_AUTHOR,\r\n  ADD_AUTHOR,\r\n  GET_ADMIN_PUBLISHER_CITIES,\r\n  GET_ADMIN_PUBLISHER_CITY,\r\n  EDIT_PUBLISHER_CITY,\r\n  ADD_PUBLISHER_CITY,\r\n  GET_ADMIN_PUBLISHERS,\r\n  GET_ADMIN_PUBLISHER,\r\n  EDIT_PUBLISHER,\r\n  ADD_PUBLISHER,\r\n\r\n} from '../types/courseTypes';\r\n\r\n\r\nconst initialState = {\r\n    adminupcomingcourses: [],\r\n    adminupcomingcourse: {},\r\n    adminongoingcourses: [],\r\n    adminongoingcourse: {},\r\n    adminfinishedcourses: [],\r\n    adminfinishedcourse:{},\r\n    admininactivecourses: [],\r\n    admininactivecourse: {},\r\n    adminreviews: [],\r\n    admintopics: [],\r\n    admintopic: {},\r\n    admintopicobjectives: [],\r\n    admintopicguidelines: [],\r\n    adminsubtopics: [],\r\n    adminsubtopic: {},\r\n    adminstudynotes: [],\r\n    adminstudynote: {},\r\n    adminstudynotesimages: [],\r\n    adminstudynotesvideos: [],\r\n    adminstudynotesfiles: [],\r\n    adminstudynotesnotes: [],\r\n    adminstudynotesreferences: [],\r\n    adminauthors: [],\r\n    adminpublishers: [],\r\n    adminpublishercities: [],\r\n    loading: false\r\n}\r\n\r\nexport default function courses(state = initialState, action){\r\n    switch(action.type){\r\n\r\n        case GET_UPCOMING_COURSES:\r\n            return {\r\n                ...state,\r\n                adminupcomingcourses : action.payload\r\n            };\r\n\r\n        case GET_UPCOMING_COURSE:\r\n            return {\r\n                ...state,\r\n                adminupcomingcourse : action.payload\r\n            };\r\n\r\n        case GET_ONGOING_COURSES:\r\n            return {\r\n                ...state,\r\n                adminongoingcourses : action.payload\r\n            };\r\n\r\n        case GET_ONGOING_COURSE:\r\n            return {\r\n                ...state,\r\n                adminongoingcourse : action.payload\r\n            };\r\n\r\n        case GET_FINISHED_COURSES:\r\n            return {\r\n                ...state,\r\n                adminfinishedcourses : action.payload\r\n            };\r\n\r\n        case GET_FINISHED_COURSE:\r\n            return {\r\n                ...state,\r\n                adminfinishedcourse : action.payload\r\n            };\r\n\r\n        case GET_INACTIVE_COURSES:\r\n            return {\r\n                ...state,\r\n                admininactivecourses : action.payload\r\n            };\r\n\r\n        case GET_INACTIVE_COURSE:\r\n            return {\r\n                ...state,\r\n                admininactivecourse : action.payload\r\n            };\r\n\r\n        case ADD_COURSE:\r\n            return {\r\n                ...state,\r\n                course: [...state.adminupcomingcourses, action.payload]\r\n            }\r\n\r\n        case EDIT_COURSE:\r\n            const eearrayList = state.adminupcomingcourses;\r\n            eearrayList.splice(eearrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminupcomingcourses: eearrayList,\r\n            };\r\n        case GET_ADMIN_REVIEWS:\r\n            return {\r\n                ...state,\r\n                adminreviews : action.payload\r\n            };\r\n\r\n        case GET_ADMIN_TOPICS:\r\n            return {\r\n                ...state,\r\n                admintopics : action.payload\r\n            };\r\n\r\n        case GET_ADMIN_TOPIC:\r\n            return {\r\n                ...state,\r\n                admintopic : action.payload\r\n            };\r\n\r\n        case ADD_TOPIC:\r\n            return {\r\n                ...state,\r\n                topic: [...state.admintopics, action.payload]\r\n            }\r\n\r\n        case EDIT_TOPIC:\r\n            const tarrayList = state.admintopics;\r\n            tarrayList.splice(tarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                admintopics: tarrayList,\r\n            };\r\n        case GET_ADMIN_TOPIC_OBJECTIVES:\r\n            return {\r\n                ...state,\r\n                admintopicobjectives : action.payload\r\n            };\r\n\r\n        case ADD_TOPIC_OBJECTIVE:\r\n            return {\r\n                ...state,\r\n                objective: [...state.admintopicobjectives, action.payload]\r\n            }\r\n\r\n        case EDIT_TOPIC_OBJECTIVE:\r\n            const oarrayList = state.admintopicobjectives;\r\n            oarrayList.splice(oarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                admintopicobjectives: oarrayList,\r\n            };\r\n        case GET_ADMIN_TOPIC_GUIDELINES:\r\n            return {\r\n                ...state,\r\n                admintopicguidelines : action.payload\r\n            };\r\n\r\n        case ADD_TOPIC_GUIDELINE:\r\n            return {\r\n                ...state,\r\n                guideline: [...state.admintopicguidelines, action.payload]\r\n            }\r\n\r\n        case EDIT_TOPIC_GUIDELINE:\r\n            const garrayList = state.admintopicguidelines;\r\n            garrayList.splice(garrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                admintopicobjectives: garrayList,\r\n            };\r\n        case GET_ADMIN_SUBTOPICS:\r\n            return {\r\n                ...state,\r\n                adminsubtopics : action.payload\r\n            };\r\n\r\n        case GET_ADMIN_SUBTOPIC:\r\n            return {\r\n                ...state,\r\n                adminsubtopic : action.payload\r\n            };\r\n\r\n\r\n        case ADD_SUBTOPIC:\r\n            return {\r\n                ...state,\r\n                subtopic: [...state.adminsubtopics, action.payload]\r\n            }\r\n\r\n        case EDIT_SUBTOPIC:\r\n            const sarrayList = state.adminsubtopics;\r\n            sarrayList.splice(sarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminsubtopics: sarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES:\r\n            return {\r\n                ...state,\r\n                adminstudynotes : action.payload\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTE:\r\n            return {\r\n                ...state,\r\n                adminstudynote : action.payload\r\n            };\r\n\r\n\r\n        case ADD_STUDY_NOTE:\r\n            return {\r\n                ...state,\r\n                note: [...state.adminstudynotes, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE:\r\n            const starrayList = state.adminstudynotes;\r\n            starrayList.splice(starrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotes: starrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES_FILES:\r\n            return {\r\n                ...state,\r\n                adminstudynotesfiles : action.payload\r\n            };\r\n\r\n        case ADD_STUDY_NOTE_FILE:\r\n            return {\r\n                ...state,\r\n                file: [...state.adminstudynotesfiles, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE_FILE:\r\n            const fstarrayList = state.adminstudynotesfiles;\r\n            fstarrayList.splice(fstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotesfiles: fstarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES_VIDEOS:\r\n            return {\r\n                ...state,\r\n                adminstudynotesvideos : action.payload\r\n            };\r\n\r\n        case ADD_STUDY_NOTE_VIDEO:\r\n            return {\r\n                ...state,\r\n                video: [...state.adminstudynotesvideos, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE_VIDEO:\r\n            const vstarrayList = state.adminstudynotesvideos;\r\n            vstarrayList.splice(vstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotesvideos: vstarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES_IMAGES:\r\n            return {\r\n                ...state,\r\n                adminstudynotesimages : action.payload\r\n            };\r\n\r\n        case ADD_STUDY_NOTE_IMAGE:\r\n            return {\r\n                ...state,\r\n                video: [...state.adminstudynotesimages, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE_IMAGE:\r\n            const istarrayList = state.adminstudynotesimages;\r\n            istarrayList.splice(istarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotesimages: istarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES_REFERENCES:\r\n            return {\r\n                ...state,\r\n                adminstudynotesreferences : action.payload\r\n            };\r\n\r\n        case ADD_STUDY_NOTE_REFERENCE:\r\n            return {\r\n                ...state,\r\n                reference: [...state.adminstudynotesreferences, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE_REFERENCE:\r\n            const rstarrayList = state.adminstudynotesreferences;\r\n            rstarrayList.splice(rstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotesreferences: rstarrayList,\r\n            };\r\n        case GET_ADMIN_AUTHORS:\r\n            return {\r\n                ...state,\r\n                adminauthors : action.payload\r\n            };\r\n\r\n        case ADD_AUTHOR:\r\n            return {\r\n                ...state,\r\n                author: [...state.adminauthors, action.payload]\r\n            }\r\n\r\n        case EDIT_AUTHOR:\r\n            const arstarrayList = state.adminauthors;\r\n            arstarrayList.splice(arstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminauthors: arstarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_PUBLISHER_CITIES:\r\n            return {\r\n                ...state,\r\n                adminpublishercities : action.payload\r\n            };\r\n\r\n        case ADD_PUBLISHER_CITY:\r\n            return {\r\n                ...state,\r\n                city: [...state.adminpublishercities, action.payload]\r\n            }\r\n\r\n        case EDIT_PUBLISHER_CITY:\r\n            const parstarrayList = state.adminpublishercities;\r\n            parstarrayList.splice(parstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminpublishercities: parstarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_PUBLISHERS:\r\n            return {\r\n                ...state,\r\n                adminpublishers : action.payload\r\n            };\r\n\r\n        case ADD_PUBLISHER:\r\n            return {\r\n                ...state,\r\n                publisher: [...state.adminpublishers, action.payload]\r\n            }\r\n\r\n        case EDIT_PUBLISHER:\r\n            const pparstarrayList = state.adminpublishers;\r\n            pparstarrayList.splice(pparstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminpublishers: pparstarrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\courseTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminUpcomingCourses.js",["2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminUpcomingCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminUpcomingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminUpcomingCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        console.log(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/upcomingcourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.adminupcomingcourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminUpcomingCourses, addCourse, editCourse} )\r\n  (AdminUpcomingCourses);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\SearchCourse.js",["2041","2042","2043","2044","2045","2046","2047"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ViewList from '@material-ui/icons/ViewList';\r\nimport GridOn from '@material-ui/icons/GridOn';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport styles from './search-jss';\r\n\r\nclass SearchCourse extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorEl, } = this.state;\r\n    const {\r\n      classes,\r\n      courseData,\r\n      handleSwitchView,\r\n      listView\r\n    } = this.props;\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"inherit\">\r\n          <Toolbar>\r\n            <div className={classes.flex}>\r\n              <div className={classes.wrapper}>\r\n                <div className={classes.search}>\r\n                  <SearchIcon />\r\n                </div>\r\n                <input className={classes.input} placeholder=\"Search Course\" />\r\n              </div>\r\n            </div>\r\n            <Hidden mdDown>\r\n              <div className={classes.toggleContainer}>\r\n                <ToggleButtonGroup value={listView} exclusive onChange={handleSwitchView}>\r\n                  <ToggleButton value=\"grid\">\r\n                    <GridOn />\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"list\">\r\n                    <ViewList />\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </div>\r\n            </Hidden>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(SearchCourse);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AddCourse.js",["2048"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport { getCourseStatus } from '../../../actions/courses';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n  full_name: '',\r\n  short_name: '',\r\n  status: '',\r\n  start_date: '',\r\n  end_date: '',\r\n  description: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddCourse = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('full_name' in fieldValues)\r\n        temp.full_name = fieldValues.full_name ? \"\" : \"This field is required.\"\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status ? \"\" : \"This field is required.\"\r\n    if ('short_name' in fieldValues)\r\n        temp.short_name = fieldValues.short_name ? \"\" : \"This field is required.\"\r\n    if ('start_date' in fieldValues)\r\n        temp.start_date = fieldValues.start_date ? \"\" : \"This field is required.\"\r\n    if ('end_date' in fieldValues)\r\n        temp.end_date = fieldValues.end_date ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCourseStatus();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"full_name\"\r\n                          label=\"FULL NAME\"\r\n                          value={values.full_name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.full_name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"SHORT NAME\"\r\n                          name=\"short_name\"\r\n                          value={values.short_name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.short_name}\r\n                      />\r\n                      <TextField\r\n                          id=\"ldate\"\r\n                          label=\"START DATE\"\r\n                          type=\"date\"\r\n                          value={values.start_date}\r\n                          name='start_date'\r\n                          error={errors.start_date}\r\n                          defaultValue=\"2021-01-01\"\r\n                          format=\"yy-mm-dd\"\r\n                          onChange={handleInputChange}\r\n                          className={classes.textField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.DictSelect\r\n                          name=\"status\"\r\n                          label=\"STATUS\"\r\n                          value={values.status}\r\n                          onChange={handleInputChange}\r\n                          options={props.coursestatuschoices}\r\n                          error={errors.status}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n                      <TextField\r\n                          id=\"date\"\r\n                          label=\"END DATE\"\r\n                          type=\"date\"\r\n                          value={values.end_date}\r\n                          name='end_date'\r\n                          error={errors.end_date}\r\n                          defaultValue=\"2021-01-01\"\r\n                          format=\"yy-mm-dd\"\r\n                          onChange={handleInputChange}\r\n                          className={classes.textField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        />\r\n\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    coursestatuschoices: state.courses.coursestatuschoices,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCourseStatus} ) (AddCourse);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\courses.js",["2049","2050","2051"],"import axios from 'axios';\r\nimport {\r\n  GET_UPCOMING_COURSES,\r\n  GET_UPCOMING_COURSE,\r\n  GET_ONGOING_COURSES,\r\n  GET_ONGOING_COURSE,\r\n  GET_FINISHED_COURSES,\r\n  GET_FINISHED_COURSE,\r\n  GET_INACTIVE_COURSES,\r\n  GET_INACTIVE_COURSE,\r\n  EDIT_COURSE,\r\n  ADD_COURSE,\r\n  GET_ADMIN_TOPICS,\r\n  GET_ADMIN_TOPIC,\r\n  ADD_TOPIC,\r\n  EDIT_TOPIC,\r\n  GET_ADMIN_REVIEWS,\r\n  GET_ADMIN_SUBTOPICS,\r\n  GET_ADMIN_SUBTOPIC,\r\n  ADD_SUBTOPIC,\r\n  EDIT_SUBTOPIC,\r\n  GET_ADMIN_TOPIC_OBJECTIVES,\r\n  GET_ADMIN_TOPIC_OBJECTIVE,\r\n  EDIT_TOPIC_OBJECTIVE,\r\n  ADD_TOPIC_OBJECTIVE,\r\n  GET_ADMIN_TOPIC_GUIDELINES,\r\n  GET_ADMIN_TOPIC_GUIDELINE,\r\n  EDIT_TOPIC_GUIDELINE,\r\n  ADD_TOPIC_GUIDELINE,\r\n  GET_ADMIN_STUDY_NOTES,\r\n  GET_ADMIN_STUDY_NOTE,\r\n  EDIT_STUDY_NOTE,\r\n  ADD_STUDY_NOTE,\r\n  GET_ADMIN_STUDY_NOTES_IMAGES,\r\n  GET_ADMIN_STUDY_NOTE_IMAGE,\r\n  EDIT_STUDY_NOTE_IMAGE,\r\n  ADD_STUDY_NOTE_IMAGE,\r\n  GET_ADMIN_STUDY_NOTES_FILES,\r\n  GET_ADMIN_STUDY_NOTE_FILE,\r\n  EDIT_STUDY_NOTE_FILE,\r\n  ADD_STUDY_NOTE_FILE,\r\n  GET_ADMIN_STUDY_NOTES_VIDEOS,\r\n  GET_ADMIN_STUDY_NOTE_VIDEO,\r\n  EDIT_STUDY_NOTE_VIDEO,\r\n  ADD_STUDY_NOTE_VIDEO,\r\n  GET_ADMIN_STUDY_NOTES_NOTES,\r\n  GET_ADMIN_STUDY_NOTE_NOTE,\r\n  EDIT_STUDY_NOTE_NOTE,\r\n  ADD_STUDY_NOTE_NOTE,\r\n  GET_ADMIN_STUDY_NOTES_REFERENCES,\r\n  GET_ADMIN_STUDY_NOTE_REFERENCE,\r\n  EDIT_STUDY_NOTE_REFERENCE,\r\n  ADD_STUDY_NOTE_REFERENCE,\r\n  GET_ADMIN_AUTHORS,\r\n  GET_ADMIN_AUTHOR,\r\n  EDIT_AUTHOR,\r\n  ADD_AUTHOR,\r\n  GET_ADMIN_PUBLISHER_CITIES,\r\n  GET_ADMIN_PUBLISHER_CITY,\r\n  EDIT_PUBLISHER_CITY,\r\n  ADD_PUBLISHER_CITY,\r\n  GET_ADMIN_PUBLISHERS,\r\n  GET_ADMIN_PUBLISHER,\r\n  EDIT_PUBLISHER,\r\n  ADD_PUBLISHER,\r\n  GET_COURSE_STATUS_CHOICES\r\n\r\n} from '../types/courseTypes';\r\nimport {\r\n  adminupcomingcoursesURL,\r\n  adminongoingcoursesURL,\r\n  adminfinishedcoursesURL,\r\n  admininactivecoursesURL,\r\n  admintopicsURL,\r\n  adminreviewsURL,\r\n  adminsubtopicsURL,\r\n  admintopicobjectivesURL,\r\n  admintopicguidelinesURL,\r\n  adminstudynotesURL,\r\n  adminstudynotesimagesURL,\r\n  adminstudynotesnotesURL,\r\n  adminstudynotesfilesURL,\r\n  adminstudynotesvideosURL,\r\n  adminstudynotesreferencesURL,\r\n  adminauthorsURL,\r\n  adminpublishercitiesURL,\r\n  coursestatuschoicesURL,\r\n  adminpublishersURL\r\n} from '../constants';\r\n\r\n\r\n\r\nexport const getCourseStatus = () => dispatch => {\r\n    axios.get(coursestatuschoicesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COURSE_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminUpcomingCourses = () => dispatch => {\r\n    axios.get(adminupcomingcoursesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UPCOMING_COURSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminUpcomingCourse = (id) => dispatch => {\r\n    axios.get(`${adminupcomingcoursesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UPCOMING_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminOngoingCourses = () => dispatch => {\r\n    axios.get(adminongoingcoursesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ONGOING_COURSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminOngoingCourse = (id) => dispatch => {\r\n    axios.get(`${adminongoingcoursesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ONGOING_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const getAdminFinishedCourses = () => dispatch => {\r\n    axios.get(adminfinishedcoursesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FINISHED_COURSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminFinishedCourse= (id) => dispatch => {\r\n    axios.get(`${adminfinishedcoursesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FINISHED_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminInactiveCourses = () => dispatch => {\r\n    axios.get(admininactivecoursesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INACTIVE_COURSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminInactiveCourse= (id) => dispatch => {\r\n    axios.get(`${admininactivecoursesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INACTIVE_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addCourse = (course) => dispatch => {\r\n    axios.post(adminupcomingcoursesURL, course)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editCourse = (id, course) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${adminupcomingcoursesURL}${id}/`, course)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminTopics = (course_id) => dispatch => {\r\n    axios.get(`${admintopicsURL}?id=${course_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPICS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminTopic= (id) => dispatch => {\r\n    axios.get(`${admintopicsURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addTopic = (topic) => dispatch => {\r\n    axios.post(admintopicsURL, topic)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_TOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const editTopic = (id, topic) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${admintopicsURL}${id}/`, topic)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_TOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminReviews = (course_id) => dispatch => {\r\n    axios.get(`${adminreviewsURL}?id=${course_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_REVIEWS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminTopicObjectives = (topic_id) => dispatch => {\r\n    axios.get(`${admintopicobjectivesURL}?id=${topic_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC_OBJECTIVES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminTopicObjective = (id) => dispatch => {\r\n    axios.get(`${admintopicobjectivesURL}/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC_OBJECTIVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addTopicObjective = (objective) => dispatch => {\r\n    axios.post(admintopicobjectivesURL, objective)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_TOPIC_OBJECTIVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editTopicObjective = (id, objective) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${admintopicobjectivesURL}${id}/`, objective)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_TOPIC_OBJECTIVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const getAdminTopicGuidelines = (topic_id) => dispatch => {\r\n    axios.get(`${admintopicguidelinesURL}?id=${topic_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC_GUIDELINES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminTopicGuideline = (id) => dispatch => {\r\n    axios.get(`${admintopicguidelinesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC_GUIDELINE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addTopicGuideLine = (guideline) => dispatch => {\r\n    axios.post(admintopicguidelinesURL, guideline)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_TOPIC_GUIDELINE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editTopicGuideline = (id, guideline) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${admintopicguidelinesURL}${id}/`, guideline)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_TOPIC_GUIDELINE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const getAdminSubTopics = (topic_id) => dispatch => {\r\n    axios.get(`${adminsubtopicsURL}?id=${topic_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_SUBTOPICS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminSubTopic = (id) => dispatch => {\r\n    axios.get(`${adminsubtopicsURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_SUBTOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addSubTopic = (subtopic) => dispatch => {\r\n    axios.post(adminsubtopicsURL, subtopic)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_SUBTOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editSubTopic = (id, subtopic) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${adminsubtopicsURL}${id}/`, subtopic)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_SUBTOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNotes = (topic_id) => dispatch => {\r\n    axios.get(`${adminstudynotesURL}?id=${topic_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNote = (id) => dispatch => {\r\n    axios.get(`${adminstudynotesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNote = (note) => dispatch => {\r\n    axios.post(adminstudynotesURL, note)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNote = (id, note) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${adminstudynotesURL}${id}/`, note)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNoteVideos = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesvideosURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_VIDEOS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteVideo = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-videos/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_VIDEO,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteVideo = (video) => dispatch => {\r\n    axios.post(adminstudynotesvideosURL, video)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_VIDEO,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteVideo = (id, video) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-videos/${id}/`, video)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_VIDEO,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteImages = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesimagesURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_IMAGES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteImage = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-images/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_IMAGE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteImage = (image) => dispatch => {\r\n    axios.post(adminstudynotesimagesURL, image)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_IMAGE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteImage = (id, image) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-images/${id}/`, image)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_IMAGE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNoteNotes = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesnotesURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_NOTES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteNote = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-notes/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteNote = (note) => dispatch => {\r\n    axios.post(adminstudynotesnotesURL, note)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteNote = (id, note) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-notes/${id}/`, note)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNoteFiles = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesfilesURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_FILES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteFile = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-files/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_FILE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteFile = (file) => dispatch => {\r\n    axios.post(adminstudynotesfilesURL, file)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_FILE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteFile = (id, file) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-files/${id}/`, file)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_FILE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNoteReferences = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesreferencesURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_REFERENCES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteReference = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-references/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_REFERENCE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteReference = (reference) => dispatch => {\r\n    axios.post(adminstudynotesfilesURL, reference)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_REFERENCE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteReference = (id, reference) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-references/${id}/`, reference)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_REFERENCE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAuthors = () => dispatch => {\r\n    axios.get(adminauthorsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_AUTHORS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const addAuthor = (author) => dispatch => {\r\n    axios.post(adminauthorsURL, author)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_AUTHOR,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editAuthor = (id, author) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-authors/${id}/`, author)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_AUTHOR,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getPublisherCities = () => dispatch => {\r\n    axios.get(adminpublishercitiesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_PUBLISHER_CITIES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const addPublisherCity = (city) => dispatch => {\r\n    axios.post(adminpublishercitiesURL, city)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PUBLISHER_CITY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editPublisherCity = (id, city) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-publisher-cities/${id}/`, city)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_PUBLISHER_CITY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getPublishers= () => dispatch => {\r\n    axios.get(adminpublishersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_PUBLISHERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const addPublisher = (publisher) => dispatch => {\r\n    axios.post(adminpublishersURL, publisher)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PUBLISHER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editPublisher = (id, publisher) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-publishers/${id}/`, publisher)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_PUBLISHER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\search-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\CourseCard.js",["2052","2053","2054","2055","2056","2057","2058","2059","2060","2061","2062","2063"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport classNames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from './cardStyles-jss'\r\nimport four from './four.jpg';\r\n\r\n\r\nclass CourseCard extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      thumbnail,\r\n      full_name,\r\n      short_name,\r\n      id,\r\n      description,\r\n      status,\r\n      start_date,\r\n      end_date,\r\n      list,\r\n      detailOpen,\r\n      width,\r\n      editItem,\r\n      handleClick\r\n    } = this.props;\r\n    return (\r\n      <Card className={classNames(classes.cardProduct, isWidthUp('sm', width) && list ? classes.cardList : '')}>\r\n        <div className={classes.status}>\r\n          {status}\r\n        </div>\r\n        <CardMedia\r\n          className={classes.mediaProduct}\r\n          image={four}\r\n          title={full_name}\r\n        />\r\n        <CardContent className={classes.floatingButtonWrap}>\r\n          <Typography noWrap gutterBottom variant=\"h5\" className={classes.title} component=\"h2\">\r\n            {full_name}\r\n          </Typography>\r\n          <Typography component=\"p\" className={classes.desc}>\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.price}>\r\n          <Typography variant=\"h5\">\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={editItem}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Typography>\r\n          <div className={classes.rightAction}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={detailOpen}\r\n            >\r\n              See More\r\n            </Button>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst CourseCardResponsive = withWidth()(CourseCard);\r\nexport default withStyles(styles)(CourseCardResponsive);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\cardStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminOngoingCourses.js",["2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074","2075"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminOngoingCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminOngoingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminOngoingCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/ongoingcourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.adminongoingcourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminOngoingCourses, addCourse, editCourse} )\r\n  (AdminOngoingCourses);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminFinishedCourses.js",["2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminFinishedCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminOngoingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminFinishedCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/finishedcourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.adminfinishedcourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminFinishedCourses, addCourse, editCourse} )\r\n  (AdminOngoingCourses);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminInactiveCourses.js",["2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminInactiveCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminUpcomingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminInactiveCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/inactivecourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.admininactivecourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminInactiveCourses, addCourse, editCourse} )\r\n  (AdminUpcomingCourses);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminUpcomingCourse.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\CourseBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\Topics.js",["2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminTopics, addTopic, editTopic } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddTopic from './AddTopic';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchTopic from \"./SearchTopic\";\r\nimport TopicCard from \"./TopicCard\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst Topics = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminTopics(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (topic, resetForm) => {\r\n      if (topic.id > 0)\r\n        props.editTopic(topic.id, topic)\r\n      else\r\n        props.addTopic(topic)\r\n        console.log(topic)  //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/topics/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchTopic\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((topic) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={topic.id}>\r\n                    <TopicCard\r\n                      list={listView === 'list'}\r\n                      full_name={topic.title}\r\n                      description={topic.assessment_overview}\r\n                      status={topic.id}\r\n                      detailOpen={() => handleClick(topic.id)}\r\n                      editItem={() => openInPopup(topic)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Topic Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddTopic\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.admintopics,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminTopics, addTopic, editTopic} )\r\n  (Topics);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\AddTopic.js",["2113","2114","2115","2116","2117"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddTopic = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    title: '',\r\n    content_overview: '',\r\n    assessment_overview: '',\r\n    assessment_overview: '',\r\n    course_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('title' in fieldValues)\r\n        temp.title = fieldValues.title ? \"\" : \"This field is required.\"\r\n    if ('content_overview' in fieldValues)\r\n        temp.content_overview = fieldValues.content_overview ? \"\" : \"This field is required.\"\r\n    if ('assessment_overview' in fieldValues)\r\n        temp.assessment_overview = fieldValues.assessment_overview ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"title\"\r\n                          label=\"TITLE\"\r\n                          value={values.title}\r\n                          onChange={handleInputChange}\r\n                          error={errors.title}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"CONTENT OVERVIEW\"\r\n                          name=\"content_overview\"\r\n                          value={values.content_overview}\r\n                          onChange={handleInputChange}\r\n                          error={errors.content_overview}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          label=\"ASSESMENT OVERVIEW\"\r\n                          name=\"assessment_overview\"\r\n                          value={values.assessment_overview}\r\n                          onChange={handleInputChange}\r\n                          error={errors.assessment_overview}\r\n                      />\r\n\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddTopic;\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\TopicCard.js",["2118","2119","2120","2121","2122","2123","2124"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport classNames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from './cardStyles-jss'\r\nimport topics from './topics.jpg';\r\n\r\n\r\n\r\nclass CourseCard extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      title,\r\n      id,\r\n      description,\r\n      status,\r\n      list,\r\n      detailOpen,\r\n      width,\r\n      editItem,\r\n    } = this.props;\r\n    return (\r\n      <Card className={classNames(classes.cardProduct, isWidthUp('sm', width) && list ? classes.cardList : '')}>\r\n        <div className={classes.status}>\r\n          {status}\r\n        </div>\r\n        <CardMedia\r\n          className={classes.mediaProduct}\r\n          image={topics}\r\n          title={title}\r\n        />\r\n        <CardContent className={classes.floatingButtonWrap}>\r\n          <Typography noWrap gutterBottom variant=\"h5\" className={classes.title} component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography component=\"p\" className={classes.desc}>\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.price}>\r\n          <Typography variant=\"h5\">\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={editItem}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Typography>\r\n          <div className={classes.rightAction}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={detailOpen}\r\n            >\r\n              See More\r\n            </Button>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst CourseCardResponsive = withWidth()(CourseCard);\r\nexport default withStyles(styles)(CourseCardResponsive);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\SearchTopic.js",["2125","2126","2127","2128","2129","2130","2131"],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\search-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\cardStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\AdminTopic.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\TopicBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\topics\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\objectives\\Objectives.js",["2132","2133","2134","2135"],"import React, { useEffect, useState } from \"react\"\r\nimport { getAdminTopicObjectives, addTopicObjective, editTopicObjective } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddObjective from './AddObjective';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'description', label: 'DESCRIPTION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst Objectives = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminTopicObjectives(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editTopicObjective(fee.id, fee)\r\n      else\r\n        props.addTopicObjective(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Objective\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.description}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddObjective\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.courses.admintopicobjectives,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminTopicObjectives, addTopicObjective, editTopicObjective} )\r\n  (Objectives);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\objectives\\AddObjective.js",["2136","2137","2138","2139"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddObjective = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    name: '',\r\n    description: '',\r\n    topic_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.descriptiom = fieldValues.description? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddObjective;\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\guidelines\\GuideLines.js",["2140","2141","2142","2143"],"import React, { useEffect, useState } from \"react\"\r\nimport { getAdminTopicGuidelines, addTopicGuideLine, editTopicGuideline } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddGuideLine from './AddGuideLine';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'description', label: 'DESCRIPTION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst GuideLines = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminTopicGuidelines(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editTopicGuideline(fee.id, fee)\r\n      else\r\n        props.addTopicGuideLine(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Objective\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.description}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Guideline Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGuideLine\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.courses.admintopicguidelines,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminTopicGuidelines, addTopicGuideLine, editTopicGuideline} )\r\n  (GuideLines);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\guidelines\\AddGuideLine.js",["2144","2145","2146","2147"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddGuideLine = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    name: '',\r\n    description: '',\r\n    topic_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.descriptiom = fieldValues.description? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddGuideLine;\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\SubTopics.js",["2148","2149","2150","2151"],"import React, { useEffect, useState } from \"react\"\r\nimport { getAdminSubTopics, addSubTopic, editSubTopic} from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport AddSubTopic from './AddSubTopic';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'title', label: 'TITLE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst SubTopics = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminSubTopics(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editSubTopic(fee.id, fee)\r\n      else\r\n        props.addSubTopic(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/subtopics/${id}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Topic\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.title}</TableCell>\r\n                          <TableCell>\r\n                            <Controls.ActionButton\r\n                                color=\"primary\"\r\n                                onClick={() => { openInPopup(item) }}>\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                                EDIT\r\n                            </Controls.ActionButton>\r\n                            <Controls.ActionButton\r\n                                color=\"secondary\"\r\n                                onClick={() => { handleClick(item.id) }}\r\n                              >\r\n                                <BorderColorIcon fontSize=\"small\" />\r\n                                OPEN\r\n                            </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Subtopic Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddSubTopic\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.courses.adminsubtopics,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminSubTopics, addSubTopic, editSubTopic} )\r\n  (SubTopics);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\AddSubTopic.js",["2152","2153","2154","2155"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddSubTopic = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    title: '',\r\n    topic_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('title' in fieldValues)\r\n        temp.title = fieldValues.title ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"title\"\r\n                          label=\"TITLE\"\r\n                          value={values.title}\r\n                          onChange={handleInputChange}\r\n                          error={errors.title}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddSubTopic;\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\AdminSubTopic.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\SubTopicBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\Notes.js",["2156","2157","2158","2159"],"import React, { useEffect, useState } from \"react\"\r\nimport { getStudyNotes, addStudyNote, editStudyNote } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddNote from './AddNote';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../../components/table/useTable\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'title', label: 'TITLE' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'approval_status', label: 'APPROVAL STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst Notes = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStudyNotes(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editStudyNote(fee.id, fee)\r\n      else\r\n        props.addStudyNote(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/notes/${id}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Notes\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.title}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>{item.approval_status}</TableCell>\r\n                          <TableCell>\r\n                            <Controls.ActionButton\r\n                                color=\"primary\"\r\n                                onClick={() => { openInPopup(item) }}>\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                                EDIT\r\n                            </Controls.ActionButton>\r\n                            <Controls.ActionButton\r\n                                color=\"secondary\"\r\n                                onClick={() => { handleClick(item.id) }}\r\n                              >\r\n                                <BorderColorIcon fontSize=\"small\" />\r\n                                OPEN\r\n                            </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddNote\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.courses.adminstudynotes,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getStudyNotes, addStudyNote, editStudyNote} )\r\n  (Notes);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\AddNote.js",["2160","2161","2162"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport {getStudyNotesApprovalStatusChoices, getStudynotesStatusChoices} from '../../../actions/choices';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddNote = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    title: '',\r\n    note: '',\r\n    status: '',\r\n    approval_status: '',\r\n    subtopic_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('title' in fieldValues)\r\n        temp.title = fieldValues.title ? \"\" : \"This field is required.\"\r\n    if ('note' in fieldValues)\r\n        temp.note = fieldValues.note? \"\" : \"This field is required.\"\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status? \"\" : \"This field is required.\"\r\n    if ('approval_status' in fieldValues)\r\n        temp.approval_status = fieldValues.approval_status? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!props.fetched){\r\n      props.getStudynotesStatusChoices();\r\n      props.getStudyNotesApprovalStatusChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"title\"\r\n                          label=\"TITLE\"\r\n                          value={values.title}\r\n                          onChange={handleInputChange}\r\n                          error={errors.title}\r\n                      />\r\n                    <TextField\r\n                          name=\"note\"\r\n                          label=\"NOTE\"\r\n                          rows={4}\r\n                          fullWidth\r\n                          id=\"standard-multiline-flexible\"\r\n                          value={values.note}\r\n                          onChange={handleInputChange}\r\n                          error={errors.note}\r\n                      />\r\n\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.DictSelect\r\n                        name=\"status\"\r\n                        label=\"STATUS\"\r\n                        value={values.status}\r\n                        onChange={handleInputChange}\r\n                        options={props.studynotesstatuschoices}\r\n                        error={errors.status}\r\n                    />\r\n                    <Controls.DictSelect\r\n                        name=\"approval_status\"\r\n                        label=\"APPROVAL STATUS\"\r\n                        value={values.approval_status}\r\n                        onChange={handleInputChange}\r\n                        options={props.studynotesapprovalstatuschoices}\r\n                        error={errors.approval_status}\r\n                    />\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    studynotesstatuschoices: state.feechoices.studynotesstatuschoices,\r\n    studynotesapprovalstatuschoices: state.feechoices.studynotesapprovalstatuschoices\r\n\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getStudyNotesApprovalStatusChoices, getStudynotesStatusChoices} )\r\n  (AddNote);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\AdminStudyNote.js",["2163"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Cover from '../../../components/SocialMedia/Cover';\r\nimport bgCover from '../../../images/petal_bg.svg';\r\nimport styles from '../../../components/SocialMedia/jss/cover-jss';\r\nimport { getStudyNote } from '../../../actions/courses';\r\nimport About from './About';\r\nimport NoteBag from './NoteBag';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nfunction TabContainer(props) {\r\n  const { children } = props;\r\n  return (\r\n    <div style={{ paddingTop: 8 * 3 }}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nclass AdminStudyNote extends React.Component {\r\n  state = {\r\n    value: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getStudyNote(this.props.match.params.id);\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const {  classes } = this.props;\r\n    const { value } = this.state;\r\n    const {note} = this.props;\r\n\r\n\r\n    return (\r\n      <NoteBag>\r\n\r\n        <Helmet>\r\n          <title>{note.title}</title>\r\n          <meta name=\"description\" content={note.title} />\r\n          <meta property=\"og:title\" content={note.title} />\r\n          <meta property=\"og:description\" content={note.title} />\r\n          <meta property=\"twitter:title\" content={note.title} />\r\n          <meta property=\"twitter:description\" content={note.title} />\r\n        </Helmet>\r\n        <Cover\r\n          coverImg={bgCover}\r\n          name={note.title}\r\n        />\r\n        <AppBar position=\"static\" className={classes.profileTab}>\r\n          <Hidden mdUp>\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              variant=\"fullWidth\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab icon={<AccountCircle />} />\r\n            </Tabs>\r\n          </Hidden>\r\n          <Hidden smDown>\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              variant=\"fullWidth\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab icon={<AccountCircle />} label=\"ABOUT\" />\r\n            </Tabs>\r\n          </Hidden>\r\n        </AppBar>\r\n        {value === 0 && <TabContainer><About data={note}/></TabContainer>}\r\n      </NoteBag >\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  force: state, // force state from reducer\r\n  note: state.courses.adminstudynote,\r\n});\r\n\r\n\r\n\r\nconst AttendanceMapped = connect(\r\n  mapStateToProps,\r\n  {getStudyNote}\r\n)(AdminStudyNote);\r\n\r\nexport default withStyles(styles)(AttendanceMapped);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\NoteBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\notes\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminFinishedCourse.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminOngoingCourse.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminInactiveCourse.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\reports.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\reportTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\reports.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\errors.js",["2164"],"import { GET_ERRORS } from '../types/alertTypes';\r\n\r\nconst initialState = {\r\n\tmsg: {},\r\n\tstatus: null\r\n}\r\n\r\nexport default function (state=initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase GET_ERRORS:\r\n\t\t\treturn {\r\n\t\t\t\tmsg: action.payload.msg,\r\n\t\t\t\tstatus: action.payload.status\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\messages.js",["2165"],"import { CREATE_MESSAGE } from '../types/alertTypes';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_MESSAGE:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\alertTypes.js",[],{"ruleId":"2166","replacedBy":"2167"},{"ruleId":"2168","replacedBy":"2169"},{"ruleId":"2170","severity":1,"message":"2171","line":76,"column":3,"nodeType":"2172","messageId":"2173","endLine":78,"endColumn":4},{"ruleId":"2174","severity":1,"message":"2175","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2178","line":12,"column":8,"nodeType":"2176","messageId":"2177","endLine":12,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2179","line":13,"column":8,"nodeType":"2176","messageId":"2177","endLine":13,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2180","line":14,"column":8,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2181","line":15,"column":8,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2182","line":16,"column":8,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":22},{"ruleId":"2174","severity":1,"message":"2183","line":10,"column":8,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2184","line":14,"column":8,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2185","line":15,"column":8,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2187","line":9,"column":8,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":10,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":19},{"ruleId":"2174","severity":1,"message":"2188","line":29,"column":8,"nodeType":"2176","messageId":"2177","endLine":29,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2189","line":30,"column":8,"nodeType":"2176","messageId":"2177","endLine":30,"endColumn":27},{"ruleId":"2174","severity":1,"message":"2190","line":31,"column":8,"nodeType":"2176","messageId":"2177","endLine":31,"endColumn":26},{"ruleId":"2174","severity":1,"message":"2191","line":32,"column":8,"nodeType":"2176","messageId":"2177","endLine":32,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2192","line":34,"column":8,"nodeType":"2176","messageId":"2177","endLine":34,"endColumn":19},{"ruleId":"2193","severity":1,"message":"2194","line":22,"column":1,"nodeType":"2195","endLine":81,"endColumn":2},{"ruleId":"2193","severity":1,"message":"2194","line":13,"column":1,"nodeType":"2195","endLine":23,"endColumn":2},{"ruleId":"2193","severity":1,"message":"2194","line":12,"column":1,"nodeType":"2195","endLine":22,"endColumn":2},{"ruleId":"2193","severity":1,"message":"2194","line":17,"column":1,"nodeType":"2195","endLine":49,"endColumn":2},{"ruleId":"2174","severity":1,"message":"2196","line":13,"column":8,"nodeType":"2176","messageId":"2177","endLine":13,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2197","line":14,"column":8,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2198","line":15,"column":8,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2199","line":16,"column":8,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2200","line":17,"column":8,"nodeType":"2176","messageId":"2177","endLine":17,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2201","line":4,"column":10,"nodeType":"2176","messageId":"2177","endLine":4,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2202","line":11,"column":8,"nodeType":"2176","messageId":"2177","endLine":11,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2203","line":10,"column":8,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":10,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":19},{"ruleId":"2174","severity":1,"message":"2204","line":4,"column":10,"nodeType":"2176","messageId":"2177","endLine":4,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2205","line":4,"column":24,"nodeType":"2176","messageId":"2177","endLine":4,"endColumn":41},{"ruleId":"2174","severity":1,"message":"2206","line":5,"column":17,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":31},{"ruleId":"2174","severity":1,"message":"2207","line":6,"column":17,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":31},{"ruleId":"2174","severity":1,"message":"2208","line":7,"column":16,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":25},{"ruleId":"2174","severity":1,"message":"2209","line":8,"column":21,"nodeType":"2176","messageId":"2177","endLine":8,"endColumn":32},{"ruleId":"2174","severity":1,"message":"2210","line":9,"column":19,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":30},{"ruleId":"2174","severity":1,"message":"2211","line":10,"column":18,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":25},{"ruleId":"2174","severity":1,"message":"2212","line":11,"column":16,"nodeType":"2176","messageId":"2177","endLine":11,"endColumn":29},{"ruleId":"2174","severity":1,"message":"2213","line":14,"column":8,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":25},{"ruleId":"2174","severity":1,"message":"2214","line":15,"column":8,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2215","line":16,"column":8,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":29},{"ruleId":"2174","severity":1,"message":"2216","line":17,"column":8,"nodeType":"2176","messageId":"2177","endLine":17,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2217","line":18,"column":8,"nodeType":"2176","messageId":"2177","endLine":18,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2218","line":19,"column":8,"nodeType":"2176","messageId":"2177","endLine":19,"endColumn":26},{"ruleId":"2174","severity":1,"message":"2219","line":20,"column":8,"nodeType":"2176","messageId":"2177","endLine":20,"endColumn":23},{"ruleId":"2174","severity":1,"message":"2220","line":21,"column":8,"nodeType":"2176","messageId":"2177","endLine":21,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2221","line":22,"column":8,"nodeType":"2176","messageId":"2177","endLine":22,"endColumn":20},{"ruleId":"2174","severity":1,"message":"2222","line":26,"column":8,"nodeType":"2176","messageId":"2177","endLine":26,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2223","line":30,"column":7,"nodeType":"2176","messageId":"2177","endLine":30,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2223","line":25,"column":7,"nodeType":"2176","messageId":"2177","endLine":25,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":10,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":19},{"ruleId":"2174","severity":1,"message":"2224","line":10,"column":8,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2223","line":30,"column":7,"nodeType":"2176","messageId":"2177","endLine":30,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2223","line":26,"column":7,"nodeType":"2176","messageId":"2177","endLine":26,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2223","line":30,"column":7,"nodeType":"2176","messageId":"2177","endLine":30,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2225","line":37,"column":22,"nodeType":"2176","messageId":"2177","endLine":37,"endColumn":26},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2226","line":3,"column":8,"nodeType":"2176","messageId":"2177","endLine":3,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2227","line":5,"column":8,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2228","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2229","line":7,"column":8,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2230","line":15,"column":7,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2231","line":23,"column":7,"nodeType":"2176","messageId":"2177","endLine":23,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2232","line":41,"column":7,"nodeType":"2176","messageId":"2177","endLine":41,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2233","line":60,"column":7,"nodeType":"2176","messageId":"2177","endLine":60,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2234","line":1,"column":17,"nodeType":"2176","messageId":"2177","endLine":1,"endColumn":25},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2201","line":5,"column":10,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2235","line":14,"column":8,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2236","line":99,"column":7,"nodeType":"2176","messageId":"2177","endLine":99,"endColumn":11},{"ruleId":"2174","severity":1,"message":"2237","line":101,"column":7,"nodeType":"2176","messageId":"2177","endLine":101,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2203","line":1,"column":8,"nodeType":"2176","messageId":"2177","endLine":1,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2204","line":5,"column":10,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2229","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2227","line":7,"column":8,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2228","line":8,"column":8,"nodeType":"2176","messageId":"2177","endLine":8,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2226","line":9,"column":8,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2238","line":10,"column":8,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2239","line":11,"column":8,"nodeType":"2176","messageId":"2177","endLine":11,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2240","line":12,"column":8,"nodeType":"2176","messageId":"2177","endLine":12,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2241","line":45,"column":7,"nodeType":"2176","messageId":"2177","endLine":45,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2233","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2242","line":51,"column":7,"nodeType":"2176","messageId":"2177","endLine":51,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2243","line":52,"column":7,"nodeType":"2176","messageId":"2177","endLine":52,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2244","line":53,"column":7,"nodeType":"2176","messageId":"2177","endLine":53,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2245","line":54,"column":7,"nodeType":"2176","messageId":"2177","endLine":54,"endColumn":22},{"ruleId":"2174","severity":1,"message":"2246","line":55,"column":7,"nodeType":"2176","messageId":"2177","endLine":55,"endColumn":19},{"ruleId":"2174","severity":1,"message":"2247","line":58,"column":13,"nodeType":"2176","messageId":"2177","endLine":58,"endColumn":22},{"ruleId":"2174","severity":1,"message":"2248","line":60,"column":11,"nodeType":"2176","messageId":"2177","endLine":60,"endColumn":20},{"ruleId":"2174","severity":1,"message":"2249","line":9,"column":8,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2250","line":10,"column":10,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":20},{"ruleId":"2174","severity":1,"message":"2251","line":11,"column":8,"nodeType":"2176","messageId":"2177","endLine":11,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2252","line":11,"column":5,"nodeType":"2176","messageId":"2177","endLine":11,"endColumn":42},{"ruleId":"2174","severity":1,"message":"2253","line":53,"column":7,"nodeType":"2176","messageId":"2177","endLine":53,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":58,"column":11,"nodeType":"2176","messageId":"2177","endLine":58,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":71,"column":6,"nodeType":"2257","endLine":71,"endColumn":8,"suggestions":"2258"},{"ruleId":"2174","severity":1,"message":"2259","line":49,"column":9,"nodeType":"2176","messageId":"2177","endLine":49,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":95,"column":6,"nodeType":"2257","endLine":95,"endColumn":21,"suggestions":"2261"},{"ruleId":"2174","severity":1,"message":"2253","line":51,"column":7,"nodeType":"2176","messageId":"2177","endLine":51,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":56,"column":11,"nodeType":"2176","messageId":"2177","endLine":56,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":69,"column":6,"nodeType":"2257","endLine":69,"endColumn":8,"suggestions":"2262"},{"ruleId":"2174","severity":1,"message":"2259","line":45,"column":9,"nodeType":"2176","messageId":"2177","endLine":45,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":81,"column":6,"nodeType":"2257","endLine":81,"endColumn":21,"suggestions":"2264"},{"ruleId":"2174","severity":1,"message":"2253","line":52,"column":7,"nodeType":"2176","messageId":"2177","endLine":52,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":57,"column":11,"nodeType":"2176","messageId":"2177","endLine":57,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":70,"column":6,"nodeType":"2257","endLine":70,"endColumn":8,"suggestions":"2265"},{"ruleId":"2174","severity":1,"message":"2259","line":48,"column":9,"nodeType":"2176","messageId":"2177","endLine":48,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":89,"column":6,"nodeType":"2257","endLine":89,"endColumn":21,"suggestions":"2266"},{"ruleId":"2193","severity":1,"message":"2194","line":17,"column":1,"nodeType":"2195","endLine":49,"endColumn":2},{"ruleId":"2174","severity":1,"message":"2253","line":54,"column":7,"nodeType":"2176","messageId":"2177","endLine":54,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":71,"column":6,"nodeType":"2257","endLine":71,"endColumn":8,"suggestions":"2267"},{"ruleId":"2174","severity":1,"message":"2259","line":53,"column":9,"nodeType":"2176","messageId":"2177","endLine":53,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":103,"column":6,"nodeType":"2257","endLine":103,"endColumn":21,"suggestions":"2268"},{"ruleId":"2174","severity":1,"message":"2253","line":54,"column":7,"nodeType":"2176","messageId":"2177","endLine":54,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":71,"column":6,"nodeType":"2257","endLine":71,"endColumn":8,"suggestions":"2269"},{"ruleId":"2193","severity":1,"message":"2194","line":14,"column":1,"nodeType":"2195","endLine":41,"endColumn":2},{"ruleId":"2174","severity":1,"message":"2270","line":22,"column":10,"nodeType":"2176","messageId":"2177","endLine":22,"endColumn":29},{"ruleId":"2174","severity":1,"message":"2253","line":52,"column":7,"nodeType":"2176","messageId":"2177","endLine":52,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":69,"column":6,"nodeType":"2257","endLine":69,"endColumn":8,"suggestions":"2271"},{"ruleId":"2174","severity":1,"message":"2259","line":45,"column":9,"nodeType":"2176","messageId":"2177","endLine":45,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":84,"column":6,"nodeType":"2257","endLine":84,"endColumn":21,"suggestions":"2272"},{"ruleId":"2193","severity":1,"message":"2194","line":14,"column":1,"nodeType":"2195","endLine":41,"endColumn":2},{"ruleId":"2174","severity":1,"message":"2253","line":51,"column":7,"nodeType":"2176","messageId":"2177","endLine":51,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":68,"column":6,"nodeType":"2257","endLine":68,"endColumn":8,"suggestions":"2273"},{"ruleId":"2174","severity":1,"message":"2259","line":47,"column":9,"nodeType":"2176","messageId":"2177","endLine":47,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":85,"column":6,"nodeType":"2257","endLine":85,"endColumn":21,"suggestions":"2274"},{"ruleId":"2193","severity":1,"message":"2194","line":16,"column":1,"nodeType":"2195","endLine":48,"endColumn":2},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":67,"column":6,"nodeType":"2257","endLine":67,"endColumn":8,"suggestions":"2275"},{"ruleId":"2174","severity":1,"message":"2259","line":45,"column":9,"nodeType":"2176","messageId":"2177","endLine":45,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":81,"column":6,"nodeType":"2257","endLine":81,"endColumn":21,"suggestions":"2276"},{"ruleId":"2193","severity":1,"message":"2194","line":15,"column":1,"nodeType":"2195","endLine":47,"endColumn":2},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":67,"column":6,"nodeType":"2257","endLine":67,"endColumn":8,"suggestions":"2277"},{"ruleId":"2174","severity":1,"message":"2259","line":45,"column":9,"nodeType":"2176","messageId":"2177","endLine":45,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":81,"column":6,"nodeType":"2257","endLine":81,"endColumn":21,"suggestions":"2278"},{"ruleId":"2193","severity":1,"message":"2194","line":16,"column":1,"nodeType":"2195","endLine":48,"endColumn":2},{"ruleId":"2174","severity":1,"message":"2279","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2280","line":19,"column":8,"nodeType":"2176","messageId":"2177","endLine":19,"endColumn":19},{"ruleId":"2174","severity":1,"message":"2253","line":53,"column":7,"nodeType":"2176","messageId":"2177","endLine":53,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":70,"column":6,"nodeType":"2257","endLine":70,"endColumn":8,"suggestions":"2281"},{"ruleId":"2174","severity":1,"message":"2259","line":46,"column":9,"nodeType":"2176","messageId":"2177","endLine":46,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":84,"column":6,"nodeType":"2257","endLine":84,"endColumn":21,"suggestions":"2282"},{"ruleId":"2193","severity":1,"message":"2194","line":15,"column":1,"nodeType":"2195","endLine":47,"endColumn":2},{"ruleId":"2174","severity":1,"message":"2253","line":52,"column":7,"nodeType":"2176","messageId":"2177","endLine":52,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":70,"column":6,"nodeType":"2257","endLine":70,"endColumn":8,"suggestions":"2283"},{"ruleId":"2174","severity":1,"message":"2284","line":9,"column":8,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":20},{"ruleId":"2174","severity":1,"message":"2285","line":11,"column":3,"nodeType":"2176","messageId":"2177","endLine":11,"endColumn":26},{"ruleId":"2174","severity":1,"message":"2286","line":12,"column":3,"nodeType":"2176","messageId":"2177","endLine":12,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2287","line":13,"column":3,"nodeType":"2176","messageId":"2177","endLine":13,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2288","line":16,"column":7,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2289","line":61,"column":10,"nodeType":"2176","messageId":"2177","endLine":61,"endColumn":22},{"ruleId":"2174","severity":1,"message":"2290","line":63,"column":9,"nodeType":"2176","messageId":"2177","endLine":63,"endColumn":25},{"ruleId":"2255","severity":1,"message":"2260","line":125,"column":6,"nodeType":"2257","endLine":125,"endColumn":21,"suggestions":"2291"},{"ruleId":"2174","severity":1,"message":"2253","line":53,"column":7,"nodeType":"2176","messageId":"2177","endLine":53,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":70,"column":6,"nodeType":"2257","endLine":70,"endColumn":8,"suggestions":"2292"},{"ruleId":"2174","severity":1,"message":"2259","line":49,"column":9,"nodeType":"2176","messageId":"2177","endLine":49,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":100,"column":6,"nodeType":"2257","endLine":100,"endColumn":21,"suggestions":"2293"},{"ruleId":"2174","severity":1,"message":"2294","line":14,"column":5,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2295","line":15,"column":5,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":67,"column":6,"nodeType":"2257","endLine":67,"endColumn":8,"suggestions":"2296"},{"ruleId":"2174","severity":1,"message":"2259","line":37,"column":9,"nodeType":"2176","messageId":"2177","endLine":37,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":73,"column":6,"nodeType":"2257","endLine":73,"endColumn":21,"suggestions":"2297"},{"ruleId":"2174","severity":1,"message":"2253","line":52,"column":7,"nodeType":"2176","messageId":"2177","endLine":52,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":57,"column":11,"nodeType":"2176","messageId":"2177","endLine":57,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":70,"column":6,"nodeType":"2257","endLine":70,"endColumn":8,"suggestions":"2298"},{"ruleId":"2174","severity":1,"message":"2259","line":48,"column":9,"nodeType":"2176","messageId":"2177","endLine":48,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2299","line":68,"column":7,"nodeType":"2176","messageId":"2177","endLine":68,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2253","line":52,"column":7,"nodeType":"2176","messageId":"2177","endLine":52,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":57,"column":11,"nodeType":"2176","messageId":"2177","endLine":57,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":70,"column":6,"nodeType":"2257","endLine":70,"endColumn":8,"suggestions":"2300"},{"ruleId":"2174","severity":1,"message":"2253","line":52,"column":7,"nodeType":"2176","messageId":"2177","endLine":52,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":57,"column":11,"nodeType":"2176","messageId":"2177","endLine":57,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2301","line":74,"column":6,"nodeType":"2257","endLine":74,"endColumn":8,"suggestions":"2302"},{"ruleId":"2174","severity":1,"message":"2253","line":54,"column":7,"nodeType":"2176","messageId":"2177","endLine":54,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":72,"column":6,"nodeType":"2257","endLine":72,"endColumn":8,"suggestions":"2303"},{"ruleId":"2174","severity":1,"message":"2253","line":52,"column":7,"nodeType":"2176","messageId":"2177","endLine":52,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":57,"column":11,"nodeType":"2176","messageId":"2177","endLine":57,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":70,"column":6,"nodeType":"2257","endLine":70,"endColumn":8,"suggestions":"2304"},{"ruleId":"2174","severity":1,"message":"2253","line":54,"column":7,"nodeType":"2176","messageId":"2177","endLine":54,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":73,"column":6,"nodeType":"2257","endLine":73,"endColumn":8,"suggestions":"2305"},{"ruleId":"2174","severity":1,"message":"2288","line":10,"column":7,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":89,"column":6,"nodeType":"2257","endLine":89,"endColumn":21,"suggestions":"2306"},{"ruleId":"2174","severity":1,"message":"2253","line":53,"column":7,"nodeType":"2176","messageId":"2177","endLine":53,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":58,"column":11,"nodeType":"2176","messageId":"2177","endLine":58,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":71,"column":6,"nodeType":"2257","endLine":71,"endColumn":8,"suggestions":"2307"},{"ruleId":"2174","severity":1,"message":"2288","line":10,"column":7,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":87,"column":6,"nodeType":"2257","endLine":87,"endColumn":21,"suggestions":"2308"},{"ruleId":"2174","severity":1,"message":"2253","line":53,"column":7,"nodeType":"2176","messageId":"2177","endLine":53,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":58,"column":11,"nodeType":"2176","messageId":"2177","endLine":58,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":71,"column":6,"nodeType":"2257","endLine":71,"endColumn":8,"suggestions":"2309"},{"ruleId":"2174","severity":1,"message":"2253","line":53,"column":7,"nodeType":"2176","messageId":"2177","endLine":53,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":58,"column":11,"nodeType":"2176","messageId":"2177","endLine":58,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":71,"column":6,"nodeType":"2257","endLine":71,"endColumn":8,"suggestions":"2310"},{"ruleId":"2174","severity":1,"message":"2253","line":53,"column":7,"nodeType":"2176","messageId":"2177","endLine":53,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":58,"column":11,"nodeType":"2176","messageId":"2177","endLine":58,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":71,"column":6,"nodeType":"2257","endLine":71,"endColumn":8,"suggestions":"2311"},{"ruleId":"2174","severity":1,"message":"2253","line":54,"column":7,"nodeType":"2176","messageId":"2177","endLine":54,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":73,"column":6,"nodeType":"2257","endLine":73,"endColumn":8,"suggestions":"2312"},{"ruleId":"2174","severity":1,"message":"2313","line":98,"column":9,"nodeType":"2176","messageId":"2177","endLine":98,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2259","line":48,"column":9,"nodeType":"2176","messageId":"2177","endLine":48,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":100,"column":6,"nodeType":"2257","endLine":100,"endColumn":21,"suggestions":"2314"},{"ruleId":"2174","severity":1,"message":"2279","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2253","line":56,"column":7,"nodeType":"2176","messageId":"2177","endLine":56,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":74,"column":6,"nodeType":"2257","endLine":74,"endColumn":8,"suggestions":"2315"},{"ruleId":"2174","severity":1,"message":"2279","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2253","line":55,"column":7,"nodeType":"2176","messageId":"2177","endLine":55,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":73,"column":6,"nodeType":"2257","endLine":73,"endColumn":8,"suggestions":"2316"},{"ruleId":"2255","severity":1,"message":"2317","line":70,"column":8,"nodeType":"2257","endLine":70,"endColumn":10,"suggestions":"2318"},{"ruleId":"2174","severity":1,"message":"2313","line":80,"column":9,"nodeType":"2176","messageId":"2177","endLine":80,"endColumn":21},{"ruleId":"2255","severity":1,"message":"2317","line":71,"column":4,"nodeType":"2257","endLine":71,"endColumn":6,"suggestions":"2319"},{"ruleId":"2174","severity":1,"message":"2313","line":81,"column":9,"nodeType":"2176","messageId":"2177","endLine":81,"endColumn":21},{"ruleId":"2255","severity":1,"message":"2317","line":70,"column":4,"nodeType":"2257","endLine":70,"endColumn":6,"suggestions":"2320"},{"ruleId":"2174","severity":1,"message":"2313","line":80,"column":9,"nodeType":"2176","messageId":"2177","endLine":80,"endColumn":21},{"ruleId":"2255","severity":1,"message":"2317","line":70,"column":4,"nodeType":"2257","endLine":70,"endColumn":6,"suggestions":"2321"},{"ruleId":"2174","severity":1,"message":"2313","line":80,"column":9,"nodeType":"2176","messageId":"2177","endLine":80,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2317","line":93,"column":8,"nodeType":"2257","endLine":93,"endColumn":10,"suggestions":"2322"},{"ruleId":"2174","severity":1,"message":"2313","line":104,"column":9,"nodeType":"2176","messageId":"2177","endLine":104,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2288","line":10,"column":7,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":83,"column":6,"nodeType":"2257","endLine":83,"endColumn":21,"suggestions":"2323"},{"ruleId":"2174","severity":1,"message":"2324","line":7,"column":8,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2253","line":51,"column":7,"nodeType":"2176","messageId":"2177","endLine":51,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2317","line":90,"column":8,"nodeType":"2257","endLine":90,"endColumn":10,"suggestions":"2325"},{"ruleId":"2174","severity":1,"message":"2313","line":101,"column":9,"nodeType":"2176","messageId":"2177","endLine":101,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2288","line":9,"column":7,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":79,"column":6,"nodeType":"2257","endLine":79,"endColumn":21,"suggestions":"2326"},{"ruleId":"2166","replacedBy":"2327"},{"ruleId":"2168","replacedBy":"2328"},{"ruleId":"2174","severity":1,"message":"2223","line":26,"column":7,"nodeType":"2176","messageId":"2177","endLine":26,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2223","line":30,"column":7,"nodeType":"2176","messageId":"2177","endLine":30,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":10,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":19},{"ruleId":"2174","severity":1,"message":"2224","line":10,"column":8,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2223","line":30,"column":7,"nodeType":"2176","messageId":"2177","endLine":30,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2223","line":30,"column":7,"nodeType":"2176","messageId":"2177","endLine":30,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2223","line":25,"column":7,"nodeType":"2176","messageId":"2177","endLine":25,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2233","line":60,"column":7,"nodeType":"2176","messageId":"2177","endLine":60,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2205","line":4,"column":24,"nodeType":"2176","messageId":"2177","endLine":4,"endColumn":41},{"ruleId":"2174","severity":1,"message":"2206","line":5,"column":17,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":31},{"ruleId":"2174","severity":1,"message":"2207","line":6,"column":17,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":31},{"ruleId":"2174","severity":1,"message":"2208","line":7,"column":16,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":25},{"ruleId":"2174","severity":1,"message":"2209","line":8,"column":21,"nodeType":"2176","messageId":"2177","endLine":8,"endColumn":32},{"ruleId":"2174","severity":1,"message":"2210","line":9,"column":19,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":30},{"ruleId":"2174","severity":1,"message":"2211","line":10,"column":18,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":25},{"ruleId":"2174","severity":1,"message":"2212","line":11,"column":16,"nodeType":"2176","messageId":"2177","endLine":11,"endColumn":29},{"ruleId":"2174","severity":1,"message":"2213","line":14,"column":8,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":25},{"ruleId":"2174","severity":1,"message":"2214","line":15,"column":8,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2215","line":16,"column":8,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":29},{"ruleId":"2174","severity":1,"message":"2216","line":17,"column":8,"nodeType":"2176","messageId":"2177","endLine":17,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2217","line":18,"column":8,"nodeType":"2176","messageId":"2177","endLine":18,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2218","line":19,"column":8,"nodeType":"2176","messageId":"2177","endLine":19,"endColumn":26},{"ruleId":"2174","severity":1,"message":"2219","line":20,"column":8,"nodeType":"2176","messageId":"2177","endLine":20,"endColumn":23},{"ruleId":"2174","severity":1,"message":"2220","line":21,"column":8,"nodeType":"2176","messageId":"2177","endLine":21,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2221","line":22,"column":8,"nodeType":"2176","messageId":"2177","endLine":22,"endColumn":20},{"ruleId":"2174","severity":1,"message":"2329","line":24,"column":8,"nodeType":"2176","messageId":"2177","endLine":24,"endColumn":20},{"ruleId":"2174","severity":1,"message":"2330","line":25,"column":8,"nodeType":"2176","messageId":"2177","endLine":25,"endColumn":20},{"ruleId":"2174","severity":1,"message":"2222","line":26,"column":8,"nodeType":"2176","messageId":"2177","endLine":26,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2239","line":11,"column":8,"nodeType":"2176","messageId":"2177","endLine":11,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2240","line":12,"column":8,"nodeType":"2176","messageId":"2177","endLine":12,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2233","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2250","line":10,"column":10,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":20},{"ruleId":"2174","severity":1,"message":"2251","line":11,"column":8,"nodeType":"2176","messageId":"2177","endLine":11,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2253","line":54,"column":7,"nodeType":"2176","messageId":"2177","endLine":54,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":73,"column":6,"nodeType":"2257","endLine":73,"endColumn":8,"suggestions":"2331"},{"ruleId":"2174","severity":1,"message":"2313","line":97,"column":9,"nodeType":"2176","messageId":"2177","endLine":97,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2288","line":10,"column":7,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":88,"column":6,"nodeType":"2257","endLine":88,"endColumn":21,"suggestions":"2332"},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2317","line":93,"column":8,"nodeType":"2257","endLine":93,"endColumn":10,"suggestions":"2333"},{"ruleId":"2174","severity":1,"message":"2313","line":104,"column":9,"nodeType":"2176","messageId":"2177","endLine":104,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2288","line":10,"column":7,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":83,"column":6,"nodeType":"2257","endLine":83,"endColumn":21,"suggestions":"2334"},{"ruleId":"2174","severity":1,"message":"2253","line":54,"column":7,"nodeType":"2176","messageId":"2177","endLine":54,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":73,"column":6,"nodeType":"2257","endLine":73,"endColumn":8,"suggestions":"2335"},{"ruleId":"2174","severity":1,"message":"2313","line":98,"column":9,"nodeType":"2176","messageId":"2177","endLine":98,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2279","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2253","line":55,"column":7,"nodeType":"2176","messageId":"2177","endLine":55,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":73,"column":6,"nodeType":"2257","endLine":73,"endColumn":8,"suggestions":"2336"},{"ruleId":"2174","severity":1,"message":"2313","line":98,"column":9,"nodeType":"2176","messageId":"2177","endLine":98,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2253","line":55,"column":7,"nodeType":"2176","messageId":"2177","endLine":55,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":73,"column":6,"nodeType":"2257","endLine":73,"endColumn":8,"suggestions":"2337"},{"ruleId":"2174","severity":1,"message":"2313","line":98,"column":9,"nodeType":"2176","messageId":"2177","endLine":98,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2324","line":7,"column":8,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2253","line":51,"column":7,"nodeType":"2176","messageId":"2177","endLine":51,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2317","line":90,"column":8,"nodeType":"2257","endLine":90,"endColumn":10,"suggestions":"2338"},{"ruleId":"2174","severity":1,"message":"2313","line":101,"column":9,"nodeType":"2176","messageId":"2177","endLine":101,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2259","line":48,"column":9,"nodeType":"2176","messageId":"2177","endLine":48,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":100,"column":6,"nodeType":"2257","endLine":100,"endColumn":21,"suggestions":"2339"},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2317","line":89,"column":8,"nodeType":"2257","endLine":89,"endColumn":10,"suggestions":"2340"},{"ruleId":"2174","severity":1,"message":"2313","line":100,"column":9,"nodeType":"2176","messageId":"2177","endLine":100,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2288","line":9,"column":7,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":79,"column":6,"nodeType":"2257","endLine":79,"endColumn":21,"suggestions":"2341"},{"ruleId":"2174","severity":1,"message":"2253","line":51,"column":7,"nodeType":"2176","messageId":"2177","endLine":51,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":68,"column":6,"nodeType":"2257","endLine":68,"endColumn":8,"suggestions":"2342"},{"ruleId":"2174","severity":1,"message":"2313","line":85,"column":9,"nodeType":"2176","messageId":"2177","endLine":85,"endColumn":21},{"ruleId":"2255","severity":1,"message":"2317","line":71,"column":4,"nodeType":"2257","endLine":71,"endColumn":6,"suggestions":"2343"},{"ruleId":"2174","severity":1,"message":"2313","line":81,"column":9,"nodeType":"2176","messageId":"2177","endLine":81,"endColumn":21},{"ruleId":"2255","severity":1,"message":"2317","line":70,"column":8,"nodeType":"2257","endLine":70,"endColumn":10,"suggestions":"2344"},{"ruleId":"2174","severity":1,"message":"2313","line":80,"column":9,"nodeType":"2176","messageId":"2177","endLine":80,"endColumn":21},{"ruleId":"2255","severity":1,"message":"2317","line":70,"column":4,"nodeType":"2257","endLine":70,"endColumn":6,"suggestions":"2345"},{"ruleId":"2174","severity":1,"message":"2313","line":80,"column":9,"nodeType":"2176","messageId":"2177","endLine":80,"endColumn":21},{"ruleId":"2255","severity":1,"message":"2317","line":70,"column":4,"nodeType":"2257","endLine":70,"endColumn":6,"suggestions":"2346"},{"ruleId":"2174","severity":1,"message":"2313","line":80,"column":9,"nodeType":"2176","messageId":"2177","endLine":80,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2347","line":22,"column":3,"nodeType":"2176","messageId":"2177","endLine":22,"endColumn":28},{"ruleId":"2174","severity":1,"message":"2348","line":26,"column":3,"nodeType":"2176","messageId":"2177","endLine":26,"endColumn":28},{"ruleId":"2174","severity":1,"message":"2349","line":34,"column":3,"nodeType":"2176","messageId":"2177","endLine":34,"endColumn":29},{"ruleId":"2174","severity":1,"message":"2350","line":38,"column":3,"nodeType":"2176","messageId":"2177","endLine":38,"endColumn":28},{"ruleId":"2174","severity":1,"message":"2351","line":42,"column":3,"nodeType":"2176","messageId":"2177","endLine":42,"endColumn":29},{"ruleId":"2174","severity":1,"message":"2352","line":45,"column":3,"nodeType":"2176","messageId":"2177","endLine":45,"endColumn":30},{"ruleId":"2174","severity":1,"message":"2353","line":46,"column":3,"nodeType":"2176","messageId":"2177","endLine":46,"endColumn":28},{"ruleId":"2174","severity":1,"message":"2354","line":47,"column":3,"nodeType":"2176","messageId":"2177","endLine":47,"endColumn":23},{"ruleId":"2174","severity":1,"message":"2355","line":48,"column":3,"nodeType":"2176","messageId":"2177","endLine":48,"endColumn":22},{"ruleId":"2174","severity":1,"message":"2356","line":50,"column":3,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":33},{"ruleId":"2174","severity":1,"message":"2357","line":54,"column":3,"nodeType":"2176","messageId":"2177","endLine":54,"endColumn":19},{"ruleId":"2174","severity":1,"message":"2358","line":58,"column":3,"nodeType":"2176","messageId":"2177","endLine":58,"endColumn":27},{"ruleId":"2174","severity":1,"message":"2359","line":62,"column":3,"nodeType":"2176","messageId":"2177","endLine":62,"endColumn":22},{"ruleId":"2174","severity":1,"message":"2360","line":5,"column":8,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2279","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2361","line":7,"column":10,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2362","line":14,"column":3,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2363","line":15,"column":3,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":11},{"ruleId":"2174","severity":1,"message":"2364","line":16,"column":3,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2365","line":18,"column":3,"nodeType":"2176","messageId":"2177","endLine":18,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2201","line":21,"column":9,"nodeType":"2176","messageId":"2177","endLine":21,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2366","line":57,"column":10,"nodeType":"2176","messageId":"2177","endLine":57,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":69,"column":6,"nodeType":"2257","endLine":69,"endColumn":8,"suggestions":"2367"},{"ruleId":"2174","severity":1,"message":"2313","line":88,"column":9,"nodeType":"2176","messageId":"2177","endLine":88,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2368","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2369","line":7,"column":8,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2250","line":9,"column":8,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2370","line":10,"column":8,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2243","line":32,"column":13,"nodeType":"2176","messageId":"2177","endLine":32,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2371","line":35,"column":7,"nodeType":"2176","messageId":"2177","endLine":35,"endColumn":17},{"ruleId":"2255","severity":1,"message":"2260","line":101,"column":6,"nodeType":"2257","endLine":101,"endColumn":21,"suggestions":"2372"},{"ruleId":"2174","severity":1,"message":"2357","line":55,"column":3,"nodeType":"2176","messageId":"2177","endLine":55,"endColumn":19},{"ruleId":"2174","severity":1,"message":"2358","line":59,"column":3,"nodeType":"2176","messageId":"2177","endLine":59,"endColumn":27},{"ruleId":"2174","severity":1,"message":"2359","line":63,"column":3,"nodeType":"2176","messageId":"2177","endLine":63,"endColumn":22},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2368","line":8,"column":8,"nodeType":"2176","messageId":"2177","endLine":8,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2373","line":9,"column":8,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2374","line":13,"column":8,"nodeType":"2176","messageId":"2177","endLine":13,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2375","line":14,"column":8,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":23},{"ruleId":"2174","severity":1,"message":"2376","line":16,"column":8,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":11},{"ruleId":"2174","severity":1,"message":"2377","line":25,"column":7,"nodeType":"2176","messageId":"2177","endLine":25,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2378","line":27,"column":7,"nodeType":"2176","messageId":"2177","endLine":27,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2379","line":28,"column":7,"nodeType":"2176","messageId":"2177","endLine":28,"endColumn":9},{"ruleId":"2174","severity":1,"message":"2380","line":31,"column":7,"nodeType":"2176","messageId":"2177","endLine":31,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2381","line":32,"column":7,"nodeType":"2176","messageId":"2177","endLine":32,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2382","line":37,"column":7,"nodeType":"2176","messageId":"2177","endLine":37,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2360","line":5,"column":8,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2279","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2361","line":7,"column":10,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2362","line":14,"column":3,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2363","line":15,"column":3,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":11},{"ruleId":"2174","severity":1,"message":"2364","line":16,"column":3,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2365","line":18,"column":3,"nodeType":"2176","messageId":"2177","endLine":18,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2201","line":21,"column":9,"nodeType":"2176","messageId":"2177","endLine":21,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2366","line":57,"column":10,"nodeType":"2176","messageId":"2177","endLine":57,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":69,"column":6,"nodeType":"2257","endLine":69,"endColumn":8,"suggestions":"2383"},{"ruleId":"2174","severity":1,"message":"2313","line":87,"column":9,"nodeType":"2176","messageId":"2177","endLine":87,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2360","line":5,"column":8,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2279","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2361","line":7,"column":10,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2362","line":14,"column":3,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2363","line":15,"column":3,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":11},{"ruleId":"2174","severity":1,"message":"2364","line":16,"column":3,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2365","line":18,"column":3,"nodeType":"2176","messageId":"2177","endLine":18,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2201","line":21,"column":9,"nodeType":"2176","messageId":"2177","endLine":21,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2366","line":57,"column":10,"nodeType":"2176","messageId":"2177","endLine":57,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":69,"column":6,"nodeType":"2257","endLine":69,"endColumn":8,"suggestions":"2384"},{"ruleId":"2174","severity":1,"message":"2313","line":87,"column":9,"nodeType":"2176","messageId":"2177","endLine":87,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2360","line":5,"column":8,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2279","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2361","line":7,"column":10,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2362","line":14,"column":3,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2363","line":15,"column":3,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":11},{"ruleId":"2174","severity":1,"message":"2364","line":16,"column":3,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2365","line":18,"column":3,"nodeType":"2176","messageId":"2177","endLine":18,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2201","line":21,"column":9,"nodeType":"2176","messageId":"2177","endLine":21,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2253","line":49,"column":7,"nodeType":"2176","messageId":"2177","endLine":49,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2366","line":56,"column":10,"nodeType":"2176","messageId":"2177","endLine":56,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2256","line":68,"column":6,"nodeType":"2257","endLine":68,"endColumn":8,"suggestions":"2385"},{"ruleId":"2174","severity":1,"message":"2313","line":86,"column":9,"nodeType":"2176","messageId":"2177","endLine":86,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2386","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":35},{"ruleId":"2174","severity":1,"message":"2360","line":5,"column":8,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2279","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2361","line":7,"column":10,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":16},{"ruleId":"2174","severity":1,"message":"2362","line":14,"column":3,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2363","line":15,"column":3,"nodeType":"2176","messageId":"2177","endLine":15,"endColumn":11},{"ruleId":"2174","severity":1,"message":"2364","line":16,"column":3,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2365","line":18,"column":3,"nodeType":"2176","messageId":"2177","endLine":18,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2201","line":21,"column":9,"nodeType":"2176","messageId":"2177","endLine":21,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2366","line":57,"column":10,"nodeType":"2176","messageId":"2177","endLine":57,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2387","line":70,"column":6,"nodeType":"2257","endLine":70,"endColumn":8,"suggestions":"2388"},{"ruleId":"2174","severity":1,"message":"2313","line":85,"column":9,"nodeType":"2176","messageId":"2177","endLine":85,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2389","line":1,"column":29,"nodeType":"2176","messageId":"2177","endLine":1,"endColumn":37},{"ruleId":"2174","severity":1,"message":"2390","line":2,"column":10,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2259","line":40,"column":9,"nodeType":"2176","messageId":"2177","endLine":40,"endColumn":16},{"ruleId":"2391","severity":1,"message":"2392","line":48,"column":5,"nodeType":"2393","messageId":"2394","endLine":48,"endColumn":24},{"ruleId":"2255","severity":1,"message":"2263","line":90,"column":6,"nodeType":"2257","endLine":90,"endColumn":21,"suggestions":"2395"},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2368","line":8,"column":8,"nodeType":"2176","messageId":"2177","endLine":8,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2373","line":9,"column":8,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2374","line":13,"column":8,"nodeType":"2176","messageId":"2177","endLine":13,"endColumn":12},{"ruleId":"2174","severity":1,"message":"2375","line":14,"column":8,"nodeType":"2176","messageId":"2177","endLine":14,"endColumn":23},{"ruleId":"2174","severity":1,"message":"2376","line":16,"column":8,"nodeType":"2176","messageId":"2177","endLine":16,"endColumn":11},{"ruleId":"2174","severity":1,"message":"2379","line":27,"column":7,"nodeType":"2176","messageId":"2177","endLine":27,"endColumn":9},{"ruleId":"2174","severity":1,"message":"2186","line":2,"column":8,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2368","line":6,"column":8,"nodeType":"2176","messageId":"2177","endLine":6,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2369","line":7,"column":8,"nodeType":"2176","messageId":"2177","endLine":7,"endColumn":13},{"ruleId":"2174","severity":1,"message":"2250","line":9,"column":8,"nodeType":"2176","messageId":"2177","endLine":9,"endColumn":18},{"ruleId":"2174","severity":1,"message":"2370","line":10,"column":8,"nodeType":"2176","messageId":"2177","endLine":10,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2243","line":32,"column":13,"nodeType":"2176","messageId":"2177","endLine":32,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2371","line":35,"column":7,"nodeType":"2176","messageId":"2177","endLine":35,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":55,"column":11,"nodeType":"2176","messageId":"2177","endLine":55,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2387","line":69,"column":6,"nodeType":"2257","endLine":69,"endColumn":8,"suggestions":"2396"},{"ruleId":"2174","severity":1,"message":"2313","line":94,"column":9,"nodeType":"2176","messageId":"2177","endLine":94,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2389","line":1,"column":29,"nodeType":"2176","messageId":"2177","endLine":1,"endColumn":37},{"ruleId":"2174","severity":1,"message":"2390","line":2,"column":10,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2259","line":40,"column":9,"nodeType":"2176","messageId":"2177","endLine":40,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":86,"column":6,"nodeType":"2257","endLine":86,"endColumn":21,"suggestions":"2397"},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2174","severity":1,"message":"2254","line":55,"column":11,"nodeType":"2176","messageId":"2177","endLine":55,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2387","line":69,"column":6,"nodeType":"2257","endLine":69,"endColumn":8,"suggestions":"2398"},{"ruleId":"2174","severity":1,"message":"2313","line":94,"column":9,"nodeType":"2176","messageId":"2177","endLine":94,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2389","line":1,"column":29,"nodeType":"2176","messageId":"2177","endLine":1,"endColumn":37},{"ruleId":"2174","severity":1,"message":"2390","line":2,"column":10,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2259","line":40,"column":9,"nodeType":"2176","messageId":"2177","endLine":40,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":86,"column":6,"nodeType":"2257","endLine":86,"endColumn":21,"suggestions":"2399"},{"ruleId":"2174","severity":1,"message":"2279","line":5,"column":8,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2253","line":51,"column":7,"nodeType":"2176","messageId":"2177","endLine":51,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2387","line":70,"column":6,"nodeType":"2257","endLine":70,"endColumn":8,"suggestions":"2400"},{"ruleId":"2174","severity":1,"message":"2313","line":95,"column":9,"nodeType":"2176","messageId":"2177","endLine":95,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2389","line":1,"column":29,"nodeType":"2176","messageId":"2177","endLine":1,"endColumn":37},{"ruleId":"2174","severity":1,"message":"2390","line":2,"column":10,"nodeType":"2176","messageId":"2177","endLine":2,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2259","line":40,"column":9,"nodeType":"2176","messageId":"2177","endLine":40,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2263","line":83,"column":6,"nodeType":"2257","endLine":83,"endColumn":21,"suggestions":"2401"},{"ruleId":"2174","severity":1,"message":"2279","line":5,"column":8,"nodeType":"2176","messageId":"2177","endLine":5,"endColumn":17},{"ruleId":"2174","severity":1,"message":"2253","line":50,"column":7,"nodeType":"2176","messageId":"2177","endLine":50,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2387","line":69,"column":6,"nodeType":"2257","endLine":69,"endColumn":8,"suggestions":"2402"},{"ruleId":"2174","severity":1,"message":"2313","line":94,"column":9,"nodeType":"2176","messageId":"2177","endLine":94,"endColumn":21},{"ruleId":"2174","severity":1,"message":"2389","line":1,"column":29,"nodeType":"2176","messageId":"2177","endLine":1,"endColumn":37},{"ruleId":"2174","severity":1,"message":"2259","line":42,"column":9,"nodeType":"2176","messageId":"2177","endLine":42,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2260","line":98,"column":6,"nodeType":"2257","endLine":98,"endColumn":21,"suggestions":"2403"},{"ruleId":"2174","severity":1,"message":"2404","line":17,"column":8,"nodeType":"2176","messageId":"2177","endLine":17,"endColumn":18},{"ruleId":"2193","severity":1,"message":"2194","line":8,"column":1,"nodeType":"2195","endLine":18,"endColumn":2},{"ruleId":"2193","severity":1,"message":"2194","line":5,"column":1,"nodeType":"2195","endLine":12,"endColumn":2},"no-native-reassign",["2405"],"no-negated-in-lhs",["2406"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Hidden' is defined but never used.","Identifier","unusedVar","'DateWidget' is defined but never used.","'TaskWidget' is defined but never used.","'WeatherWidget' is defined but never used.","'ContactWidget' is defined but never used.","'TimelineWidget' is defined but never used.","'BlogBar' is defined but never used.","'four' is defined but never used.","'five' is defined but never used.","'PropTypes' is defined but never used.","'Edit' is defined but never used.","'LeftSidebarThumb' is defined but never used.","'LeftSidebarBigThumb' is defined but never used.","'TopNavigationThumb' is defined but never used.","'MegaMenuThumb' is defined but never used.","'LayoutThumb' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'thumb1' is defined but never used.","'thumb3' is defined but never used.","'thumb5' is defined but never used.","'thumb2' is defined but never used.","'thumb4' is defined but never used.","'Link' is defined but never used.","'link' is defined but never used.","'imgApi' is defined but never used.","'NavLink' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","'CalendarTodayIcon' is defined but never used.","'TrainIcon' is defined but never used.","'SupervisorAccountIcon' is defined but never used.","'ShutterSpeedIcon' is defined but never used.","'LocalCarWashIcon' is defined but never used.","'AccountBalanceIcon' is defined but never used.","'AttachMoneyIcon' is defined but never used.","'BuildIcon' is defined but never used.","'CategoryIcon' is defined but never used.","'PersonIcon' is defined but never used.","'titleException' is assigned a value but never used.","'navigationConfig' is defined but never used.","'data' is assigned a value but never used.","'Avatar' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Button' is defined but never used.","'optionsOpt' is assigned a value but never used.","'ITEM_HEIGHT' is assigned a value but never used.","'avatar' is assigned a value but never used.","'dataMenu' is assigned a value but never used.","'Fragment' is defined but never used.","'UserMenu' is defined but never used.","'mode' is assigned a value but never used.","'openGuide' is assigned a value but never used.","'brand' is defined but never used.","'dummy' is defined but never used.","'logo' is defined but never used.","'turnDarker' is assigned a value but never used.","'status' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'openMenuStatus' is assigned a value but never used.","'closeMenuStatus' is assigned a value but never used.","'changeStatus' is assigned a value but never used.","'transform' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'Info' is defined but never used.","'Typography' is defined but never used.","'clsx' is defined but never used.","'GET_INVENTORY_CHECK_FREQUENCY_CHOICES' is defined but never used.","'options' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["2407"],"'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'setValues'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2408"],["2409"],"React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["2410"],["2411"],["2412"],["2413"],["2414"],["2415"],"'GiConsoleController' is defined but never used.",["2416"],["2417"],["2418"],["2419"],["2420"],["2421"],["2422"],["2423"],"'CloseIcon' is defined but never used.","'AddWorkBook' is defined but never used.",["2424"],["2425"],["2426"],"'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'useStyles' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.",["2427"],["2428"],["2429"],"'classsubjectsURL' is defined but never used.","'classstudentsURL' is defined but never used.",["2430"],["2431"],["2432"],"'setValues' is assigned a value but never used.",["2433"],"React Hook useEffect has missing dependencies: 'props' and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2434"],["2435"],["2436"],["2437"],["2438"],["2439"],["2440"],["2441"],["2442"],["2443"],["2444"],"'handleSearch' is assigned a value but never used.",["2445"],["2446"],["2447"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["2448"],["2449"],["2450"],["2451"],["2452"],["2453"],"'AddIcon' is defined but never used.",["2454"],["2455"],["2405"],["2406"],"'HowToRegIcon' is defined but never used.","'BusinessIcon' is defined but never used.",["2456"],["2457"],["2458"],["2459"],["2460"],["2461"],["2462"],["2463"],["2464"],["2465"],["2466"],["2467"],["2468"],["2469"],["2470"],["2471"],"'GET_ADMIN_TOPIC_OBJECTIVE' is defined but never used.","'GET_ADMIN_TOPIC_GUIDELINE' is defined but never used.","'GET_ADMIN_STUDY_NOTE_IMAGE' is defined but never used.","'GET_ADMIN_STUDY_NOTE_FILE' is defined but never used.","'GET_ADMIN_STUDY_NOTE_VIDEO' is defined but never used.","'GET_ADMIN_STUDY_NOTES_NOTES' is defined but never used.","'GET_ADMIN_STUDY_NOTE_NOTE' is defined but never used.","'EDIT_STUDY_NOTE_NOTE' is defined but never used.","'ADD_STUDY_NOTE_NOTE' is defined but never used.","'GET_ADMIN_STUDY_NOTE_REFERENCE' is defined but never used.","'GET_ADMIN_AUTHOR' is defined but never used.","'GET_ADMIN_PUBLISHER_CITY' is defined but never used.","'GET_ADMIN_PUBLISHER' is defined but never used.","'EditOutlinedIcon' is defined but never used.","'Search' is defined but never used.","'TableBody' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'InputAdornment' is defined but never used.","'filterFn' is assigned a value but never used.",["2472"],"'IconButton' is defined but never used.","'Badge' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'courseData' is assigned a value but never used.",["2473"],"'Tooltip' is defined but never used.","'Chip' is defined but never used.","'AddShoppingCart' is defined but never used.","'Fab' is defined but never used.","'thumbnail' is assigned a value but never used.","'short_name' is assigned a value but never used.","'id' is assigned a value but never used.","'start_date' is assigned a value but never used.","'end_date' is assigned a value but never used.","'handleClick' is assigned a value but never used.",["2474"],["2475"],["2476"],"'InformationTechnologyLayout' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2477"],"'useState' is defined but never used.","'connect' is defined but never used.","no-dupe-keys","Duplicate key 'assessment_overview'.","ObjectExpression","unexpected",["2478"],["2479"],["2480"],["2481"],["2482"],["2483"],["2484"],["2485"],["2486"],"'SchoolIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"2487","fix":"2488"},{"desc":"2489","fix":"2490"},{"desc":"2487","fix":"2491"},{"desc":"2492","fix":"2493"},{"desc":"2487","fix":"2494"},{"desc":"2489","fix":"2495"},{"desc":"2487","fix":"2496"},{"desc":"2489","fix":"2497"},{"desc":"2487","fix":"2498"},{"desc":"2487","fix":"2499"},{"desc":"2492","fix":"2500"},{"desc":"2487","fix":"2501"},{"desc":"2492","fix":"2502"},{"desc":"2487","fix":"2503"},{"desc":"2492","fix":"2504"},{"desc":"2487","fix":"2505"},{"desc":"2492","fix":"2506"},{"desc":"2487","fix":"2507"},{"desc":"2492","fix":"2508"},{"desc":"2487","fix":"2509"},{"desc":"2489","fix":"2510"},{"desc":"2487","fix":"2511"},{"desc":"2489","fix":"2512"},{"desc":"2487","fix":"2513"},{"desc":"2492","fix":"2514"},{"desc":"2487","fix":"2515"},{"desc":"2487","fix":"2516"},{"desc":"2517","fix":"2518"},{"desc":"2487","fix":"2519"},{"desc":"2487","fix":"2520"},{"desc":"2487","fix":"2521"},{"desc":"2489","fix":"2522"},{"desc":"2487","fix":"2523"},{"desc":"2489","fix":"2524"},{"desc":"2487","fix":"2525"},{"desc":"2487","fix":"2526"},{"desc":"2487","fix":"2527"},{"desc":"2487","fix":"2528"},{"desc":"2489","fix":"2529"},{"desc":"2487","fix":"2530"},{"desc":"2487","fix":"2531"},{"desc":"2532","fix":"2533"},{"desc":"2532","fix":"2534"},{"desc":"2532","fix":"2535"},{"desc":"2532","fix":"2536"},{"desc":"2532","fix":"2537"},{"desc":"2489","fix":"2538"},{"desc":"2532","fix":"2539"},{"desc":"2492","fix":"2540"},{"desc":"2487","fix":"2541"},{"desc":"2489","fix":"2542"},{"desc":"2532","fix":"2543"},{"desc":"2489","fix":"2544"},{"desc":"2487","fix":"2545"},{"desc":"2487","fix":"2546"},{"desc":"2487","fix":"2547"},{"desc":"2532","fix":"2548"},{"desc":"2489","fix":"2549"},{"desc":"2532","fix":"2550"},{"desc":"2492","fix":"2551"},{"desc":"2487","fix":"2552"},{"desc":"2532","fix":"2553"},{"desc":"2532","fix":"2554"},{"desc":"2532","fix":"2555"},{"desc":"2532","fix":"2556"},{"desc":"2487","fix":"2557"},{"desc":"2489","fix":"2558"},{"desc":"2487","fix":"2559"},{"desc":"2487","fix":"2560"},{"desc":"2487","fix":"2561"},{"desc":"2562","fix":"2563"},{"desc":"2492","fix":"2564"},{"desc":"2562","fix":"2565"},{"desc":"2492","fix":"2566"},{"desc":"2562","fix":"2567"},{"desc":"2492","fix":"2568"},{"desc":"2562","fix":"2569"},{"desc":"2492","fix":"2570"},{"desc":"2562","fix":"2571"},{"desc":"2489","fix":"2572"},"Update the dependencies array to be: [props]",{"range":"2573","text":"2574"},"Update the dependencies array to be: [props, recordForEdit, setValues]",{"range":"2575","text":"2576"},{"range":"2577","text":"2574"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"2578","text":"2579"},{"range":"2580","text":"2574"},{"range":"2581","text":"2576"},{"range":"2582","text":"2574"},{"range":"2583","text":"2576"},{"range":"2584","text":"2574"},{"range":"2585","text":"2574"},{"range":"2586","text":"2579"},{"range":"2587","text":"2574"},{"range":"2588","text":"2579"},{"range":"2589","text":"2574"},{"range":"2590","text":"2579"},{"range":"2591","text":"2574"},{"range":"2592","text":"2579"},{"range":"2593","text":"2574"},{"range":"2594","text":"2579"},{"range":"2595","text":"2574"},{"range":"2596","text":"2576"},{"range":"2597","text":"2574"},{"range":"2598","text":"2576"},{"range":"2599","text":"2574"},{"range":"2600","text":"2579"},{"range":"2601","text":"2574"},{"range":"2602","text":"2574"},"Update the dependencies array to be: [props, token]",{"range":"2603","text":"2604"},{"range":"2605","text":"2574"},{"range":"2606","text":"2574"},{"range":"2607","text":"2574"},{"range":"2608","text":"2576"},{"range":"2609","text":"2574"},{"range":"2610","text":"2576"},{"range":"2611","text":"2574"},{"range":"2612","text":"2574"},{"range":"2613","text":"2574"},{"range":"2614","text":"2574"},{"range":"2615","text":"2576"},{"range":"2616","text":"2574"},{"range":"2617","text":"2574"},"Update the dependencies array to be: [id]",{"range":"2618","text":"2619"},{"range":"2620","text":"2619"},{"range":"2621","text":"2619"},{"range":"2622","text":"2619"},{"range":"2623","text":"2619"},{"range":"2624","text":"2576"},{"range":"2625","text":"2619"},{"range":"2626","text":"2579"},{"range":"2627","text":"2574"},{"range":"2628","text":"2576"},{"range":"2629","text":"2619"},{"range":"2630","text":"2576"},{"range":"2631","text":"2574"},{"range":"2632","text":"2574"},{"range":"2633","text":"2574"},{"range":"2634","text":"2619"},{"range":"2635","text":"2576"},{"range":"2636","text":"2619"},{"range":"2637","text":"2579"},{"range":"2638","text":"2574"},{"range":"2639","text":"2619"},{"range":"2640","text":"2619"},{"range":"2641","text":"2619"},{"range":"2642","text":"2619"},{"range":"2643","text":"2574"},{"range":"2644","text":"2576"},{"range":"2645","text":"2574"},{"range":"2646","text":"2574"},{"range":"2647","text":"2574"},"Update the dependencies array to be: [id, props]",{"range":"2648","text":"2649"},{"range":"2650","text":"2579"},{"range":"2651","text":"2649"},{"range":"2652","text":"2579"},{"range":"2653","text":"2649"},{"range":"2654","text":"2579"},{"range":"2655","text":"2649"},{"range":"2656","text":"2579"},{"range":"2657","text":"2649"},{"range":"2658","text":"2576"},[1802,1804],"[props]",[2190,2205],"[props, recordForEdit, setValues]",[1773,1775],[1599,1614],"[recordForEdit, setValues]",[1816,1818],[1909,1924],[1872,1874],[2635,2650],[1920,1922],[1760,1762],[1715,1730],[1742,1744],[1726,1741],[1700,1702],[1600,1615],[1684,1686],[1598,1613],[1834,1836],[1743,1758],[1820,1822],[3700,3715],[1809,1811],[2514,2529],[1684,1686],[1463,1478],[1793,1795],[1797,1799],[1904,1906],"[props, token]",[1870,1872],[1800,1802],[1971,1973],[1906,1921],[1894,1896],[1946,1961],[1894,1896],[1890,1892],[1889,1891],[1915,1917],[2578,2593],[1984,1986],[1987,1989],[1613,1615],"[id]",[1524,1526],[1604,1606],[1594,1596],[2346,2348],[1763,1778],[2270,2272],[1572,1587],[1933,1935],[1883,1898],[2346,2348],[1763,1778],[1882,1884],[1961,1963],[1905,1907],[2270,2272],[2578,2593],[2243,2245],[1572,1587],[1582,1584],[1524,1526],[1613,1615],[1604,1606],[1594,1596],[1813,1815],[2522,2537],[1810,1812],[1812,1814],[1811,1813],[1802,1804],"[id, props]",[2079,2094],[1755,1757],[1849,1864],[1755,1757],[1849,1864],[1795,1797],[1707,1722],[1866,1868],[2396,2411]]