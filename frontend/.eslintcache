[{"c:\\gosso\\gbc_oms\\frontend\\src\\index.js":"1","c:\\gosso\\gbc_oms\\frontend\\src\\store.js":"2","c:\\gosso\\gbc_oms\\frontend\\src\\App.js":"3","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogPage.js":"4","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\landing\\LandingPage.js":"5","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Profile\\CompanyProfile.js":"6","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\ThemeWrapper.js":"7","c:\\gosso\\gbc_oms\\frontend\\src\\it\\dashboard\\InformationTechnologyHome.js":"8","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\index.js":"9","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogHome.js":"10","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\landing\\HomePage.js":"11","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\ProfileBag.js":"12","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Profile\\Profile.js":"13","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Corporate.js":"14","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Blog.js":"15","c:\\gosso\\gbc_oms\\frontend\\src\\it\\dashboard\\dashboard-jss.js":"16","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\applicationTheme.js":"17","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\uiactions.js":"18","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\SliderWidget.js":"19","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\CounterIconsWidget.js":"20","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\DateWidget.js":"21","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\TaskWidget.js":"22","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\TimelineWidget.js":"23","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\PerformanceChartWidget.js":"24","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\WeatherWidget.js":"25","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\CalculatorWidget.js":"26","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\InformationTechnologyLayout.js":"27","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\ContactWidget.js":"28","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\index.js":"29","c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\brand.js":"30","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\admissions.js":"31","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\curriculums.js":"32","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\timelines.js":"33","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\adminattendances.js":"34","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\itmenu.js":"35","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\auth.js":"36","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\studentattendances.js":"37","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\teacherattendances.js":"38","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\ui.js":"39","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\SidebarBlog.js":"40","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\blogStyle-jss.js":"41","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\timeline.js":"42","c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\photos.js":"43","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\HeadlineCard.js":"44","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\ShowcaseCard.js":"45","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Pricing.js":"46","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Feature.js":"47","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Showcase.js":"48","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Contact.js":"49","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Banner.js":"50","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Technology.js":"51","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Header.js":"52","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Testimonials.js":"53","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Footer.js":"54","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\BlogBar.js":"55","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Decoration.js":"56","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\appStyles-jss.js":"57","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\themePaletteMode.js":"58","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\widget-jss.js":"59","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Albums.js":"60","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Favorites.js":"61","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\settings-jss.js":"62","c:\\gosso\\gbc_oms\\frontend\\src\\components\\PapperBlock\\PapperBlock.js":"63","c:\\gosso\\gbc_oms\\frontend\\src\\components\\SocialMedia\\jss\\cover-jss.js":"64","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\LayoutThumb.js":"65","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\ThemeThumbs.js":"66","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\MegaMenuThumb.js":"67","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Timeline\\api\\timelineData.js":"68","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\TopNavigationThumb.js":"69","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarBigThumb.js":"70","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarThumb.js":"71","c:\\gosso\\gbc_oms\\frontend\\src\\types\\attendanceTypes.js":"72","c:\\gosso\\gbc_oms\\frontend\\src\\utility.js":"73","c:\\gosso\\gbc_oms\\frontend\\src\\types\\uitypes.js":"74","c:\\gosso\\gbc_oms\\frontend\\src\\types\\authTypes.js":"75","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\navigationConfig.js":"76","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\index.js":"77","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\profile-jss.js":"78","c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\imgData.js":"79","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Title.js":"80","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\index.js":"81","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\landingStyle-jss.js":"82","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\darkPalette.js":"83","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\lightPalette.js":"84","c:\\gosso\\gbc_oms\\frontend\\src\\api\\palette\\colorfull.js":"85","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\GeneralCard.js":"86","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\PostCard.js":"87","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Quote\\Quote.js":"88","c:\\gosso\\gbc_oms\\frontend\\src\\theme\\themePalette.js":"89","c:\\gosso\\gbc_oms\\frontend\\src\\components\\PapperBlock\\papperStyle-jss.js":"90","c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\thumbPreview-jss.js":"91","c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\avatars.js":"92","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\helpSupport-jss.js":"93","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Qna.js":"94","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\ContactForm.js":"95","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\cardStyle-jss.js":"96","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\ResultPanel.js":"97","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\ButtonPanel.js":"98","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\SideNavMobile.js":"99","c:\\gosso\\gbc_oms\\frontend\\src\\api\\ui\\link.js":"100","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\PricingCard.js":"101","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\sidebar-jss.js":"102","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarBigLayout.js":"103","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\appStyles-jss.js":"104","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\DropMenuLayout.js":"105","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarLayout.js":"106","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\MegaMenuLayout.js":"107","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\RightSidebarLayout.js":"108","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Contact\\api\\contactData.js":"109","c:\\gosso\\gbc_oms\\frontend\\src\\api\\chart\\chartData.js":"110","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Counter\\CounterWidget.js":"111","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\About.js":"112","c:\\gosso\\gbc_oms\\frontend\\src\\components\\GuideSlider\\index.js":"113","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Connection.js":"114","c:\\gosso\\gbc_oms\\frontend\\src\\components\\SocialMedia\\Cover.js":"115","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\Sidebar.js":"116","c:\\gosso\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\BreadCrumb.js":"117","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\Header.js":"118","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\HeaderMenu.js":"119","c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\dummyContents.js":"120","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\index.js":"121","c:\\gosso\\gbc_oms\\frontend\\src\\components\\GuideSlider\\guide-jss.js":"122","c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\guideData.js":"123","c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\ProfileCard.js":"124","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\index.js":"125","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Company.js":"126","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\sidebar-jss.js":"127","c:\\gosso\\gbc_oms\\frontend\\src\\api\\apps\\connectionData.js":"128","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavigation.js":"129","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\UserMenu.js":"130","c:\\gosso\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\breadCrumb-jss.js":"131","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\header-jss.js":"132","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\MegaMenu.js":"133","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\SidebarContent.js":"134","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\DropListMenu.js":"135","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Search\\SearchUi.js":"136","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\Navigation.js":"137","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\sidebarBig-jss.js":"138","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MainMenuBig.js":"139","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\MainMenu.js":"140","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Search\\search-jss.js":"141","c:\\gosso\\gbc_oms\\frontend\\src\\api\\ui\\menu.js":"142","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavLink.js":"143","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MenuProfile.js":"144","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavCollapse.js":"145","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavItem.js":"146","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavGroup.js":"147","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavBadge.js":"148","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\NavLinkAdapter.js":"149","c:\\gosso\\gbc_oms\\frontend\\src\\types\\admissionTypes.js":"150","c:\\gosso\\gbc_oms\\frontend\\src\\types\\curriculumTypes.js":"151","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\feechoices.js":"152","c:\\gosso\\gbc_oms\\frontend\\src\\types\\choiceTypes.js":"153","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\fees.js":"154","c:\\gosso\\gbc_oms\\frontend\\src\\types\\feeTypes.js":"155","c:\\gosso\\gbc_oms\\frontend\\src\\it\\fees\\Fees.js":"156","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Controls.js":"157","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\fees.js":"158","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\choices.js":"159","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Input.js":"160","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Select.js":"161","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\RadioGroup.js":"162","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\CheckBox.js":"163","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\DatePicker.js":"164","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\ActionButton.js":"165","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Button.js":"166","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\DictSelect.js":"167","c:\\gosso\\gbc_oms\\frontend\\src\\constants.js":"168","c:\\gosso\\gbc_oms\\frontend\\src\\it\\fees\\AddFee.js":"169","c:\\gosso\\gbc_oms\\frontend\\src\\components\\table\\useTable.js":"170","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Popup.js":"171","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\useForm.js":"172","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\Curriculum.js":"173","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\AddCurriculum.js":"174","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\curriculums.js":"175","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\SubjectsAdminView.js":"176","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\AddSubject.js":"177","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\accounts.js":"178","c:\\gosso\\gbc_oms\\frontend\\src\\types\\accountTypes.js":"179","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AccountsAdminView.js":"180","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\accounts.js":"181","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddAccount.js":"182","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\inactiveaccounts.js":"183","c:\\gosso\\gbc_oms\\frontend\\src\\types\\inactiveaccountTypes.js":"184","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminInactiveAccounts.js":"185","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\inactiveaccounts.js":"186","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\taxes.js":"187","c:\\gosso\\gbc_oms\\frontend\\src\\types\\taxTypes.js":"188","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminTaxes.js":"189","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddTax.js":"190","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\taxes.js":"191","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\currencies.js":"192","c:\\gosso\\gbc_oms\\frontend\\src\\types\\currencyTypes.js":"193","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminCurrencies.js":"194","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddCurrency.js":"195","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\currencies.js":"196","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\workbooks.js":"197","c:\\gosso\\gbc_oms\\frontend\\src\\types\\workbookTypes.js":"198","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminWorkBooks.js":"199","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddWorkBook.js":"200","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\workbooks.js":"201","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\ledgers.js":"202","c:\\gosso\\gbc_oms\\frontend\\src\\types\\ledgerTypes.js":"203","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminLedger.js":"204","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddLedger.js":"205","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\ledgers.js":"206","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\journals.js":"207","c:\\gosso\\gbc_oms\\frontend\\src\\types\\journalTypes.js":"208","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\JournalsAdminView.js":"209","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddJournal.js":"210","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\journals.js":"211","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\people.js":"212","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\assets.js":"213","c:\\gosso\\gbc_oms\\frontend\\src\\types\\assetTypes.js":"214","c:\\gosso\\gbc_oms\\frontend\\src\\types\\peopleTypes.js":"215","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AssetsAdminView.js":"216","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\assets.js":"217","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddAsset.js":"218","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\people.js":"219","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\classes.js":"220","c:\\gosso\\gbc_oms\\frontend\\src\\types\\classTypes.js":"221","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\GradeSelect.js":"222","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\UserSelect.js":"223","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AdminClass.js":"224","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AddClass.js":"225","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\classes.js":"226","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AdminStream.js":"227","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AddStream.js":"228","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminBursars.js":"229","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AddBursar.js":"230","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminTeachers.js":"231","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminPrincipals.js":"232","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\AdminStudents.js":"233","c:\\gosso\\gbc_oms\\frontend\\src\\it\\parents\\AdminParents.js":"234","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendances.js":"235","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AddAttendance.js":"236","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\attendances.js":"237","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminApprovedAdmissions.js":"238","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\admissions.js":"239","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AddAdmission.js":"240","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminRejectedAdmissions.js":"241","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminPendingAdmissions.js":"242","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminMeetingAdmissions.js":"243","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\gradings.js":"244","c:\\gosso\\gbc_oms\\frontend\\src\\types\\gradingTypes.js":"245","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentTests.js":"246","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AddGrade.js":"247","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\gradings.js":"248","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentAssignments.js":"249","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercises.js":"250","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\StudentProfile.js":"251","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\About.js":"252","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Assignments.js":"253","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Attendance.js":"254","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Excercises.js":"255","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\ProfileBag.js":"256","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Tests.js":"257","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\appStyles-jss.js":"258","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendance.js":"259","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\About.js":"260","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AttendanceBag.js":"261","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\Records.js":"262","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\appStyles-jss.js":"263","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AddRecord.js":"264","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\TestRecords.js":"265","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\About.js":"266","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\GradingBag.js":"267","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\appStyles-jss.js":"268","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminGradingTest.js":"269","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\ExcerciseRecords.js":"270","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\EditRecord.js":"271","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercise.js":"272","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminAssignment.js":"273","c:\\gosso\\gbc_oms\\frontend\\src\\test\\StudentLog.js":"274","c:\\gosso\\gbc_oms\\frontend\\src\\test\\TeacherLog.js":"275","c:\\gosso\\gbc_oms\\frontend\\src\\test\\BursarLog.js":"276","c:\\gosso\\gbc_oms\\frontend\\src\\auth\\Login.js":"277","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\auth.js":"278","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\dashboard\\TeacherHome.js":"279","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\SliderWidget.js":"280","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\dashboard\\dashboard-jss.js":"281","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\PerformanceChartWidget.js":"282","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\DateWidget.js":"283","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\CounterIconsWidget.js":"284","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\TaskWidget.js":"285","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\WeatherWidget.js":"286","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\CalculatorWidget.js":"287","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\TeacherLayout.js":"288","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\TimelineWidget.js":"289","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\ContactWidget.js":"290","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\widget-jss.js":"291","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\appStyles-jss.js":"292","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\MegaMenuLayout.js":"293","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarBigLayout.js":"294","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarLayout.js":"295","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\RightSidebarLayout.js":"296","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\DropMenuLayout.js":"297","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Counter\\CounterWidget.js":"298","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\Sidebar.js":"299","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\navigationConfig.js":"300","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\index.js":"301","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavigation.js":"302","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\sidebar-jss.js":"303","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\sidebarBig-jss.js":"304","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MainMenuBig.js":"305","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\Navigation.js":"306","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MenuProfile.js":"307","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavGroup.js":"308","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavItem.js":"309","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavCollapse.js":"310","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavLink.js":"311","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\NavLinkAdapter.js":"312","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavBadge.js":"313","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendances.js":"314","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendance.js":"315","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\About.js":"316","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddAttendance.js":"317","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AttendanceBag.js":"318","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\Records.js":"319","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddRecord.js":"320","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\appStyles-jss.js":"321","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTests.js":"322","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercises.js":"323","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTest.js":"324","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignments.js":"325","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignment.js":"326","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercise.js":"327","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TestRecords.js":"328","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\AddGrade.js":"329","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\About.js":"330","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\ExcerciseRecords.js":"331","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\GradingBag.js":"332","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\EditRecord.js":"333","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\appStyles-jss.js":"334","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudentProfile.js":"335","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudents.js":"336","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\About.js":"337","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Attendance.js":"338","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Assignments.js":"339","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Excercises.js":"340","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\ProfileBag.js":"341","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Tests.js":"342","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\appStyles-jss.js":"343"},{"size":420,"mtime":1611141663906,"results":"344","hashOfConfig":"345"},{"size":403,"mtime":1609310314949,"results":"346","hashOfConfig":"345"},{"size":7845,"mtime":1611998643968,"results":"347","hashOfConfig":"345"},{"size":286,"mtime":1609310311636,"results":"348","hashOfConfig":"345"},{"size":290,"mtime":1609310312063,"results":"349","hashOfConfig":"345"},{"size":311,"mtime":1609310311673,"results":"350","hashOfConfig":"345"},{"size":7654,"mtime":1609342020753,"results":"351","hashOfConfig":"345"},{"size":3242,"mtime":1609310314743,"results":"352","hashOfConfig":"345"},{"size":1301,"mtime":1611650238815,"results":"353","hashOfConfig":"345"},{"size":4983,"mtime":1609310311635,"results":"354","hashOfConfig":"345"},{"size":1240,"mtime":1609310312063,"results":"355","hashOfConfig":"345"},{"size":3039,"mtime":1609310312037,"results":"356","hashOfConfig":"345"},{"size":4601,"mtime":1609310311674,"results":"357","hashOfConfig":"345"},{"size":1232,"mtime":1609310311993,"results":"358","hashOfConfig":"345"},{"size":3046,"mtime":1609310311992,"results":"359","hashOfConfig":"345"},{"size":592,"mtime":1609310314745,"results":"360","hashOfConfig":"345"},{"size":16209,"mtime":1609310315021,"results":"361","hashOfConfig":"345"},{"size":1257,"mtime":1609310308749,"results":"362","hashOfConfig":"345"},{"size":3162,"mtime":1609310314723,"results":"363","hashOfConfig":"345"},{"size":2344,"mtime":1609310314355,"results":"364","hashOfConfig":"345"},{"size":1600,"mtime":1609310314365,"results":"365","hashOfConfig":"345"},{"size":2758,"mtime":1609310314725,"results":"366","hashOfConfig":"345"},{"size":2108,"mtime":1609310314725,"results":"367","hashOfConfig":"345"},{"size":6051,"mtime":1609310314480,"results":"368","hashOfConfig":"345"},{"size":1034,"mtime":1609310314729,"results":"369","hashOfConfig":"345"},{"size":616,"mtime":1609310314336,"results":"370","hashOfConfig":"345"},{"size":7075,"mtime":1611742369408,"results":"371","hashOfConfig":"345"},{"size":14148,"mtime":1609310314341,"results":"372","hashOfConfig":"345"},{"size":14038,"mtime":1609341852178,"results":"373","hashOfConfig":"345"},{"size":216,"mtime":1611745981882,"results":"374","hashOfConfig":"345"},{"size":2964,"mtime":1611643451969,"results":"375","hashOfConfig":"345"},{"size":2409,"mtime":1609311868686,"results":"376","hashOfConfig":"345"},{"size":422,"mtime":1609310314869,"results":"377","hashOfConfig":"345"},{"size":2203,"mtime":1611816539592,"results":"378","hashOfConfig":"345"},{"size":1107,"mtime":1609310314856,"results":"379","hashOfConfig":"345"},{"size":1252,"mtime":1611988938868,"results":"380","hashOfConfig":"345"},{"size":452,"mtime":1609310314866,"results":"381","hashOfConfig":"345"},{"size":1406,"mtime":1609310314868,"results":"382","hashOfConfig":"345"},{"size":2964,"mtime":1611644129367,"results":"383","hashOfConfig":"345"},{"size":11735,"mtime":1609310311640,"results":"384","hashOfConfig":"345"},{"size":2610,"mtime":1609310311643,"results":"385","hashOfConfig":"345"},{"size":157,"mtime":1609310308748,"results":"386","hashOfConfig":"345"},{"size":3563,"mtime":1609310309086,"results":"387","hashOfConfig":"345"},{"size":2058,"mtime":1609310310559,"results":"388","hashOfConfig":"345"},{"size":2529,"mtime":1609310310622,"results":"389","hashOfConfig":"345"},{"size":1682,"mtime":1609310311262,"results":"390","hashOfConfig":"345"},{"size":2362,"mtime":1609310311260,"results":"391","hashOfConfig":"345"},{"size":4611,"mtime":1609310311262,"results":"392","hashOfConfig":"345"},{"size":3468,"mtime":1609310311260,"results":"393","hashOfConfig":"345"},{"size":4245,"mtime":1611746351009,"results":"394","hashOfConfig":"345"},{"size":5162,"mtime":1609310311265,"results":"395","hashOfConfig":"345"},{"size":4007,"mtime":1609310311261,"results":"396","hashOfConfig":"345"},{"size":3942,"mtime":1609310311267,"results":"397","hashOfConfig":"345"},{"size":2877,"mtime":1609310311260,"results":"398","hashOfConfig":"345"},{"size":1639,"mtime":1609310311993,"results":"399","hashOfConfig":"345"},{"size":2386,"mtime":1611742283331,"results":"400","hashOfConfig":"345"},{"size":5367,"mtime":1609310312038,"results":"401","hashOfConfig":"345"},{"size":259,"mtime":1609310315051,"results":"402","hashOfConfig":"345"},{"size":16068,"mtime":1609310314733,"results":"403","hashOfConfig":"345"},{"size":5758,"mtime":1609310309751,"results":"404","hashOfConfig":"345"},{"size":4639,"mtime":1609310309752,"results":"405","hashOfConfig":"345"},{"size":4858,"mtime":1609310310518,"results":"406","hashOfConfig":"345"},{"size":2029,"mtime":1609310309742,"results":"407","hashOfConfig":"345"},{"size":1613,"mtime":1609310309973,"results":"408","hashOfConfig":"345"},{"size":1083,"mtime":1609310310468,"results":"409","hashOfConfig":"345"},{"size":1862,"mtime":1609310310469,"results":"410","hashOfConfig":"345"},{"size":2038,"mtime":1609310310537,"results":"411","hashOfConfig":"345"},{"size":6128,"mtime":1609310311968,"results":"412","hashOfConfig":"345"},{"size":1659,"mtime":1609310310540,"results":"413","hashOfConfig":"345"},{"size":1994,"mtime":1609310310520,"results":"414","hashOfConfig":"345"},{"size":1516,"mtime":1609310310521,"results":"415","hashOfConfig":"345"},{"size":517,"mtime":1611816242363,"results":"416","hashOfConfig":"345"},{"size":132,"mtime":1609310316180,"results":"417","hashOfConfig":"345"},{"size":678,"mtime":1609310316156,"results":"418","hashOfConfig":"345"},{"size":166,"mtime":1609310315630,"results":"419","hashOfConfig":"345"},{"size":10457,"mtime":1611654430291,"results":"420","hashOfConfig":"345"},{"size":1772,"mtime":1609310311659,"results":"421","hashOfConfig":"345"},{"size":4161,"mtime":1609310309756,"results":"422","hashOfConfig":"345"},{"size":1456,"mtime":1609310309073,"results":"423","hashOfConfig":"345"},{"size":1516,"mtime":1609310311268,"results":"424","hashOfConfig":"345"},{"size":2114,"mtime":1609310309098,"results":"425","hashOfConfig":"345"},{"size":22090,"mtime":1609310311288,"results":"426","hashOfConfig":"345"},{"size":5618,"mtime":1609310315050,"results":"427","hashOfConfig":"345"},{"size":5620,"mtime":1609310315050,"results":"428","hashOfConfig":"345"},{"size":558,"mtime":1609310309087,"results":"429","hashOfConfig":"345"},{"size":1866,"mtime":1609310310556,"results":"430","hashOfConfig":"345"},{"size":4177,"mtime":1609310310616,"results":"431","hashOfConfig":"345"},{"size":1851,"mtime":1609310309756,"results":"432","hashOfConfig":"345"},{"size":5584,"mtime":1609310315050,"results":"433","hashOfConfig":"345"},{"size":2713,"mtime":1609310309745,"results":"434","hashOfConfig":"345"},{"size":5107,"mtime":1609310310542,"results":"435","hashOfConfig":"345"},{"size":427,"mtime":1609310308872,"results":"436","hashOfConfig":"345"},{"size":787,"mtime":1609310311657,"results":"437","hashOfConfig":"345"},{"size":7210,"mtime":1609310311652,"results":"438","hashOfConfig":"345"},{"size":2554,"mtime":1609310311651,"results":"439","hashOfConfig":"345"},{"size":8673,"mtime":1609310310626,"results":"440","hashOfConfig":"345"},{"size":752,"mtime":1609310309098,"results":"441","hashOfConfig":"345"},{"size":4469,"mtime":1609310309097,"results":"442","hashOfConfig":"345"},{"size":2261,"mtime":1609310311264,"results":"443","hashOfConfig":"345"},{"size":270,"mtime":1609310309092,"results":"444","hashOfConfig":"345"},{"size":1936,"mtime":1609310310618,"results":"445","hashOfConfig":"345"},{"size":9240,"mtime":1609310309764,"results":"446","hashOfConfig":"345"},{"size":3516,"mtime":1609310314750,"results":"447","hashOfConfig":"345"},{"size":5367,"mtime":1609310314753,"results":"448","hashOfConfig":"345"},{"size":3359,"mtime":1609310314748,"results":"449","hashOfConfig":"345"},{"size":3518,"mtime":1611742014990,"results":"450","hashOfConfig":"345"},{"size":3412,"mtime":1609310314752,"results":"451","hashOfConfig":"345"},{"size":3552,"mtime":1609310314752,"results":"452","hashOfConfig":"345"},{"size":2176,"mtime":1609310311931,"results":"453","hashOfConfig":"345"},{"size":6801,"mtime":1609310308780,"results":"454","hashOfConfig":"345"},{"size":2339,"mtime":1609310314223,"results":"455","hashOfConfig":"345"},{"size":9947,"mtime":1609310309749,"results":"456","hashOfConfig":"345"},{"size":4267,"mtime":1609310309578,"results":"457","hashOfConfig":"345"},{"size":1241,"mtime":1609310309752,"results":"458","hashOfConfig":"345"},{"size":3226,"mtime":1611742183454,"results":"459","hashOfConfig":"345"},{"size":3806,"mtime":1609310314753,"results":"460","hashOfConfig":"345"},{"size":957,"mtime":1611742107879,"results":"461","hashOfConfig":"345"},{"size":6556,"mtime":1611742073268,"results":"462","hashOfConfig":"345"},{"size":7699,"mtime":1609310309733,"results":"463","hashOfConfig":"345"},{"size":774,"mtime":1609310308785,"results":"464","hashOfConfig":"345"},{"size":3874,"mtime":1609310309763,"results":"465","hashOfConfig":"345"},{"size":976,"mtime":1609310309572,"results":"466","hashOfConfig":"345"},{"size":1134,"mtime":1609310308787,"results":"467","hashOfConfig":"345"},{"size":3091,"mtime":1609310310621,"results":"468","hashOfConfig":"345"},{"size":1683,"mtime":1609310314326,"results":"469","hashOfConfig":"345"},{"size":7223,"mtime":1609310311649,"results":"470","hashOfConfig":"345"},{"size":9240,"mtime":1609310314754,"results":"471","hashOfConfig":"345"},{"size":1671,"mtime":1609310308778,"results":"472","hashOfConfig":"345"},{"size":5187,"mtime":1611749058940,"results":"473","hashOfConfig":"345"},{"size":6282,"mtime":1609310309739,"results":"474","hashOfConfig":"345"},{"size":623,"mtime":1609310309096,"results":"475","hashOfConfig":"345"},{"size":11881,"mtime":1609310309741,"results":"476","hashOfConfig":"345"},{"size":6320,"mtime":1609310309735,"results":"477","hashOfConfig":"345"},{"size":5261,"mtime":1609310309762,"results":"478","hashOfConfig":"345"},{"size":5757,"mtime":1609310309720,"results":"479","hashOfConfig":"345"},{"size":4312,"mtime":1611742326734,"results":"480","hashOfConfig":"345"},{"size":1995,"mtime":1609310314759,"results":"481","hashOfConfig":"345"},{"size":6306,"mtime":1609310314329,"results":"482","hashOfConfig":"345"},{"size":6305,"mtime":1609310314224,"results":"483","hashOfConfig":"345"},{"size":4817,"mtime":1609310309760,"results":"484","hashOfConfig":"345"},{"size":3085,"mtime":1609310309759,"results":"485","hashOfConfig":"345"},{"size":19766,"mtime":1609310309093,"results":"486","hashOfConfig":"345"},{"size":696,"mtime":1609310314757,"results":"487","hashOfConfig":"345"},{"size":3302,"mtime":1609310314224,"results":"488","hashOfConfig":"345"},{"size":2980,"mtime":1609310314756,"results":"489","hashOfConfig":"345"},{"size":1049,"mtime":1609310314756,"results":"490","hashOfConfig":"345"},{"size":1042,"mtime":1609310314756,"results":"491","hashOfConfig":"345"},{"size":1069,"mtime":1609310314755,"results":"492","hashOfConfig":"345"},{"size":212,"mtime":1609310314757,"results":"493","hashOfConfig":"345"},{"size":630,"mtime":1611642869250,"results":"494","hashOfConfig":"345"},{"size":486,"mtime":1609310315802,"results":"495","hashOfConfig":"345"},{"size":2363,"mtime":1611818241143,"results":"496","hashOfConfig":"345"},{"size":7867,"mtime":1611318332452,"results":"497","hashOfConfig":"345"},{"size":3666,"mtime":1611650244981,"results":"498","hashOfConfig":"345"},{"size":774,"mtime":1609310316100,"results":"499","hashOfConfig":"345"},{"size":5152,"mtime":1611122093295,"results":"500","hashOfConfig":"345"},{"size":587,"mtime":1611316110435,"results":"501","hashOfConfig":"345"},{"size":5352,"mtime":1611122414954,"results":"502","hashOfConfig":"345"},{"size":34256,"mtime":1611131921584,"results":"503","hashOfConfig":"345"},{"size":440,"mtime":1609310310768,"results":"504","hashOfConfig":"345"},{"size":917,"mtime":1609310310777,"results":"505","hashOfConfig":"345"},{"size":800,"mtime":1609310310775,"results":"506","hashOfConfig":"345"},{"size":753,"mtime":1609310310734,"results":"507","hashOfConfig":"345"},{"size":814,"mtime":1611299842937,"results":"508","hashOfConfig":"345"},{"size":873,"mtime":1609310310730,"results":"509","hashOfConfig":"345"},{"size":737,"mtime":1609310310731,"results":"510","hashOfConfig":"345"},{"size":924,"mtime":1609310310767,"results":"511","hashOfConfig":"345"},{"size":15158,"mtime":1611836660740,"results":"512","hashOfConfig":"345"},{"size":4466,"mtime":1611124826284,"results":"513","hashOfConfig":"345"},{"size":3927,"mtime":1611142327878,"results":"514","hashOfConfig":"345"},{"size":1369,"mtime":1609310310772,"results":"515","hashOfConfig":"345"},{"size":1226,"mtime":1611660900567,"results":"516","hashOfConfig":"345"},{"size":5099,"mtime":1611124299996,"results":"517","hashOfConfig":"345"},{"size":2627,"mtime":1611124385913,"results":"518","hashOfConfig":"345"},{"size":3421,"mtime":1611125402200,"results":"519","hashOfConfig":"345"},{"size":5190,"mtime":1611125185815,"results":"520","hashOfConfig":"345"},{"size":3442,"mtime":1611124822743,"results":"521","hashOfConfig":"345"},{"size":1275,"mtime":1609310314800,"results":"522","hashOfConfig":"345"},{"size":223,"mtime":1609310315470,"results":"523","hashOfConfig":"345"},{"size":5374,"mtime":1611142191698,"results":"524","hashOfConfig":"345"},{"size":1746,"mtime":1611132157806,"results":"525","hashOfConfig":"345"},{"size":6261,"mtime":1611139709399,"results":"526","hashOfConfig":"345"},{"size":1492,"mtime":1611138793425,"results":"527","hashOfConfig":"345"},{"size":325,"mtime":1611138706658,"results":"528","hashOfConfig":"345"},{"size":5520,"mtime":1611142412606,"results":"529","hashOfConfig":"345"},{"size":1949,"mtime":1611139178090,"results":"530","hashOfConfig":"345"},{"size":1064,"mtime":1609310314868,"results":"531","hashOfConfig":"345"},{"size":151,"mtime":1609310316156,"results":"532","hashOfConfig":"345"},{"size":5019,"mtime":1611143916277,"results":"533","hashOfConfig":"345"},{"size":3046,"mtime":1611144125501,"results":"534","hashOfConfig":"345"},{"size":1330,"mtime":1611142932290,"results":"535","hashOfConfig":"345"},{"size":1164,"mtime":1609310314809,"results":"536","hashOfConfig":"345"},{"size":192,"mtime":1609310315801,"results":"537","hashOfConfig":"345"},{"size":5041,"mtime":1611144927679,"results":"538","hashOfConfig":"345"},{"size":3057,"mtime":1611144794344,"results":"539","hashOfConfig":"345"},{"size":1440,"mtime":1611145044722,"results":"540","hashOfConfig":"345"},{"size":1318,"mtime":1609310314874,"results":"541","hashOfConfig":"345"},{"size":235,"mtime":1609310316180,"results":"542","hashOfConfig":"345"},{"size":4940,"mtime":1611145727537,"results":"543","hashOfConfig":"345"},{"size":2618,"mtime":1611145357118,"results":"544","hashOfConfig":"345"},{"size":1769,"mtime":1611145987205,"results":"545","hashOfConfig":"345"},{"size":1271,"mtime":1609310314858,"results":"546","hashOfConfig":"345"},{"size":214,"mtime":1609310316137,"results":"547","hashOfConfig":"345"},{"size":4893,"mtime":1611146593783,"results":"548","hashOfConfig":"345"},{"size":2614,"mtime":1611146268021,"results":"549","hashOfConfig":"345"},{"size":1719,"mtime":1611146076161,"results":"550","hashOfConfig":"345"},{"size":1295,"mtime":1611150525015,"results":"551","hashOfConfig":"345"},{"size":224,"mtime":1611150402948,"results":"552","hashOfConfig":"345"},{"size":5131,"mtime":1611322294969,"results":"553","hashOfConfig":"345"},{"size":3069,"mtime":1611150047389,"results":"554","hashOfConfig":"345"},{"size":1745,"mtime":1611150362271,"results":"555","hashOfConfig":"345"},{"size":4510,"mtime":1611640286265,"results":"556","hashOfConfig":"345"},{"size":1247,"mtime":1609310314803,"results":"557","hashOfConfig":"345"},{"size":205,"mtime":1609310315627,"results":"558","hashOfConfig":"345"},{"size":1260,"mtime":1611640026230,"results":"559","hashOfConfig":"345"},{"size":5238,"mtime":1611301927069,"results":"560","hashOfConfig":"345"},{"size":1656,"mtime":1609310308572,"results":"561","hashOfConfig":"345"},{"size":8337,"mtime":1611567144189,"results":"562","hashOfConfig":"345"},{"size":7510,"mtime":1611639840771,"results":"563","hashOfConfig":"345"},{"size":1805,"mtime":1611314957647,"results":"564","hashOfConfig":"345"},{"size":519,"mtime":1611836655269,"results":"565","hashOfConfig":"345"},{"size":923,"mtime":1611313374938,"results":"566","hashOfConfig":"345"},{"size":919,"mtime":1611574486346,"results":"567","hashOfConfig":"345"},{"size":5205,"mtime":1611316643141,"results":"568","hashOfConfig":"345"},{"size":5599,"mtime":1611574255969,"results":"569","hashOfConfig":"345"},{"size":2471,"mtime":1611836657581,"results":"570","hashOfConfig":"345"},{"size":4892,"mtime":1611318001584,"results":"571","hashOfConfig":"345"},{"size":2481,"mtime":1611317729858,"results":"572","hashOfConfig":"345"},{"size":5106,"mtime":1611568138785,"results":"573","hashOfConfig":"345"},{"size":3313,"mtime":1611569307442,"results":"574","hashOfConfig":"345"},{"size":5126,"mtime":1611569174190,"results":"575","hashOfConfig":"345"},{"size":5144,"mtime":1611569177675,"results":"576","hashOfConfig":"345"},{"size":5397,"mtime":1611820045647,"results":"577","hashOfConfig":"345"},{"size":5113,"mtime":1611570922857,"results":"578","hashOfConfig":"345"},{"size":5645,"mtime":1611826388060,"results":"579","hashOfConfig":"345"},{"size":3627,"mtime":1611640419548,"results":"580","hashOfConfig":"345"},{"size":5129,"mtime":1611820395552,"results":"581","hashOfConfig":"345"},{"size":5327,"mtime":1611642377009,"results":"582","hashOfConfig":"345"},{"size":3987,"mtime":1611641585172,"results":"583","hashOfConfig":"345"},{"size":3593,"mtime":1611641200896,"results":"584","hashOfConfig":"345"},{"size":5347,"mtime":1611643142828,"results":"585","hashOfConfig":"345"},{"size":5339,"mtime":1611643274436,"results":"586","hashOfConfig":"345"},{"size":5337,"mtime":1611643442780,"results":"587","hashOfConfig":"345"},{"size":5268,"mtime":1611834505242,"results":"588","hashOfConfig":"345"},{"size":1380,"mtime":1611822823666,"results":"589","hashOfConfig":"345"},{"size":5519,"mtime":1611829333427,"results":"590","hashOfConfig":"345"},{"size":5751,"mtime":1611652615570,"results":"591","hashOfConfig":"345"},{"size":7236,"mtime":1611834550123,"results":"592","hashOfConfig":"345"},{"size":5651,"mtime":1611835198812,"results":"593","hashOfConfig":"345"},{"size":5650,"mtime":1611833823539,"results":"594","hashOfConfig":"345"},{"size":4489,"mtime":1612000802126,"results":"595","hashOfConfig":"345"},{"size":3773,"mtime":1612000718489,"results":"596","hashOfConfig":"345"},{"size":3810,"mtime":1611820040728,"results":"597","hashOfConfig":"345"},{"size":3603,"mtime":1611751329685,"results":"598","hashOfConfig":"345"},{"size":3801,"mtime":1611752589268,"results":"599","hashOfConfig":"345"},{"size":2340,"mtime":1611734076459,"results":"600","hashOfConfig":"345"},{"size":3786,"mtime":1611752252965,"results":"601","hashOfConfig":"345"},{"size":5367,"mtime":1611733952074,"results":"602","hashOfConfig":"345"},{"size":3777,"mtime":1611827774191,"results":"603","hashOfConfig":"345"},{"size":402,"mtime":1611826356299,"results":"604","hashOfConfig":"345"},{"size":2349,"mtime":1611816764280,"results":"605","hashOfConfig":"345"},{"size":5251,"mtime":1611826426156,"results":"606","hashOfConfig":"345"},{"size":5367,"mtime":1611816695583,"results":"607","hashOfConfig":"345"},{"size":3053,"mtime":1611820326231,"results":"608","hashOfConfig":"345"},{"size":4946,"mtime":1611831767369,"results":"609","hashOfConfig":"345"},{"size":401,"mtime":1611830857302,"results":"610","hashOfConfig":"345"},{"size":2340,"mtime":1611825092418,"results":"611","hashOfConfig":"345"},{"size":5367,"mtime":1611825036173,"results":"612","hashOfConfig":"345"},{"size":3751,"mtime":1611831082367,"results":"613","hashOfConfig":"345"},{"size":4929,"mtime":1611832623832,"results":"614","hashOfConfig":"345"},{"size":2609,"mtime":1611831230105,"results":"615","hashOfConfig":"345"},{"size":3866,"mtime":1611832697098,"results":"616","hashOfConfig":"345"},{"size":3864,"mtime":1611835506873,"results":"617","hashOfConfig":"345"},{"size":155,"mtime":1611927421280,"results":"618","hashOfConfig":"345"},{"size":155,"mtime":1611927435074,"results":"619","hashOfConfig":"345"},{"size":153,"mtime":1611927403586,"results":"620","hashOfConfig":"345"},{"size":2667,"mtime":1611989887120,"results":"621","hashOfConfig":"345"},{"size":1984,"mtime":1611989628706,"results":"622","hashOfConfig":"345"},{"size":3144,"mtime":1611993665590,"results":"623","hashOfConfig":"345"},{"size":3162,"mtime":1609310314723,"results":"624","hashOfConfig":"345"},{"size":592,"mtime":1609310314745,"results":"625","hashOfConfig":"345"},{"size":6051,"mtime":1609310314480,"results":"626","hashOfConfig":"345"},{"size":1600,"mtime":1609310314365,"results":"627","hashOfConfig":"345"},{"size":2344,"mtime":1609310314355,"results":"628","hashOfConfig":"345"},{"size":2758,"mtime":1609310314725,"results":"629","hashOfConfig":"345"},{"size":1034,"mtime":1609310314729,"results":"630","hashOfConfig":"345"},{"size":616,"mtime":1609310314336,"results":"631","hashOfConfig":"345"},{"size":6340,"mtime":1611993852584,"results":"632","hashOfConfig":"345"},{"size":2108,"mtime":1609310314725,"results":"633","hashOfConfig":"345"},{"size":14148,"mtime":1609310314341,"results":"634","hashOfConfig":"345"},{"size":16068,"mtime":1609310314733,"results":"635","hashOfConfig":"345"},{"size":5367,"mtime":1609310314753,"results":"636","hashOfConfig":"345"},{"size":3412,"mtime":1609310314752,"results":"637","hashOfConfig":"345"},{"size":3516,"mtime":1609310314750,"results":"638","hashOfConfig":"345"},{"size":3389,"mtime":1611993889156,"results":"639","hashOfConfig":"345"},{"size":3552,"mtime":1609310314752,"results":"640","hashOfConfig":"345"},{"size":3359,"mtime":1609310314748,"results":"641","hashOfConfig":"345"},{"size":2339,"mtime":1609310314223,"results":"642","hashOfConfig":"345"},{"size":3806,"mtime":1609310314753,"results":"643","hashOfConfig":"345"},{"size":3289,"mtime":1611998763626,"results":"644","hashOfConfig":"345"},{"size":1683,"mtime":1609310314326,"results":"645","hashOfConfig":"345"},{"size":5187,"mtime":1611749058940,"results":"646","hashOfConfig":"345"},{"size":9240,"mtime":1609310314754,"results":"647","hashOfConfig":"345"},{"size":6306,"mtime":1609310314329,"results":"648","hashOfConfig":"345"},{"size":6305,"mtime":1609310314224,"results":"649","hashOfConfig":"345"},{"size":1995,"mtime":1609310314759,"results":"650","hashOfConfig":"345"},{"size":3302,"mtime":1609310314224,"results":"651","hashOfConfig":"345"},{"size":1042,"mtime":1609310314756,"results":"652","hashOfConfig":"345"},{"size":1049,"mtime":1609310314756,"results":"653","hashOfConfig":"345"},{"size":2980,"mtime":1609310314756,"results":"654","hashOfConfig":"345"},{"size":696,"mtime":1609310314757,"results":"655","hashOfConfig":"345"},{"size":212,"mtime":1609310314757,"results":"656","hashOfConfig":"345"},{"size":1069,"mtime":1609310314755,"results":"657","hashOfConfig":"345"},{"size":5566,"mtime":1611994512820,"results":"658","hashOfConfig":"345"},{"size":3783,"mtime":1611994548950,"results":"659","hashOfConfig":"345"},{"size":319,"mtime":1611994223596,"results":"660","hashOfConfig":"345"},{"size":3627,"mtime":1611640419548,"results":"661","hashOfConfig":"345"},{"size":2293,"mtime":1611994501151,"results":"662","hashOfConfig":"345"},{"size":5251,"mtime":1611826426156,"results":"663","hashOfConfig":"345"},{"size":3053,"mtime":1611820326231,"results":"664","hashOfConfig":"345"},{"size":5367,"mtime":1611816695583,"results":"665","hashOfConfig":"345"},{"size":5459,"mtime":1611997020677,"results":"666","hashOfConfig":"345"},{"size":5570,"mtime":1611995203955,"results":"667","hashOfConfig":"345"},{"size":3736,"mtime":1611996256209,"results":"668","hashOfConfig":"345"},{"size":5510,"mtime":1611996178172,"results":"669","hashOfConfig":"345"},{"size":3860,"mtime":1611996061302,"results":"670","hashOfConfig":"345"},{"size":3851,"mtime":1611995303104,"results":"671","hashOfConfig":"345"},{"size":4946,"mtime":1611831767369,"results":"672","hashOfConfig":"345"},{"size":5751,"mtime":1611652615570,"results":"673","hashOfConfig":"345"},{"size":401,"mtime":1611830857302,"results":"674","hashOfConfig":"345"},{"size":4929,"mtime":1611832623832,"results":"675","hashOfConfig":"345"},{"size":2284,"mtime":1611995016926,"results":"676","hashOfConfig":"345"},{"size":2609,"mtime":1611831230105,"results":"677","hashOfConfig":"345"},{"size":5367,"mtime":1611825036173,"results":"678","hashOfConfig":"345"},{"size":4510,"mtime":1611998205741,"results":"679","hashOfConfig":"345"},{"size":4168,"mtime":1611998647232,"results":"680","hashOfConfig":"345"},{"size":3759,"mtime":1612001439105,"results":"681","hashOfConfig":"345"},{"size":3603,"mtime":1611751329685,"results":"682","hashOfConfig":"345"},{"size":3810,"mtime":1611820040728,"results":"683","hashOfConfig":"345"},{"size":3801,"mtime":1611752589268,"results":"684","hashOfConfig":"345"},{"size":2284,"mtime":1611998099507,"results":"685","hashOfConfig":"345"},{"size":3786,"mtime":1611752252965,"results":"686","hashOfConfig":"345"},{"size":5367,"mtime":1611733952074,"results":"687","hashOfConfig":"345"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},"1f8c9lg",{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"690"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"690"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"690"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"690"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759","usedDeprecatedRules":"690"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"768","usedDeprecatedRules":"690"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"771","usedDeprecatedRules":"690"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"690"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"690"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"690"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"690"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820","usedDeprecatedRules":"690"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853","usedDeprecatedRules":"690"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"908","usedDeprecatedRules":"690"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913","usedDeprecatedRules":"690"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"690"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919","usedDeprecatedRules":"690"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"922","usedDeprecatedRules":"690"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931","usedDeprecatedRules":"690"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"938","usedDeprecatedRules":"690"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"690"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"690"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"947","usedDeprecatedRules":"690"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"690"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"971","usedDeprecatedRules":"690"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"690"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"989","usedDeprecatedRules":"690"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"690"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055","usedDeprecatedRules":"690"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1062","messages":"1063","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1064","usedDeprecatedRules":"690"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067","usedDeprecatedRules":"690"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1070","messages":"1071","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1072","usedDeprecatedRules":"690"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075","usedDeprecatedRules":"690"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"690"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1083","usedDeprecatedRules":"690"},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1088","usedDeprecatedRules":"690"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1095","usedDeprecatedRules":"690"},{"filePath":"1096","messages":"1097","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1100","usedDeprecatedRules":"690"},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105","usedDeprecatedRules":"690"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108","usedDeprecatedRules":"690"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113","usedDeprecatedRules":"690"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1118","usedDeprecatedRules":"690"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1121","usedDeprecatedRules":"690"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1126","usedDeprecatedRules":"690"},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1131","usedDeprecatedRules":"690"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1134","usedDeprecatedRules":"690"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1139","usedDeprecatedRules":"690"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1144","usedDeprecatedRules":"690"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1147","usedDeprecatedRules":"690"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1152","usedDeprecatedRules":"690"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157","usedDeprecatedRules":"690"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1160","usedDeprecatedRules":"690"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1167","usedDeprecatedRules":"690"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1174","usedDeprecatedRules":"690"},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"690"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1182","messages":"1183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"690"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1195","usedDeprecatedRules":"690"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198","usedDeprecatedRules":"690"},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1201","usedDeprecatedRules":"690"},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1204","usedDeprecatedRules":"690"},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1207","usedDeprecatedRules":"690"},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1210","usedDeprecatedRules":"690"},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1213","usedDeprecatedRules":"690"},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1216","usedDeprecatedRules":"690"},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1219","usedDeprecatedRules":"690"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222","usedDeprecatedRules":"690"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1225","usedDeprecatedRules":"690"},{"filePath":"1226","messages":"1227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1228","usedDeprecatedRules":"690"},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1233","usedDeprecatedRules":"690"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1238","usedDeprecatedRules":"690"},{"filePath":"1239","messages":"1240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1241","usedDeprecatedRules":"690"},{"filePath":"1242","messages":"1243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1244","usedDeprecatedRules":"690"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1247","usedDeprecatedRules":"690"},{"filePath":"1248","messages":"1249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1252","messages":"1253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1254","usedDeprecatedRules":"690"},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"690"},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1260","messages":"1261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1262","usedDeprecatedRules":"690"},{"filePath":"1263","messages":"1264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1265","usedDeprecatedRules":"690"},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272","usedDeprecatedRules":"690"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1275","usedDeprecatedRules":"690"},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1278","usedDeprecatedRules":"690"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283","usedDeprecatedRules":"690"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1288","messages":"1289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1290","messages":"1291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1292","messages":"1293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1294","usedDeprecatedRules":"690"},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299","usedDeprecatedRules":"690"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1302","usedDeprecatedRules":"690"},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1315","usedDeprecatedRules":"690"},{"filePath":"1316","messages":"1317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1318","messages":"1319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1320","messages":"1321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1322","messages":"1323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1324","messages":"1325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1326","messages":"1327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1328","messages":"1329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"1330","messages":"1331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1332","messages":"1333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1334","messages":"1335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1342","messages":"1343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1344","messages":"1345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1346","messages":"1347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1348","messages":"1349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1350","messages":"1351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1360","messages":"1361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1364","usedDeprecatedRules":"690"},{"filePath":"1365","messages":"1366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1367","messages":"1368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1369","messages":"1370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1371","messages":"1372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1373","messages":"1374","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1375","messages":"1376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1377","messages":"1378","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1379","messages":"1380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1381","messages":"1382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1383","messages":"1384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1385","messages":"1386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1387","messages":"1388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1389","messages":"1390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1391","messages":"1392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1393","messages":"1394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1395","messages":"1396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1397","messages":"1398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1399","messages":"1400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1401","messages":"1402","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1403","messages":"1404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1405","messages":"1406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1407","messages":"1408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1409","messages":"1410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1411","messages":"1412","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1413","messages":"1414","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1415","messages":"1416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1417","messages":"1418","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1419","messages":"1420","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1421","messages":"1422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1423","messages":"1424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1425","messages":"1426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1427","messages":"1428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1429","messages":"1430","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1431","messages":"1432","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1433","messages":"1434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1435","messages":"1436","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1437","messages":"1438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1439","messages":"1440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1441","messages":"1442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1443","messages":"1444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1445","messages":"1446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1447","messages":"1448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1449","messages":"1450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1451","messages":"1452","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1453","messages":"1454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1455","messages":"1456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1457","messages":"1458","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c:\\gosso\\gbc_oms\\frontend\\src\\index.js",[],["1461","1462"],"c:\\gosso\\gbc_oms\\frontend\\src\\store.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\App.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogPage.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\landing\\LandingPage.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Profile\\CompanyProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\ThemeWrapper.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\dashboard\\InformationTechnologyHome.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogHome.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\landing\\HomePage.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\ProfileBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Profile\\Profile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Corporate.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Blog.js",["1463"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { bindActionCreators } from 'redux';\r\nimport { toggleAction, playTransitionAction } from '../../actions/uiactions';\r\nimport Footer from '../../components/landing/Footer';\r\nimport Decoration from './Decoration';\r\nimport styles from './appStyles-jss';\r\nimport BlogBar from './BlogBar';\r\nimport Header from '../../components/landing/Header';\r\n\r\n\r\nclass Blog extends React.Component {\r\n  state = {\r\n    transform: 0,\r\n    openGuide: false\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // const { history } = this.props;\r\n    // Scroll content to top\r\n    window.addEventListener('scroll', this.handleScroll);\r\n    // Execute all arguments when page changes\r\n    // this.unlisten = history.listen(() => {\r\n    //   window.scrollTo(0, 0);\r\n    // });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    this.setState({\r\n      transform: scroll\r\n    });\r\n  }\r\n\r\n  handleOpenGuide = () => {\r\n    this.setState({ openGuide: true });\r\n  };\r\n\r\n  handleCloseGuide = () => {\r\n    this.setState({ openGuide: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      layout,\r\n\r\n    } = this.props;\r\n  \r\n    return (\r\n      <div className={classes.appFrameLanding} id=\"mainContent\">\r\n        <Header /> \r\n        <Decoration\r\n          mode={mode}\r\n          gradient={gradient}\r\n          decoration={deco}\r\n          bgPosition=\"header\"\r\n          horizontalMenu={layout === 'top-navigation' || layout === 'mega-menu'}\r\n        />\r\n\r\n        <div className={classes.blogWrap}>\r\n          {children}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBlog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  layout: PropTypes.string.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  sidebarOpen: state.ui.sidebarOpen,\r\n  pageLoaded: state.ui.pageLoaded,\r\n  mode: state.ui.type,\r\n  deco: state.ui.deco,\r\n  gradient: state.ui.gradient,\r\n  decoration: state.ui.decoration,\r\n  layout: state.ui.layout,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDrawer: () => dispatch(toggleAction),\r\n  loadTransition: bindActionCreators(playTransitionAction, dispatch),\r\n});\r\n\r\nconst BlogMapped = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Blog);\r\n\r\nexport default (withStyles(styles)(BlogMapped));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\dashboard\\dashboard-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\applicationTheme.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\uiactions.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\SliderWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\CounterIconsWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\DateWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\TaskWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\TimelineWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\PerformanceChartWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\WeatherWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\CalculatorWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\InformationTechnologyLayout.js",["1464"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport  GuideSlider  from '../../components/GuideSlider';\r\nimport { toggleAction, openAction, playTransitionAction } from '../../actions/uiactions';\r\nimport LeftSidebarLayout from './LeftSidebarLayout';\r\nimport RightSidebarLayout from './RightSidebarLayout';\r\nimport LeftSidebarBigLayout from './LeftSidebarBigLayout';\r\nimport DropMenuLayout from './DropMenuLayout';\r\nimport MegaMenuLayout from './MegaMenuLayout';\r\nimport styles from './appStyles-jss';\r\n\r\nclass InformationTechnologyLayout extends React.Component {\r\n  // Initial header style\r\n  state = {\r\n    openGuide: false,\r\n    appHeight: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const {  loadTransition } = this.props;\r\n\r\n    // Adjust min height\r\n    this.setState({ appHeight: window.innerHeight + 112 });\r\n\r\n    // Set expanded sidebar menu\r\n\r\n    // Play page transition\r\n    loadTransition(true);\r\n\r\n    // Execute all arguments when page changes\r\n\r\n  }\r\n\r\n  handleOpenGuide = () => {\r\n    this.setState({ openGuide: true });\r\n  };\r\n\r\n  handleCloseGuide = () => {\r\n    this.setState({ openGuide: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      history,\r\n      gradient,\r\n      deco,\r\n      bgPosition,\r\n      layout,\r\n      changeMode\r\n    } = this.props;\r\n    const { openGuide, appHeight } = this.state;\r\n    const titleException = ['/app', '/app/crm-dashboard', '/app/crypto-dashboard'];\r\n    // const parts = history.location.pathname.split('/');\r\n    // const place = parts[parts.length - 1].replace('-', ' ');\r\n    return (\r\n      <div\r\n        style={{ minHeight: appHeight }}\r\n        className={\r\n          classNames(\r\n            classes.appFrameInner,\r\n            layout === 'top-navigation' || layout === 'mega-menu' ? classes.topNav : classes.sideNav,\r\n            mode === 'dark' ? 'dark-mode' : 'light-mode'\r\n          )\r\n        }\r\n      >\r\n        <GuideSlider openGuide={openGuide} closeGuide={this.handleCloseGuide} />\r\n        { /* Left Sidebar Layout */\r\n          layout === 'left-sidebar' && (\r\n            <LeftSidebarLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </LeftSidebarLayout>\r\n          )\r\n        }\r\n        { /* Left Big-Sidebar Layout */\r\n          layout === 'big-sidebar' && (\r\n            <LeftSidebarBigLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              mode={mode}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </LeftSidebarBigLayout>\r\n          )\r\n        }\r\n        { /* Right Sidebar Layout */\r\n          layout === 'right-sidebar' && (\r\n            <RightSidebarLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </RightSidebarLayout>\r\n          )\r\n        }\r\n        { /* Top Bar with Dropdown Menu */\r\n          layout === 'top-navigation' && (\r\n            <DropMenuLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </DropMenuLayout>\r\n          )\r\n        }\r\n        { /* Top Bar with Mega Menu */\r\n          layout === 'mega-menu' && (\r\n            <MegaMenuLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </MegaMenuLayout>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInformationTechnologyLayout.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // children: PropTypes.node.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n  // initialOpen: PropTypes.func.isRequired,\r\n  // toggleDrawer: PropTypes.func.isRequired,\r\n  // loadTransition: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // sidebarOpen: PropTypes.bool.isRequired,\r\n  // pageLoaded: PropTypes.bool.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // deco: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // layout: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  sidebarOpen: state.ui.sidebarOpen,\r\n  pageLoaded: state.ui.pageLoaded,\r\n  mode: state.ui.mode,\r\n  gradient: state.ui.gradient,\r\n  deco: state.ui.deco,\r\n  layout: state.ui.layout,\r\n  bgPosition: state.ui.bgPosition,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDrawer: () => dispatch(toggleAction),\r\n  initialOpen: bindActionCreators(openAction, dispatch),\r\n  loadTransition: bindActionCreators(playTransitionAction, dispatch),\r\n});\r\n\r\nconst DashboardMaped = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InformationTechnologyLayout);\r\n\r\nexport default (withStyles(styles)(DashboardMaped));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\ContactWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\index.js",["1465","1466","1467","1468","1469"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Palette from '@material-ui/icons/Palette';\r\nimport Close from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport LeftSidebarThumb from './templatePreview/LeftSidebarThumb';\r\nimport LeftSidebarBigThumb from './templatePreview/LeftSidebarBigThumb';\r\nimport TopNavigationThumb  from './templatePreview/TopNavigationThumb';\r\nimport MegaMenuThumb from './templatePreview/MegaMenuThumb';\r\nimport ThemeThumb from './ThemeThumbs';\r\nimport LayoutThumb from './LayoutThumb';\r\nimport styles from './settings-jss';\r\n\r\nfunction TabContainer({ children }) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 1.5 }}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nclass TemplateSettings extends React.Component {\r\n  state = {\r\n    type: 0,\r\n    show: false,\r\n    showAllThemes: false\r\n  };\r\n\r\n  // Tab Handle\r\n  handleChangeTab = (event, type) => {\r\n    this.setState({ type });\r\n  };\r\n\r\n  handleChangeIndexTab = index => {\r\n    this.setState({ type: index });\r\n  };\r\n\r\n  // Theme Mode Handle\r\n  handleSwitchMode = name => event => {\r\n    const { changeMode } = this.props;\r\n    const mode = event.target.checked ? 'dark' : 'light';\r\n    changeMode(mode);\r\n    this.setState({ [name]: event.target.checked });\r\n  };\r\n\r\n  handeSwitchDirection = name => event => {\r\n    const { changeDirection } = this.props;\r\n    const dir = event.target.checked ? 'rtl' : 'ltr';\r\n    changeDirection(dir);\r\n    this.setState({ [name]: event.target.checked });\r\n  }\r\n\r\n  // Background Position Handle\r\n  handleBgChangePosition = event => {\r\n    const { changeBgPosition } = this.props;\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    changeBgPosition(event.target.value);\r\n  };\r\n\r\n  // Decoration Handle\r\n  handleChangeDecoration = name => event => {\r\n    const { changeDecoration } = this.props;\r\n    this.setState({ [name]: event.target.checked });\r\n    changeDecoration(event.target.checked);\r\n  };\r\n\r\n  // Decoration Handle\r\n  handleChangeGradient = name => event => {\r\n    const { changeGradient } = this.props;\r\n    this.setState({ [name]: event.target.checked });\r\n    changeGradient(event.target.checked);\r\n  };\r\n\r\n  // Layout Handle\r\n  handleChangeLayout = event => {\r\n    const { changeLayout } = this.props;\r\n    changeLayout(event.target.value);\r\n  };\r\n\r\n  // Show Hide Panel\r\n  handleTogglePanel = () => {\r\n    const { show } = this.state;\r\n    this.setState({ show: !show });\r\n  }\r\n\r\n  // Toggle All Themes\r\n  handleToggleAllThemes = () => {\r\n    const { showAllThemes } = this.state;\r\n    this.setState({ showAllThemes: !showAllThemes });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      palette,\r\n      mode,\r\n      gradient,\r\n      decoration,\r\n      bgPosition,\r\n      selectedValue,\r\n      layout,\r\n      direction,\r\n      changeTheme,\r\n      changeRandomTheme\r\n    } = this.props;\r\n    const { show, type, showAllThemes } = this.state;\r\n    const getItem = dataArray => dataArray.map((item, index) => (\r\n      <FormControlLabel\r\n        key={index.toString()}\r\n        className={\r\n          classNames(\r\n            classes.themeField,\r\n            index > 7 && !showAllThemes ? classes.hide : ''\r\n          )\r\n        }\r\n        control={(\r\n          <ThemeThumb\r\n            value={item.value}\r\n            selectedValue={selectedValue}\r\n            handleChange={changeTheme}\r\n            name={item.name}\r\n          />\r\n        )}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <aside\r\n        className={\r\n          classNames(\r\n            classes.settingSidebar,\r\n            layout === 'right-sidebar' ? classes.leftSidebar : classes.rightSidebar,\r\n            show && classes.expanded\r\n          )\r\n        }\r\n      >\r\n        <div className={classes.toggleButton}>\r\n          <Fab\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            aria-label=\"toggle\"\r\n            className={classes.button}\r\n            onClick={this.handleTogglePanel}\r\n            classes={{\r\n              root: classes.buttonDrawer,\r\n            }}\r\n          >\r\n            {show ? <Close /> : <Palette />}\r\n          </Fab>\r\n        </div>\r\n        <Slide direction={direction === 'rtl' ? 'right' : 'left'} in={show} mountOnEnter unmountOnExit>\r\n          <div className={classes.root}>\r\n            <AppBar position=\"fixed\" className={classes.tab} color=\"default\">\r\n              <div className={classes.header}>\r\n                <IconButton\r\n                  onClick={this.handleTogglePanel}\r\n                  className={classes.backButton}\r\n                  aria-label=\"Baack\"\r\n                >\r\n                  <ArrowBack />\r\n                </IconButton>\r\n                <Typography variant=\"button\">Template Settings</Typography>\r\n              </div>\r\n              <Tabs\r\n                value={type}\r\n                onChange={this.handleChangeTab}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"fullWidth\"\r\n              >\r\n                <Tab label=\"Theme\" />\r\n                <Tab label=\"Layout\" />\r\n              </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n              index={type}\r\n              onChangeIndex={this.handleChangeIndexTab}\r\n            >\r\n              <TabContainer>\r\n                <section className={classes.settingWraper}>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>invert_colors</Icon>\r\n                        Theme Mode\r\n                      </FormLabel>\r\n                      <FormGroup className={classes.themeMode}>\r\n                        <span>Light Mode</span>\r\n                        <FormControlLabel\r\n                          className={classes.switch}\r\n                          control={(\r\n                            <Switch\r\n                              checked={mode === 'dark'}\r\n                              onChange={this.handleSwitchMode('dark')}\r\n                              value=\"dark\"\r\n                              color=\"default\"\r\n                              classes={{\r\n                                track: classes.themeCheckBar,\r\n                                thumb: classes.themeCheck,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        <span>Dark Mode</span>\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>\r\n                          format_textdirection_r_to_l\r\n                        </Icon>\r\n                        Layout Direction\r\n                      </FormLabel>\r\n                      <FormGroup className={classes.themeMode}>\r\n                        <span>LTR</span>\r\n                        <FormControlLabel\r\n                          className={classes.switch}\r\n                          control={(\r\n                            <Switch\r\n                              checked={direction === 'rtl'}\r\n                              onChange={this.handeSwitchDirection('rtl')}\r\n                              value=\"rtl\"\r\n                              color=\"default\"\r\n                              classes={{\r\n                                track: classes.themeCheckBar,\r\n                                thumb: classes.themeCheck,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        <span>RTL</span>\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\" className={classes.themeGroup}>\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>color_lens</Icon>\r\n                        Theme Color\r\n                      </FormLabel>\r\n                      <div className={classes.randomThemeField}>\r\n                        <ButtonBase onClick={() => changeRandomTheme()}>\r\n                          <img src=\"/images/random.jpg\" alt=\"random\" />\r\n                        </ButtonBase>\r\n                      </div>\r\n                      { palette !== undefined && getItem(palette) }\r\n                      <div className={classes.center}>\r\n                        <Button color=\"primary\" onClick={this.handleToggleAllThemes}>\r\n                          {showAllThemes ? 'Hide Some' : 'Show All'}\r\n                        </Button>\r\n                      </div>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>branding_watermark</Icon>\r\n                        Background Size\r\n                      </FormLabel>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel htmlFor=\"background-position\">Choose Size</InputLabel>\r\n                        <Select\r\n                          value={bgPosition}\r\n                          onChange={this.handleBgChangePosition}\r\n                          inputProps={{\r\n                            name: 'position',\r\n                            id: 'background-position',\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"header\">Header</MenuItem>\r\n                          <MenuItem value=\"half\">Half</MenuItem>\r\n                          <MenuItem value=\"full\">Full</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>texture</Icon>\r\n                        Art Decoration\r\n                      </FormLabel>\r\n                      <FormGroup row>\r\n                        <FormControlLabel\r\n                          control={(\r\n                            <Checkbox\r\n                              checked={decoration}\r\n                              onChange={this.handleChangeDecoration('decorated')}\r\n                              value=\"decorated\"\r\n                            />\r\n                          )}\r\n                          label=\"Show Art Decoration\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup row>\r\n                        <FormControlLabel\r\n                          control={(\r\n                            <Checkbox\r\n                              checked={gradient}\r\n                              onChange={this.handleChangeGradient('gradient')}\r\n                              value=\"gradient\"\r\n                            />\r\n                          )}\r\n                          label=\"Use Gradient\"\r\n                        />\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Paper>\r\n                </section>\r\n                {/* END */}\r\n              </TabContainer>\r\n            </SwipeableViews>\r\n          </div>\r\n        </Slide>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nTemplateSettings.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  // palette: PropTypes.,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  decoration: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n  layout: PropTypes.string.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  changeTheme: PropTypes.func.isRequired,\r\n  changeRandomTheme: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  changeGradient: PropTypes.func.isRequired,\r\n  changeDecoration: PropTypes.func.isRequired,\r\n  changeBgPosition: PropTypes.func.isRequired,\r\n  changeLayout: PropTypes.func.isRequired,\r\n  changeDirection: PropTypes.func.isRequired,\r\n};\r\n\r\nTemplateSettings.defaultProps = {\r\n  palette: undefined\r\n};\r\n\r\nexport default withStyles(styles)(TemplateSettings);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\brand.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\admissions.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\curriculums.js",["1470"],"import {\r\n    ADD_CURRICULUM,\r\n    GET_CURRICULUMS,\r\n    DELETE_CURRICULUM,\r\n    GET_CURRICULUM,\r\n    EDIT_CURRICULUM,\r\n    ADD_SUBJECT,\r\n    GET_SUBJECTS,\r\n    DELETE_SUBJECT,\r\n    GET_SUBJECT,\r\n    EDIT_SUBJECT,\r\n} from '../types/curriculumTypes';\r\n\r\nconst initialState = {\r\n    subjects: [],\r\n    subject: [],\r\n    curriculums: [],\r\n    curriculum: [],\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SUBJECTS:\r\n            return {\r\n                ...state,\r\n                subjects: action.payload\r\n            };\r\n        case DELETE_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subject: state.subjects.filter(subject=> subject.id !== action.payload)\r\n            };\r\n        case ADD_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subject: [...state.subjects, action.payload]\r\n            }\r\n        case GET_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subject:action.payload\r\n                };\r\n        case EDIT_SUBJECT:\r\n            const subarrayList = state.subjects;\r\n            subarrayList.splice(subarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                subjects: subarrayList,\r\n            };\r\n        case GET_CURRICULUMS:\r\n            return {\r\n                ...state,\r\n                curriculums: action.payload\r\n            };\r\n        case DELETE_CURRICULUM:\r\n            return {\r\n                ...state,\r\n                curriculum: state.curriculums.filter(curriculum=> curriculum.id !== action.payload)\r\n            };\r\n        case ADD_CURRICULUM:\r\n            return {\r\n                ...state,\r\n                curriculum: [...state.curriculums, action.payload]\r\n            }\r\n        case GET_CURRICULUM:\r\n            return {\r\n                ...state,\r\n                curriculum:action.payload\r\n            };\r\n        case EDIT_CURRICULUM:\r\n            const cuarrayList = state.curriculums;\r\n            cuarrayList.splice(cuarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                curriculums: cuarrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\timelines.js",["1471"],"\r\nimport {\r\n    FETCH_TIMELINE_DATA\r\n    \r\n  } from '../types/uitypes';\r\n\r\nconst initialState = {\r\n    timelines: [],\r\n\r\n  };\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case FETCH_TIMELINE_DATA:\r\n            return {\r\n                ...state,\r\n                timelines: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n     \r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\adminattendances.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\itmenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\auth.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\studentattendances.js",["1472"],"import {\r\n    GET_STUDENT_ATTENDANCES ,\r\n\r\n\r\n} from '../types/attendanceTypes';\r\n\r\nconst initialState = {\r\n    studentattendances: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_STUDENT_ATTENDANCES:\r\n            return {\r\n                ...state,\r\n                studentattendances: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\teacherattendances.js",["1473"],"import {\r\n    ADD_ATTENDANCE,\r\n    GET_ATTENDANCES ,\r\n    DELETE_ATTENDANCE,\r\n    GET_ATTENDANCE,\r\n    EDIT_ATTENDANCE,\r\n\r\n\r\n} from '../types/attendanceTypes';\r\n\r\nconst initialState = {\r\n    teacherattendances: [],\r\n    teacherattendance: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ATTENDANCES:\r\n            return {\r\n                ...state,\r\n                teacherattendances: action.payload\r\n            };\r\n        case DELETE_ATTENDANCE:\r\n            return {\r\n                ...state,\r\n                teacherattendance: state.teacherattendances.filter(account=> account.id !== action.payload)\r\n            };\r\n        case ADD_ATTENDANCE:\r\n            return {\r\n                ...state,\r\n                teacherattendance: [...state.teacherattendances, action.payload]\r\n            }\r\n        case GET_ATTENDANCE:\r\n            return {\r\n                ...state,\r\n                teacherattendance:action.payload\r\n                };\r\n        case EDIT_ATTENDANCE:\r\n            const arrayList = state.teacherattendances;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                teacherattendances: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\ui.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\SidebarBlog.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Blog\\blogStyle-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\timeline.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\photos.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\HeadlineCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\ShowcaseCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Pricing.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Feature.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Showcase.js",["1474","1475","1476","1477","1478"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { Parallax, ParallaxProvider } from 'react-scroll-parallax';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShowcaseCard from '../cards/ShowcaseCard';\r\nimport Title from './Title';\r\nimport styles from './landingStyle-jss';\r\nimport petal3 from '../../images/decoration/petal3.svg';\r\nimport petal4 from '../../images/decoration/petal4.svg';\r\nimport thumb1 from '../../images/screen/thumb1.jpg';\r\nimport thumb3 from '../../images/screen/thumb3.jpg';\r\nimport thumb5 from '../../images/screen/thumb5.jpg';\r\nimport thumb2 from '../../images/screen/thumb2.jpg';\r\nimport thumb4 from '../../images/screen/thumb4.jpg';\r\n\r\nimport four from './four.jpg';\r\nimport six from './six.jpg';\r\nimport seven from './seven.jpg';\r\nimport eight from './eight.jpg';\r\nimport five from './five.png';\r\n\r\n\r\nfunction ParallaxDeco(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.parallaxWrap}>\r\n      <ParallaxProvider>\r\n        <div className={classes.bannerParallaxWrap}>\r\n          <Parallax\r\n            offsetYMax={70}\r\n            offsetYMin={-200}\r\n            slowerScrollRate\r\n            tag=\"figure\"\r\n          >\r\n            <svg\r\n              fill=\"#fff\"\r\n              className={\r\n                classNames(\r\n                  classes.parallaxVertical,\r\n                  classes.parallaxPetal1\r\n                )\r\n              }\r\n            >\r\n              <use xlinkHref={petal3} />\r\n            </svg>\r\n          </Parallax>\r\n          <Parallax\r\n            offsetYMax={100}\r\n            offsetYMin={-200}\r\n            slowerScrollRate\r\n            tag=\"figure\"\r\n          >\r\n            <svg\r\n              fill=\"#fff\"\r\n              className={\r\n                classNames(\r\n                  classes.parallaxVertical,\r\n                  classes.parallaxPetal2\r\n                )\r\n              }\r\n            >\r\n              <use xlinkHref={petal4} />\r\n            </svg>\r\n          </Parallax>\r\n        </div>\r\n      </ParallaxProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nParallaxDeco.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ParallaxDecoStyled = withStyles(styles)(ParallaxDeco);\r\n\r\nclass Showcase extends React.Component {\r\n  render() {\r\n    const { classes, slideMode, width } = this.props;\r\n    return (\r\n      <section className={classes.showcase}>\r\n        {!slideMode && <ParallaxDecoStyled />}\r\n        <div className={classes.container}>\r\n          <Grid container className={classes.root} spacing={5}>\r\n            <Grid item sm={6} md={4} xs={12}>\r\n              <Title \r\n                title=\"Our Services\" \r\n                align={width === 'lg' ? 'left' : 'center'} \r\n                monocolor={slideMode && true} \r\n              />\r\n              <ShowcaseCard\r\n                title=\"Information Technology\"\r\n                desc=\"We develop systems that connect all your systems\"\r\n                action=\"Try Us\"\r\n                image={four}\r\n              />\r\n              <ShowcaseCard\r\n                title=\"Industrial Systems\"\r\n                desc=\"We integrate all your Industrial Systems \"\r\n                action=\"Visit Us\"\r\n                image={five}\r\n              />\r\n            </Grid>\r\n            <Grid item sm={6} md={4} xs={12}>\r\n              <ShowcaseCard\r\n                title=\"Energy Renewal Systems\"\r\n                desc=\"We are the kings in Energy Systems\"\r\n                action=\"Get in touch\"\r\n                image={six}\r\n              />\r\n              <ShowcaseCard\r\n                title=\"IIoT & SCADA/HMI/DCS\"\r\n                desc=\"Industrial Internet of Thins Experts\"\r\n                action=\"LETS GO IIoT\"\r\n                image={eight}\r\n              />\r\n            </Grid>\r\n            <Grid item sm={6} md={4} xs={12}>\r\n              <div className={classes.lastShowcase}>\r\n                <ShowcaseCard\r\n                  title=\"Industrial Computing Systems\"\r\n                  desc=\"Making your job easier\"\r\n                  action=\"At your Service\"\r\n                  image={seven}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nShowcase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  slideMode: PropTypes.bool\r\n};\r\n\r\nShowcase.defaultProps = {\r\n  slideMode: false\r\n};\r\n\r\n\r\nexport default withWidth()(withStyles(styles)(Showcase));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Contact.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Banner.js",["1479","1480"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Parallax, ParallaxProvider } from 'react-scroll-parallax';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport link from '../../api/ui/link';\r\nimport styles from './landingStyle-jss';\r\nimport one from './one.jpg';\r\nimport two from './two.jpg';\r\nimport three from './three.jpg';\r\n\r\nfunction ParallaxDeco(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <ParallaxProvider>\r\n      <div className={classes.bannerParallaxWrap}>\r\n        <Parallax\r\n          offsetYMax={10}\r\n          offsetYMin={-60}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.lineBanner1)} />\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={15}\r\n          offsetYMin={-50}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.lineBanner2)} />\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={70}\r\n          offsetYMin={-1}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.petalBanner1)} />\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={60}\r\n          offsetYMin={-30}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.petalBanner2)} />\r\n        </Parallax>\r\n      </div>\r\n    </ParallaxProvider>\r\n  );\r\n}\r\n\r\nParallaxDeco.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ParallaxDecoStyled = withStyles(styles)(ParallaxDeco);\r\n\r\nclass Banner extends React.Component {\r\n  render() {\r\n    const { classes, gradient, slideMode } = this.props;\r\n    return (\r\n      <div\r\n        className={\r\n          classNames(\r\n            classes.banner,\r\n            gradient ? classes.gradient : classes.solid,\r\n            slideMode ? classes.out : classes.fit\r\n          )\r\n        }\r\n      >\r\n        {!slideMode && <ParallaxDecoStyled />}\r\n        <div className={!slideMode ? classes.container : ''}>\r\n          <Typography component=\"h2\" variant=\"h2\" gutterBottom>GERERE BUSINESS COLLEGE</Typography>\r\n          <Typography component=\"p\" variant=\"h5\" gutterBottom>WELCOME TO GERERE BUSINESS COLLEGE</Typography>\r\n          <div className={classes.btnArea}>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              className={classNames(classes.button, classes.btnLight)}\r\n            >\r\n              Visit Us\r\n            </Button>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              We Serve\r\n            </Button>\r\n          </div>\r\n          <div className={classes.previewApp}>\r\n            <Hidden smDown>\r\n              <div className={classNames(classes.m2, classes.screen, slideMode ? classes.bottom : '')}>\r\n                <img src={one} alt=\"crm dashboard\" />\r\n              </div>\r\n            </Hidden>\r\n            <div className={classNames(classes.m1, classes.screen)}>\r\n              <img src={two} alt=\"personal dashboard\" />\r\n            </div>\r\n            <Hidden smDown>\r\n              <div className={classNames(classes.m3, classes.screen, slideMode ? classes.bottom : '')}>\r\n                <img src={three} alt=\"crypto dashboard\" />\r\n              </div>\r\n            </Hidden>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBanner.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  slideMode: PropTypes.bool\r\n};\r\n\r\nBanner.defaultProps = {\r\n  slideMode: false\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  gradient: state.ui.gradient,\r\n});\r\n\r\nconst BannerMaped = connect(\r\n  mapStateToProps,\r\n)(Banner);\r\n\r\nexport default (withStyles(styles)(BannerMaped));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Technology.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Header.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Testimonials.js",["1481"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport { Parallax, ParallaxProvider } from 'react-scroll-parallax';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Slider from 'react-animated-slider';\r\nimport imgApi from '../../api/images/photos';\r\nimport './styles.css';\r\nimport Title from './Title';\r\nimport styles from './landingStyle-jss';\r\nimport lineside1 from '../../images/decoration/lineSide1.svg';\r\nimport lineside2 from '../../images/decoration/lineSide2.svg';\r\nimport nine from './nine.jpg';\r\nimport ten from './ten.jpg';\r\nimport leven from './leven.jpg';\r\n\r\nconst content = [\r\n  {\r\n    title: 'With Flexible Measurements you will never go wrong',\r\n    image: nine,\r\n    user: '',\r\n  },\r\n  {\r\n    title: 'They care, they listen and solve your roblem',\r\n    image: ten,\r\n    user: '',\r\n  },\r\n  {\r\n    title: 'Offering the best is what they do best',\r\n    image: leven,\r\n    user: '',\r\n  }\r\n];\r\n\r\nfunction ParallaxDeco(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.parallaxWrap}>\r\n      <ParallaxProvider>\r\n        <Parallax\r\n          offsetYMax={180}\r\n          offsetYMin={-200}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <svg\r\n            fill=\"#fff\"\r\n            className={\r\n              classNames(\r\n                classes.parallaxVertical,\r\n                classes.parallaxLineSide1\r\n              )\r\n            }\r\n          >\r\n            <use xlinkHref={lineside1} />\r\n          </svg>\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={100}\r\n          offsetYMin={-350}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <svg\r\n            fill=\"#fff\"\r\n            className={\r\n              classNames(\r\n                classes.parallaxVertical,\r\n                classes.parallaxLineSide2\r\n              )\r\n            }\r\n          >\r\n            <use xlinkHref={lineside2} />\r\n          </svg>\r\n        </Parallax>\r\n      </ParallaxProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nParallaxDeco.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ParallaxDecoStyled = withStyles(styles)(ParallaxDeco);\r\n\r\nclass Testimonials extends React.Component {\r\n  render() {\r\n    const { classes, slideMode } = this.props;\r\n    return (\r\n      <div className={classes.testimonials}>\r\n        {!slideMode && (<ParallaxDecoStyled />)}\r\n        <div className={!slideMode ? classes.container : classes.fullSliderContent}>\r\n          <Title title=\"What people said\" align=\"center\" monocolor={slideMode && true} />\r\n          <div className={classes.sliderWrap}>\r\n            <Slider className=\"slider-wrapper\">\r\n              {content.map((item, index) => (\r\n                <div\r\n                  key={index.toString()}\r\n                  className=\"slider-content\"\r\n                  style={{ background: `url('${item.image}') no-repeat center center` }}\r\n                >\r\n                  <IconButton aria-label=\"Play/pause\" className={classes.playIcon}>\r\n                    <PlayArrowIcon />\r\n                  </IconButton>\r\n                  <p className={classNames(classes.videoCaption, slideMode ? classes.mono : classes.color)}>\r\n                    <Typography variant=\"h6\" component=\"span\" gutterBottom>{item.title}</Typography>\r\n                    <Typography component=\"span\">{item.user}</Typography>\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTestimonials.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  slideMode: PropTypes.bool,\r\n};\r\n\r\nTestimonials.defaultProps = {\r\n  slideMode: false\r\n};\r\n\r\nexport default withStyles(styles)(Testimonials);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Footer.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\BlogBar.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\Decoration.js",["1482"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport decorationLight from '../../images/decoration_light.svg';\r\nimport decorationDark from '../../images/decoration_dark.svg';\r\nimport petalLight from '../../images/petal_bg.svg';\r\nimport styles from './appStyles-jss';\r\n\r\nclass Decoration extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      mode,\r\n      gradient,\r\n      decoration,\r\n      bgPosition,\r\n      horizontalMenu\r\n    } = this.props;\r\n    const getBgPosition = position => {\r\n      if (position === 'header') {\r\n        return classes.headerBg;\r\n      }\r\n      if (position === 'half') {\r\n        return classes.halfBg;\r\n      }\r\n      return classes.fullBg;\r\n    };\r\n    const renderDecor = (type, position) => {\r\n      const mergeDeco = type + '-' + position;\r\n      if (mergeDeco === 'dark-half') {\r\n        return (\r\n          <img src={decorationDark} alt=\"decoration\" className={classes.decorationWave} />\r\n        );\r\n      }\r\n      if (mergeDeco === 'dark-full') {\r\n        return (\r\n          <img src={petalLight} alt=\"decoration\" className={classes.decorationPetal} />\r\n        );\r\n      }\r\n      if (mergeDeco === 'light-half') {\r\n        return (\r\n          <img src={decorationLight} alt=\"decoration\" className={classes.decorationWave} />\r\n        );\r\n      }\r\n      if (mergeDeco === 'light-full') {\r\n        return (\r\n          <img src={petalLight} alt=\"decoration\" className={classes.decorationPetal} />\r\n        );\r\n      }\r\n      return false;\r\n    };\r\n    return (\r\n      <div className={classes.bgWrap}>\r\n        <div\r\n          className={classNames(\r\n            classes.bgbar,\r\n            horizontalMenu && classes.highTop,\r\n            gradient ? classes.gradientBg : classes.solidBg,\r\n            getBgPosition(bgPosition),\r\n          )}\r\n        >\r\n          { decoration && renderDecor(mode, bgPosition) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDecoration.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // decoration: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // horizontalMenu: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default (withStyles(styles)(Decoration));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\Templates\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\themePaletteMode.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Widget\\widget-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Albums.js",["1483"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport imgData from '../../api/images/imgData';\r\nimport styles from './profile-jss';\r\n\r\n// const LinkBtn = React.forwardRef(function LinkBtn(props, ref) { // eslint-disable-line\r\n//   return <NavLink to={props.to} {...props} innerRef={ref} />; // eslint-disable-line\r\n// });\r\n\r\nfunction Albums(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        spacing={3}\r\n      >\r\n        <Grid item md={6} sm={12} xs={12}>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n            \r\n          >\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index > 6) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number One\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n          >\r\n            <GridList cellHeight={160} className={classes.gridListAlbum} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index > 2 && index < 9) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number Three\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n        </Grid>\r\n        <Grid item md={6} sm={12} xs={12}>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n      \r\n             >\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index > 4 && index < 10) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number Two\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n          >\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index % 2) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number Four\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlbums.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Albums);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Favorites.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\settings-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\PapperBlock\\PapperBlock.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\SocialMedia\\jss\\cover-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\LayoutThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\ThemeThumbs.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\MegaMenuThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Timeline\\api\\timelineData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\TopNavigationThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarBigThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarThumb.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\attendanceTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\utility.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\uitypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\authTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\navigationConfig.js",["1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501"],"import React from 'react';\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n\r\n} from \"@material-ui/icons\";\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport ShutterSpeedIcon from '@material-ui/icons/ShutterSpeed';\r\nimport LocalCarWashIcon from '@material-ui/icons/LocalCarWash';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\n\r\nconst navigationConfig = [\r\n  {\r\n    id: \"Main\",\r\n    type: \"group\",\r\n    children: [\r\n      {\r\n        id: \"dashboard\",\r\n        title: \"Home\",\r\n        type: \"item\",\r\n        url: \"/itdashboard\",\r\n        exact: true,\r\n        icon: <HomeIcon />\r\n      },\r\n      {\r\n        id: \"dashes\",\r\n        title: \"DASHBOARDS\",\r\n        type: \"collapse\",\r\n        icon: <Brightness5Icon />,\r\n        badge: {\r\n          title: \"1\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"all stats\",\r\n            title: \"All Posts\",\r\n            type: \"item\",\r\n            url: \"/pages/posts\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"stats\",\r\n            title: \"Add Post\",\r\n            type: \"item\",\r\n            url: \"/pages/posts/add-post\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"configs\",\r\n        title: \"CONFIGURATIONS\",\r\n        type: \"collapse\",\r\n        icon: <Brightness5Icon />,\r\n        badge: {\r\n          title: \"1\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"all configs\",\r\n            title: \"All Posts\",\r\n            type: \"item\",\r\n            url: \"/pages/posts\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"add config\",\r\n            title: \"Add Post\",\r\n            type: \"item\",\r\n            url: \"/pages/posts/add-post\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"users\",\r\n        title: \"STAFF USERS\",\r\n        type: \"collapse\",\r\n        icon: <HowToRegIcon />,\r\n        badge: {\r\n          title: \"2\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"principals\",\r\n            title: \"ADMINSTRATORS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/principals\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"bursars\",\r\n            title: \"BURSARS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/bursars\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"teachers\",\r\n            title: \"TEACHERS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/teachers\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"classes\",\r\n        title: \"CLASSES\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"classes\",\r\n            title: \"CLASSES\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/classes\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"streams\",\r\n            title: \"LEVEL\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/streams\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"parents\",\r\n        title: \"PARENTS\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"parents\",\r\n            title: \"PARENTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/parents\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"students\",\r\n        title: \"STUDENTS\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"students\",\r\n            title: \"STUDENTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/students\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"accounting\",\r\n        title: \"ACCOUNTING\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"activeaccounts\",\r\n            title: \"ACTIVE ACCOUNTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/active-accounts\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"inactiveaccounts\",\r\n            title: \"INACTIVE ACCOUNTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/inactive-accounts\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"taxes\",\r\n            title: \"TAXES\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/taxes\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"currencies\",\r\n            title: \"CURRENCIES\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/currencies\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"assets\",\r\n            title: \"ASSETS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/assets\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"workbooks\",\r\n            title: \"WORKBOOKS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/workbooks\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"ledgers\",\r\n            title: \"LEDGERS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/ledgers\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"journals\",\r\n            title: \"JOURNALS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/journals\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"fees\",\r\n        title: \"FEES\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"fees\",\r\n            title: \"Fees\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/fees\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"curriculums\",\r\n        title: \"CURRICULUMS\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"curriculums\",\r\n            title: \"CURRICULUMS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/curriculums\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"subjects\",\r\n            title: \"SUBJECTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/subjects\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"attendance\",\r\n        title: \"ATTENDANCE\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"attendance\",\r\n            title: \"ATTENDANCE\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/attendance\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"grading\",\r\n        title: \"GRADING\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"tests\",\r\n            title: \"TESTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/tests\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"excercises\",\r\n            title: \"EXCERCISES\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/excercises\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"assignments\",\r\n            title: \"ASSIGNMENTS\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/assignments\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"admissions\",\r\n        title: \"ADMISSION\",\r\n        type: \"collapse\",\r\n        icon: <BusinessIcon />,\r\n        badge: {\r\n          title: \"3\",\r\n          bg: \"#525E8A\",\r\n          fg: \"#FFFFFF\",\r\n          \r\n        },\r\n        children: [\r\n          {\r\n            id: \"accepted\",\r\n            title: \"ACCEPTED\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/approved-admissions\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"pending\",\r\n            title: \"PENDING\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/pending-admissions\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"meeting\",\r\n            title: \"MEETING\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/meeting-admissions\",\r\n            exact: true,\r\n          },\r\n          {\r\n            id: \"rejected\",\r\n            title: \"REJECTED\",\r\n            type: \"item\",\r\n            url: \"/itdashboard/rejected-admissions\",\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      \r\n    ],\r\n  },\r\n];\r\n\r\nexport default navigationConfig;\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\profile-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\imgData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\Title.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\landingStyle-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\darkPalette.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\lightPalette.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\palette\\colorfull.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\GeneralCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\PostCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Quote\\Quote.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\theme\\themePalette.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\PapperBlock\\papperStyle-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\thumbPreview-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\images\\avatars.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\helpSupport-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Qna.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\ContactForm.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\cardStyle-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\ResultPanel.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Calculator\\ButtonPanel.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\landing\\SideNavMobile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\ui\\link.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\PricingCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\sidebar-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarBigLayout.js",["1502"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Header from '../../components/Header/Header';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport SidebarBig from '../SidebarBig';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass LeftSidebarBigLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide,\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"left-sidebar-big\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <SidebarBig\r\n          dataMenu={navigationConfig}\r\n          loadTransition={loadTransition}\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingLeftBig : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLeftSidebarBigLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  // place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LeftSidebarBigLayout);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\DropMenuLayout.js",["1503"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport HeaderMenu from '../../components/Header/HeaderMenu';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass DropMenuLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      bgPosition,\r\n      changeMode,\r\n      history,\r\n      titleException,\r\n      handleOpenGuide,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <HeaderMenu\r\n          type=\"top-navigation\"\r\n          dataMenu={navigationConfig}\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          openMobileNav={sidebarOpen}\r\n          loadTransition={loadTransition}\r\n          logoLink=\"/itdashboard\"\r\n        />\r\n        <main\r\n          className={\r\n            classNames(\r\n              classes.content,\r\n              classes.highMargin\r\n            )\r\n          }\r\n          id=\"mainContent\"\r\n        >\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.topbarLayout)}>\r\n              <div>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">viola</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDropMenuLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(DropMenuLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarLayout.js",["1504","1505","1506"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport Header from '../../components/Header/Header';\r\nimport Sidebar from './Sidebar';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass LeftSidebarLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"left-sidebar\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <Sidebar\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          loadTransition={loadTransition}\r\n          leftSidebar\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingLeft : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLeftSidebarLayout.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // children: PropTypes.node.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n  // toggleDrawer: PropTypes.func.isRequired,\r\n  // loadTransition: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // sidebarOpen: PropTypes.bool.isRequired,\r\n  // pageLoaded: PropTypes.bool.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // deco: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // place: PropTypes.string.isRequired,\r\n  // titleException: PropTypes.array.isRequired,\r\n  // handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(LeftSidebarLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\MegaMenuLayout.js",["1507"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport HeaderMenu from '../../components/Header/HeaderMenu';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass DropMenuLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <HeaderMenu\r\n          type=\"mega-menu\"\r\n          dataMenu={navigationConfig}\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          openMobileNav={sidebarOpen}\r\n          loadTransition={loadTransition}\r\n          logoLink=\"/itdashboard\"\r\n        />\r\n        <main\r\n          className={\r\n            classNames(\r\n              classes.content,\r\n              classes.highMargin\r\n            )\r\n          }\r\n          id=\"mainContent\"\r\n        >\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.topbarLayout)}>\r\n            \r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDropMenuLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(DropMenuLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\RightSidebarLayout.js",["1508"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport Header from '../../components/Header/Header';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass RightSidebarLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      history,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"right-sidebar\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingRight : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n            \r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n        <Sidebar\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          loadTransition={loadTransition}\r\n          dataMenu={navigationConfig}\r\n          leftSidebar={false}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nRightSidebarLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(RightSidebarLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Contact\\api\\contactData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\chart\\chartData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\Counter\\CounterWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\About.js",["1509"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport LocalPhone from '@material-ui/icons/LocalPhone';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Check from '@material-ui/icons/Check';\r\nimport AcUnit from '@material-ui/icons/AcUnit';\r\nimport Adb from '@material-ui/icons/Adb';\r\nimport AllInclusive from '@material-ui/icons/AllInclusive';\r\nimport AssistantPhoto from '@material-ui/icons/AssistantPhoto';\r\nimport imgData from '../../api/images/imgData';\r\nimport Company from '../../containers/HelpSupport/Company';\r\nimport PapperBlock from '../PapperBlock/PapperBlock';\r\nimport styles from './profile-jss';\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    const { classes, data } = this.props;\r\n    return (\r\n      <Grid\r\n        container\r\n        alignItems=\"flex-start\"\r\n        justify=\"flex-start\"\r\n        direction=\"row\"\r\n        spacing={3}\r\n      >\r\n        <Grid item md={7} xs={12}>\r\n          <div>\r\n            <Company />   \r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={5} xs={12}>\r\n          {/* Profile Progress */}\r\n          <div className={classes.progressRoot}>\r\n            <Paper className={classes.styledPaper} elevation={4}>\r\n              <Typography className={classes.title} variant=\"h5\" component=\"h3\">\r\n                <span >Profile Strength: </span>\r\n                <span >Intermediate</span>\r\n              </Typography>\r\n              <Grid container justify=\"center\">\r\n                <Chip\r\n                  avatar={(\r\n                    <Avatar>\r\n                      <Check />\r\n                    </Avatar>\r\n                  )}\r\n                  label=\"60% Progress\"\r\n                  className={classes.chip}\r\n                  color=\"primary\"\r\n                />\r\n              </Grid>\r\n              <LinearProgress variant=\"determinate\" className={classes.progress} value={60} />\r\n            </Paper>\r\n          </div>\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* About Me */}\r\n          <PapperBlock title=\"About Me\" icon=\"ios-contact-outline\" whiteBg noMargin desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sed urna in justo euismod condimentum.\">\r\n            <Divider className={classes.divider} />\r\n            <List dense className={classes.profileList}>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <DateRange />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Born\" secondary=\"Jan 9, 1994\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <LocalPhone />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Phone\" secondary=\"(+62)8765432190\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <LocationOn />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Address\" secondary=\"Chicendo Street no.105 Block A/5A - Barcelona, Spain\" />\r\n              </ListItem>\r\n            </List>\r\n          </PapperBlock>\r\n          <Divider className={classes.divider} />\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* My Albums */}\r\n          <PapperBlock title=\"My Albums (6)\" icon=\"ios-images-outline\" whiteBg desc=\"\">\r\n            <div className={classes.albumRoot}>\r\n              <GridList cellHeight={180} className={classes.gridList}>\r\n                {\r\n                  imgData.map((tile, index) => {\r\n                    if (index >= 4) {\r\n                      return false;\r\n                    }\r\n                    return (\r\n                      <GridListTile key={index.toString()}>\r\n                        <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                        <GridListTileBar\r\n                          title={tile.title}\r\n                          subtitle={(\r\n                            <span>\r\n                              by:&nbsp;\r\n                              {tile.author}\r\n                            </span>\r\n                          )}\r\n                          actionIcon={(\r\n                            <IconButton className={classes.icon}>\r\n                              <InfoIcon />\r\n                            </IconButton>\r\n                          )}\r\n                        />\r\n                      </GridListTile>\r\n                    );\r\n                  })\r\n                }\r\n              </GridList>\r\n            </div>\r\n            <Divider className={classes.divider} />\r\n            <Grid container justify=\"center\">\r\n              <Button color=\"secondary\" className={classes.button}>\r\n                See All\r\n              </Button>\r\n            </Grid>\r\n          </PapperBlock>\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* My Connection Me */}\r\n          <PapperBlock title=\"My Connection\" icon=\"ios-contacts-outline\" whiteBg desc=\"\">\r\n            <List dense className={classes.profileList}>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.orangeAvatar)}>H</Avatar>\r\n                <ListItemText primary=\"Harry Wells\" secondary=\"2 Mutual Connection\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.purpleAvatar)}>J</Avatar>\r\n                <ListItemText primary=\"John DOe\" secondary=\"8 Mutual Connection\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.pinkAvatar)}>V</Avatar>\r\n                <ListItemText primary=\"Victor Wanggai\" secondary=\"12 Mutual Connection\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.greenAvatar)}>H</Avatar>\r\n                <ListItemText primary=\"Baron Phoenix\" secondary=\"10 Mutual Connection\" />\r\n              </ListItem>\r\n            </List>\r\n            <Divider className={classes.divider} />\r\n            <Grid container justify=\"center\">\r\n              <Button color=\"secondary\" className={classes.button}>\r\n                See All\r\n              </Button>\r\n            </Grid>\r\n          </PapperBlock>\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* My Interests */}\r\n          <PapperBlock title=\"My Interests\" icon=\"ios-aperture-outline\" whiteBg desc=\"\">\r\n            <Grid container className={classes.colList}>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.purpleAvatar)}>\r\n                      <AcUnit />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"Snow\" secondary=\"100 Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.greenAvatar)}>\r\n                      <Adb />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"Android\" secondary=\"120 Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.pinkAvatar)}>\r\n                      <AllInclusive />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"All Inclusive\" secondary=\"999+ Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.orangeAvatar)}>\r\n                      <AssistantPhoto />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"My Country\" secondary=\"99+ Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n            </Grid>\r\n          </PapperBlock>\r\n          {/* ----------------------------------------------------------------------*/}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nAbout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  // data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(About);\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\GuideSlider\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Profile\\Connection.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\SocialMedia\\Cover.js",["1510"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\r\nimport Info from '@material-ui/icons/Info';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './jss/cover-jss';\r\n\r\nconst optionsOpt = [\r\n  'Edit Profile',\r\n  'Change Cover',\r\n  'Option 1',\r\n  'Option 2',\r\n  'Option 3',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nclass Cover extends React.Component {\r\n  state = {\r\n    anchorElOpt: null,\r\n  };\r\n\r\n  handleClickOpt = event => {\r\n    this.setState({ anchorElOpt: event.currentTarget });\r\n  };\r\n\r\n  handleCloseOpt = () => {\r\n    this.setState({ anchorElOpt: null });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      avatar,\r\n      name,\r\n      desc,\r\n      coverImg,\r\n    } = this.props;\r\n    const { anchorElOpt } = this.state;\r\n    return (\r\n      <div className={classes.cover} style={{ backgroundImage: `url(${coverImg})` }}>\r\n        <div className={classes.opt}>\r\n          <IconButton className={classes.button} aria-label=\"Delete\">\r\n            <Info />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-owns={anchorElOpt ? 'long-menu' : null}\r\n            aria-haspopup=\"true\"\r\n            className={classes.button}\r\n            onClick={this.handleClickOpt}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorElOpt}\r\n            open={Boolean(anchorElOpt)}\r\n            onClose={this.handleCloseOpt}\r\n            PaperProps={{\r\n              style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5,\r\n                width: 200,\r\n              },\r\n            }}\r\n          >\r\n            {optionsOpt.map(option => (\r\n              <MenuItem key={option} selected={option === 'Edit Profile'} onClick={this.handleCloseOpt}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Menu>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <Avatar alt={name} src={avatar} className={classes.avatar} />\r\n          <Typography variant=\"h4\" className={classes.name} gutterBottom>\r\n            {name}\r\n            <VerifiedUser className={classes.verified} />\r\n          </Typography>\r\n          <Typography className={classes.subheading} gutterBottom>\r\n            {desc}\r\n          </Typography>\r\n          <Button className={classes.button} size=\"large\" variant=\"contained\" color=\"secondary\">\r\n            Add to Connection\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCover.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // avatar: PropTypes.string.isRequired,\r\n  // name: PropTypes.string.isRequired,\r\n  // desc: PropTypes.string.isRequired,\r\n  // coverImg: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Cover);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\Sidebar.js",["1511"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport styles from './sidebar-jss';\r\nimport DumbalinyoloNavigation from '../navigations/DumbalinyoloNavigation';\r\n\r\nclass Sidebar extends React.Component {\r\n  state = {\r\n    status: dummy.user.status,\r\n    anchorEl: null,\r\n    turnDarker: false\r\n  };\r\n\r\n  // Initial header style\r\n  flagDarker = false;\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    const newFlagDarker = (scroll > 30);\r\n    if (this.flagDarker !== newFlagDarker) {\r\n      this.setState({ turnDarker: newFlagDarker });\r\n      this.flagDarker = newFlagDarker;\r\n    }\r\n  }\r\n\r\n  handleOpen = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleChangeStatus = status => {\r\n    this.setState({ status });\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      open,\r\n      toggleDrawerOpen,\r\n      loadTransition,\r\n      leftSidebar,\r\n      dataMenu\r\n    } = this.props;\r\n    const { status, anchorEl, turnDarker } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Hidden lgUp>\r\n          <SwipeableDrawer\r\n            onClose={toggleDrawerOpen}\r\n            onOpen={toggleDrawerOpen}\r\n            open={!open}\r\n            anchor={leftSidebar ? 'left' : 'right'}\r\n          >\r\n            <div className={classes.swipeDrawerPaper}>\r\n              <DumbalinyoloNavigation\r\n                drawerPaper\r\n                leftSidebar={leftSidebar}\r\n                toggleDrawerOpen={toggleDrawerOpen}\r\n                loadTransition={loadTransition}\r\n                status={status}\r\n                anchorEl={anchorEl}\r\n                openMenuStatus={this.handleOpen}\r\n                closeMenuStatus={this.handleClose}\r\n                changeStatus={this.handleChangeStatus}\r\n              />\r\n            </div>\r\n          </SwipeableDrawer>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            onClose={toggleDrawerOpen}\r\n            className={open ? classes.drawer : ''}\r\n            classes={{\r\n              paper: classNames(classes.drawer, classes.drawerPaper, !open ? classes.drawerPaperClose : ''),\r\n            }}\r\n            open={open}\r\n            anchor={leftSidebar ? 'left' : 'right'}\r\n          >\r\n            <DumbalinyoloNavigation\r\n              drawerPaper={open}\r\n              leftSidebar={leftSidebar}\r\n              turnDarker={turnDarker}\r\n              loadTransition={loadTransition}\r\n              status={status}\r\n              anchorEl={anchorEl}\r\n              openMenuStatus={this.handleOpen}\r\n              closeMenuStatus={this.handleClose}\r\n              changeStatus={this.handleChangeStatus}\r\n            />\r\n          </Drawer>\r\n        </Hidden>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  toggleDrawerOpen: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  leftSidebar: PropTypes.bool,\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  leftSidebar: true\r\n};\r\n\r\nexport default withStyles(styles)(Sidebar);\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\BreadCrumb.js",["1512","1513","1514"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport styles from './breadCrumb-jss';\r\n\r\nconst Breadcrumbs = (props) => {\r\n  const {\r\n    classes,\r\n    theme,\r\n  } = props;\r\n  return (\r\n    <section className={classNames(theme === 'dark' ? classes.dark : classes.light, classes.breadcrumbs)}>\r\n      <Route\r\n        path=\"*\"\r\n        render={() => {\r\n          \r\n          \r\n          return (\r\n            <p>\r\n              You are here:\r\n            </p>\r\n          );\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nBreadcrumbs.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // location: PropTypes.object.isRequired,\r\n  // theme: PropTypes.string.isRequired,\r\n  // separator: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Breadcrumbs);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\Header.js",["1515"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserMenu from './UserMenu';\r\nimport SearchUi from '../Search/SearchUi';\r\nimport styles from './header-jss';\r\n\r\nconst elem = document.documentElement;\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    open: false,\r\n    fullScreen: false,\r\n    turnDarker: false,\r\n    showTitle: false\r\n  };\r\n\r\n  // Initial header style\r\n  flagDarker = false;\r\n\r\n  flagTitle = false;\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    const newFlagDarker = (scroll > 30);\r\n    const newFlagTitle = (scroll > 40);\r\n    if (this.flagDarker !== newFlagDarker) {\r\n      this.setState({ turnDarker: newFlagDarker });\r\n      this.flagDarker = newFlagDarker;\r\n    }\r\n    if (this.flagTitle !== newFlagTitle) {\r\n      this.setState({ showTitle: newFlagTitle });\r\n      this.flagTitle = newFlagTitle;\r\n    }\r\n  }\r\n\r\n  openFullScreen = () => {\r\n    this.setState({ fullScreen: true });\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) { /* Firefox */\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) { /* IE/Edge */\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n\r\n  closeFullScreen = () => {\r\n    this.setState({ fullScreen: false });\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n  };\r\n\r\n  turnMode = mode => {\r\n    const { changeMode } = this.props;\r\n    \r\n    if (mode === 'light') {\r\n      changeMode('dark');\r\n    } else {\r\n      changeMode('light');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      toggleDrawerOpen,\r\n      margin,\r\n      position,\r\n      gradient,\r\n      mode,\r\n      title,\r\n      openGuide,\r\n      history\r\n    } = this.props;\r\n    const {\r\n      fullScreen,\r\n      open,\r\n      turnDarker,\r\n      showTitle\r\n    } = this.state;\r\n\r\n    const setMargin = (sidebarPosition) => {\r\n      if (sidebarPosition === 'right-sidebar') {\r\n        return classes.right;\r\n      }\r\n      if (sidebarPosition === 'left-sidebar-big') {\r\n        return classes.leftBig;\r\n      }\r\n      return classes.left;\r\n    };\r\n\r\n    return (\r\n      <AppBar\r\n        className={\r\n          classNames(\r\n            classes.appBar,\r\n            classes.floatingBar,\r\n            margin && classes.appBarShift,\r\n            setMargin(position),\r\n            turnDarker && classes.darker,\r\n            gradient ? classes.gradientBg : classes.solidBg\r\n          )\r\n        }\r\n      >\r\n        <Toolbar disableGutters={!open}>\r\n          <Fab\r\n            size=\"small\"\r\n            className={classes.menuButton}\r\n            aria-label=\"Menu\"\r\n            onClick={toggleDrawerOpen}\r\n          >\r\n            <MenuIcon />\r\n          </Fab>\r\n          <Hidden smDown>\r\n            <div className={classes.headerProperties}>\r\n              <div className={classNames(classes.headerAction, showTitle && classes.fadeOut)}>\r\n                {fullScreen ? (\r\n                  <Tooltip title=\"Exit Full Screen\" placement=\"bottom\">\r\n                    <IconButton className={classes.button} onClick={this.closeFullScreen}>\r\n                      <i className=\"ion-ios-crop\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                ) : (\r\n                  <Tooltip title=\"Full Screen\" placement=\"bottom\">\r\n                    <IconButton className={classes.button} onClick={this.openFullScreen}>\r\n                      <i className=\"ion-ios-crop\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                )}\r\n                <Tooltip title=\"Turn Dark/Light\" placement=\"bottom\">\r\n                  <IconButton className={classes.button} onClick={() => this.turnMode(mode)}>\r\n                    <i className=\"ion-ios-lightbulb-outline\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Show Guide\" placement=\"bottom\">\r\n                  <IconButton className={classes.button} onClick={openGuide}>\r\n                    <i className=\"ion-ios-help-outline\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </div>\r\n              <Typography component=\"h2\" className={classNames(classes.headerTitle, showTitle && classes.show)}>\r\n                {title}\r\n              </Typography>\r\n            </div>\r\n          </Hidden>\r\n          <div className={classes.searchWrapper}>\r\n            <div className={classNames(classes.wrapper, classes.light)}>\r\n              <div className={classes.search}>\r\n                <SearchIcon />\r\n              </div>\r\n              <SearchUi history={history} />\r\n            </div>\r\n          </div>\r\n          <Hidden xsDown>\r\n            <span className={classes.separatorV} />\r\n          </Hidden>\r\n          <UserMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // toggleDrawerOpen: PropTypes.func.isRequired,\r\n  // margin: PropTypes.bool.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // position: PropTypes.string.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // title: PropTypes.string.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // openGuide: PropTypes.func.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\HeaderMenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\dummyContents.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\GuideSlider\\guide-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\dummy\\guideData.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\cards\\ProfileCard.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Company.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\layout\\sidebar-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\apps\\connectionData.js",["1516"],"import imgApi from '../images/photos';\r\nimport avatarApi from '../images/avatars';\r\nimport one from '../images/one.png';\r\nconst connectionData = [\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[6],\r\n    name: 'John Doe',\r\n    title: 'UX Designer',\r\n    connection: 203,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[2],\r\n    name: 'Jane Doe',\r\n    title: 'Administrator',\r\n    connection: 10,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[7],\r\n    name: 'James Doe',\r\n    title: 'Marketing',\r\n    connection: 18,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[10],\r\n    name: 'Mickey Joe',\r\n    title: 'Teacher Lecture',\r\n    connection: 6,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[5],\r\n    name: 'Janet Doe',\r\n    title: 'UI Designer',\r\n    connection: 18,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[1],\r\n    name: 'Michele Joe',\r\n    title: 'Designer',\r\n    connection: 100,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[9],\r\n    name: 'James Doe',\r\n    title: 'Programmer',\r\n    connection: 20,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[8],\r\n    name: 'Jimmy Doe',\r\n    title: 'Interior Designer',\r\n    connection: 1,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[3],\r\n    name: 'Maya Joe',\r\n    title: 'Contributor',\r\n    connection: 100,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[3],\r\n    name: 'Mayah Joe',\r\n    title: 'Contributor',\r\n    connection: 100,\r\n    verified: false\r\n  },\r\n];\r\n\r\nexport default connectionData;\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavigation.js",["1517","1518","1519","1520"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport brand from '../../api/dummy/brand';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport logo from '../../images/logo.svg';\r\nimport Navigation from './Navigation';\r\n\r\n\r\nimport styles from '../layout/sidebar-jss';\r\n\r\nclass DumbalinyoloNavigation extends React.Component {\r\n  state = {\r\n    transform: 0,\r\n  };\r\n  \r\n\r\n  componentDidMount = () => {\r\n    // Scroll content to top\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = (event) => {\r\n    const scroll = event.target.scrollTop;\r\n    this.setState({\r\n      transform: scroll\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      turnDarker,\r\n      drawerPaper,\r\n      toggleDrawerOpen,\r\n      loadTransition,\r\n      leftSidebar,\r\n      dataMenu,\r\n      status,\r\n      anchorEl,\r\n      openMenuStatus,\r\n      closeMenuStatus,\r\n      changeStatus,\r\n      isLogin\r\n    } = this.props;\r\n    const { transform } = this.state;\r\n\r\n    const setStatus = st => {\r\n      switch (st) {\r\n        case 'online':\r\n          return classes.online;\r\n        case 'idle':\r\n          return classes.idle;\r\n        case 'bussy':\r\n          return classes.bussy;\r\n        default:\r\n          return classes.offline;\r\n      }\r\n    };\r\n    return (\r\n      <div className={classNames(classes.drawerInner, !drawerPaper ? classes.drawerPaperClose : '')}>\r\n        <div className={classes.drawerHeader}>\r\n          <NavLink to=\"/\" className={classNames(classes.brand, classes.brandBar, turnDarker && classes.darker)}>\r\n            {brand.name}\r\n          </NavLink>\r\n          {isLogin && (\r\n            <div\r\n              className={classNames(classes.profile, classes.user)}\r\n              style={{ opacity: 1 - (transform / 100), marginTop: transform * -0.3 }}\r\n            >\r\n              <Avatar\r\n                className={classNames(classes.avatar, classes.bigAvatar)}\r\n              />\r\n              <div>\r\n                <Button size=\"small\" onClick={openMenuStatus}>\r\n                  <i className={classNames(classes.dotStatus, setStatus(status))} />\r\n                  {status}\r\n                </Button>\r\n                <Menu\r\n                  id=\"status-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={closeMenuStatus}\r\n                  className={classes.statusMenu}\r\n                >\r\n                  <MenuItem onClick={() => changeStatus('online')}>\r\n                    <i className={classNames(classes.dotStatus, classes.online)} />\r\n                    Online\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => changeStatus('idle')}>\r\n                    <i className={classNames(classes.dotStatus, classes.idle)} />\r\n                    Idle\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => changeStatus('bussy')}>\r\n                    <i className={classNames(classes.dotStatus, classes.bussy)} />\r\n                    Bussy\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => changeStatus('offline')}>\r\n                    <i className={classNames(classes.dotStatus, classes.offline)} />\r\n                    Offline\r\n                  </MenuItem>\r\n                </Menu>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          id=\"sidebar\"\r\n          className={\r\n            classNames(\r\n              classes.menuContainer,\r\n              leftSidebar && classes.rounded,\r\n              isLogin && classes.withProfile\r\n            )\r\n          }\r\n        >\r\n          <Navigation\r\n            loadTransition={loadTransition} \r\n            toggleDrawerOpen={toggleDrawerOpen} \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDumbalinyoloNavigation.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // drawerPaper: PropTypes.bool.isRequired,\r\n  // turnDarker: PropTypes.bool,\r\n  // toggleDrawerOpen: PropTypes.func,\r\n  // loadTransition: PropTypes.func,\r\n  // leftSidebar: PropTypes.bool.isRequired,\r\n  // dataMenu: PropTypes.array.isRequired,\r\n  // status: PropTypes.string.isRequired,\r\n  // anchorEl: PropTypes.object,\r\n  // openMenuStatus: PropTypes.func.isRequired,\r\n  // closeMenuStatus: PropTypes.func.isRequired,\r\n  // changeStatus: PropTypes.func.isRequired,\r\n  // isLogin: PropTypes.bool\r\n};\r\n\r\nDumbalinyoloNavigation.defaultProps = {\r\n  turnDarker: false,\r\n  toggleDrawerOpen: () => {},\r\n  loadTransition: () => {},\r\n  anchorEl: null,\r\n  isLogin: true,\r\n};\r\n\r\nexport default withStyles(styles)(DumbalinyoloNavigation);","c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\UserMenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\breadCrumb-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\header-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\MegaMenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\SidebarContent.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Header\\DropListMenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Search\\SearchUi.js",["1521"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport { NavLink } from 'react-router-dom';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport suggestionsApi from '../../api/ui/menu';\r\nimport styles from './search-jss';\r\n\r\nconst menu = [];\r\n\r\nfunction renderInput(inputProps) {\r\n  const { classes, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.inputHeader}\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: ref,\r\n        ...other,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.name, query);\r\n  const parts = parse(suggestion.name, matches);\r\n  return (\r\n    <MenuItem button selected={isHighlighted} component={NavLink} to={suggestion.link}>\r\n      <div>\r\n        {parts.map((part, index) => (\r\n          part.highlight ? (\r\n            <span key={String(index)} style={{ fontWeight: 700 }}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n              {part.text}\r\n            </strong>\r\n          )\r\n        ))}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction renderSuggestionsContainer(options) {\r\n  const { containerProps, children } = options;\r\n\r\n  return (\r\n    <Paper {...containerProps}>\r\n      {children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name;\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n  return inputLength === 0 ? [] : menu.filter(suggestion => {\r\n    const keep = (!inputValue || suggestion.name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1) && count < 5;\r\n\r\n    if (keep) {\r\n      count += 1;\r\n    }\r\n\r\n    return keep;\r\n  });\r\n}\r\n\r\nclass SearchUi extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    suggestionsApi.map(item => {\r\n      if (item.child) {\r\n        item.child.map(itemChild => {\r\n          if (itemChild.link) {\r\n            menu.push(itemChild);\r\n          }\r\n          return menu;\r\n        });\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value),\r\n    });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  handleChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  handleSuggestionSelected = (event, { suggestion, method }) => {\r\n    const { history } = this.props;\r\n    if (method === 'enter') {\r\n      history.push(suggestion.link);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { suggestions, value } = this.state;\r\n\r\n    return (\r\n      <Autosuggest\r\n        theme={{\r\n          container: classes.containerSearch,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion,\r\n        }}\r\n        renderInputComponent={renderInput}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\r\n        renderSuggestionsContainer={renderSuggestionsContainer}\r\n        getSuggestionValue={getSuggestionValue}\r\n        onSuggestionSelected={this.handleSuggestionSelected}\r\n        renderSuggestion={renderSuggestion}\r\n        className={classes.autocomplete}\r\n        inputProps={{\r\n          classes,\r\n          placeholder: 'Search UI',\r\n          value,\r\n          onChange: this.handleChange,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSearchUi.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SearchUi);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\Navigation.js",["1522","1523"],"import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport navigationConfig from \"./navigationConfig\";\r\nimport DumbalinyoloNavGroup from \"./DumbalinyoloNavGroup\";\r\nimport DumbalinyoloNavCollapse from \"./DumbalinyoloNavCollapse\";\r\nimport DumbalinyoloNavItem from \"./DumbalinyoloNavItem\";\r\nimport DumbalinyoloNavLink from \"./DumbalinyoloNavLink\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: theme.mixins.toolbar,\r\n  logoBg: {\r\n    backgroundColor: theme.palette.type !== \"dark\" && \"#18202c\",\r\n    // backgroundColor: \"#18202c\"\r\n  },\r\n  logo: {\r\n    padding: \"1rem\",\r\n    \"& span\": {\r\n      display: \"block\",\r\n      color: \"rgba(41, 113, 245, 0.87)\",\r\n    },\r\n  },\r\n  navCustom: {\r\n    \"& .MuiTypography-root\": {\r\n      fontSize: \".85rem\",\r\n    },\r\n    \"& .MuiListItemIcon-root\": {\r\n      minWidth: \"35px\",\r\n    },\r\n    \"& .MuiCollapse-wrapperInner a\": {\r\n      paddingLeft: \"50px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navigation = (props) => {\r\n  const classes = useStyles(props);\r\n  // handleClick(){\r\n  //   const {toggleDrawerOpen, loadTransition} = props;\r\n  //   toggleDrawerOpen();\r\n  //   loadTransition(false);\r\n\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <List className={classes.navCustom}>\r\n        {navigationConfig.map((item) => (\r\n          <React.Fragment key={item.id}>\r\n            {item.type === \"group\" && <DumbalinyoloNavGroup item={item} />}\r\n\r\n            {item.type === \"collapse\" && <DumbalinyoloNavCollapse item={item} />}\r\n\r\n            {item.type === \"item\" && <DumbalinyoloNavItem item={item} />}\r\n\r\n            {item.type === \"link\" && <DumbalinyoloNavLink item={item} />}\r\n\r\n            {item.type === \"divider\" && <Divider className=\"my-16\" />}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\sidebarBig-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MainMenuBig.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Sidebar\\MainMenu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\Search\\search-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\api\\ui\\menu.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavLink.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MenuProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavCollapse.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavItem.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavGroup.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavBadge.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\navigations\\NavLinkAdapter.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\admissionTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\curriculumTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\feechoices.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\choiceTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\fees.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\feeTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\fees\\Fees.js",["1524","1525","1526"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getFees, addFee, editFee } from '../../actions/fees';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddFee from './AddFee';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'amount', label: 'AMOUNT' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'targets', label: 'TARGETS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst FeeItView = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getFees();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editFee(fee.id, fee)    \r\n      else\r\n        props.addFee(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.amount}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.targets}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddFee\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.fees.fees\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getFees, addFee, editFee} ) \r\n  (FeeItView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Controls.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\fees.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\choices.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Input.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Select.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\RadioGroup.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\CheckBox.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\DatePicker.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\ActionButton.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Button.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\DictSelect.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\constants.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\fees\\AddFee.js",["1527","1528"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getFeeTargetsChoices, getFeeTypeChoices} from '../../actions/choices';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  targets: '',\r\n  type: '',\r\n  amount: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddFee = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('targets' in fieldValues)\r\n        temp.targets = fieldValues.targets ? \"\" : \"This field is required.\"\r\n    if ('type' in fieldValues)\r\n        temp.type = fieldValues.type ? \"\" : \"This field is required.\"\r\n    if ('amount' in fieldValues)\r\n        temp.amount = fieldValues.amount ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getFeeTargetsChoices();\r\n        props.getFeeTypeChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"AMOUNT\"\r\n                          name=\"amount\"\r\n                          value={values.amount}\r\n                          onChange={handleInputChange}\r\n                          error={errors.amount}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.DictSelect\r\n                          name=\"type\"\r\n                          label=\"TYPE\"\r\n                          value={values.type}\r\n                          onChange={handleInputChange}\r\n                          options={props.feetypechoices}\r\n                          error={errors.type}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"targets\"\r\n                          label=\"TARGETS\"\r\n                          value={values.targets}\r\n                          onChange={handleInputChange}\r\n                          options={props.feetargetschoices}\r\n                          error={errors.targets}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    feetypechoices: state.feechoices.feetypechoices,\r\n    feetargetschoices: state.feechoices.feetargetschoices\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getFeeTypeChoices, getFeeTargetsChoices} ) (AddFee);","c:\\gosso\\gbc_oms\\frontend\\src\\components\\table\\useTable.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\Popup.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\useForm.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\Curriculum.js",["1529","1530","1531"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getCurriculums, addCurriculum, editCurriculum } from '../../actions/curriculums';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddCurriculum from './AddCurriculum';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'code', label: 'CODE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst FeeItView = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCurriculums();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (curriculum, resetForm) => {\r\n      if (curriculum.id > 0)\r\n        props.editCurriculum(curriculum.id, curriculum)    \r\n      else\r\n        props.addCurriculum(curriculum)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Curriculum\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.code}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Curriculum Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCurriculum\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.curriculums.curriculums\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getCurriculums, addCurriculum, editCurriculum} ) \r\n  (FeeItView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\AddCurriculum.js",["1532","1533"],"import React, {useEffect} from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddCurriculum = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default  AddCurriculum;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\curriculums.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\SubjectsAdminView.js",["1534","1535","1536"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getSubjects, addSubject, editSubject } from '../../actions/curriculums';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddSubject from './AddSubject';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'subject_code', label: 'CODE' },\r\n  { id: 'curriculum', label: 'CURRICULUM' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst SubjectAdminView = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getSubjects();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (subject, resetForm) => {\r\n      if (subject.id > 0)\r\n        props.editSubject(subject.id, subject)    \r\n      else\r\n        props.addSubject(subject)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Curriculum\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.subject_code}</TableCell>\r\n                          <TableCell>{item.curriculum}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Curriculum Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddSubject\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.curriculums.subjects,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getSubjects, addSubject, editSubject} ) \r\n  (SubjectAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\curriculum\\AddSubject.js",["1537","1538"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getCurriculums } from '../../actions/curriculums';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n  name: '',\r\n  curriculum: '',\r\n}\r\n\r\n\t\t\t\r\n\r\n\r\n\r\nconst AddSubject = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('curriculum' in fieldValues)\r\n        temp.curriculum = fieldValues.curriculum ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCurriculums();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Select\r\n                          name=\"curriculum\"\r\n                          label=\"CURRICULUM\"\r\n                          value={values.curriculum}\r\n                          onChange={handleInputChange}\r\n                          options={props.curriculums}\r\n                          error={errors.curriculum}\r\n                      />\r\n\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    curriculums: state.curriculums.curriculums\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCurriculums} ) (AddSubject);","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\accounts.js",["1539"],"import {\r\n    ADD_ACCOUNT,\r\n    GET_ACCOUNTS ,\r\n    DELETE_ACCOUNT,\r\n    GET_ACCOUNT,\r\n    EDIT_ACCOUNT,\r\n\r\n\r\n} from '../types/accountTypes';\r\n\r\nconst initialState = {\r\n    accounts: [],\r\n    account: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNTS:\r\n            return {\r\n                ...state,\r\n                accounts: action.payload\r\n            };\r\n        case DELETE_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: state.accounts.filter(account=> account.id !== action.payload)\r\n            };\r\n        case ADD_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: [...state.accounts, action.payload]\r\n            }\r\n        case GET_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account:action.payload\r\n                };\r\n        case EDIT_ACCOUNT:\r\n            const arrayList = state.accounts;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                accounts: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\accountTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AccountsAdminView.js",["1540","1541"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAccounts, editAccount, addAccount } from '../../actions/accounts';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddAccount from './AddAccount';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'account_number', label: 'NUMBER' },\r\n  { id: 'balance', label: 'BALANCE' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'balance_sheet_category', label: 'CATEGORY' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AccountsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAccounts();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (account, resetForm) => {\r\n      if (account.id > 0)\r\n        props.editAccount(account.id, account)    \r\n      else\r\n        props.addAccount(account)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.account_number}</TableCell>\r\n                          <TableCell>{item.balance}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.balance_sheet_category}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Account Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddAccount\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.accounts.accounts\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAccounts, editAccount, addAccount} ) \r\n  (AccountsAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\accounts.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddAccount.js",["1542","1543"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getAccounts } from '../../actions/accounts';\r\nimport { getAccountBalanceSheetCategoriesChoices, getAccountStatusChoices, getAccountTypeChoices} from '../../actions/choices';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  balance: '',\r\n  type: '',\r\n  description: '',\r\n  parent_account: '',\r\n  balance_sheet_category: '',\r\n  active: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddAccount = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('type' in fieldValues)\r\n        temp.type = fieldValues.type ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    if ('balance_sheet_category' in fieldValues)\r\n        temp.balance_sheet_category = fieldValues.balance_sheet_category ? \"\" : \"This field is required.\"\r\n    if ('active' in fieldValues)\r\n        temp.active = fieldValues.active ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAccountStatusChoices();\r\n        props.getAccounts();\r\n        props.getAccountTypeChoices();\r\n        props.getAccountBalanceSheetCategoriesChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"BALANCE\"\r\n                          name=\"balance\"\r\n                          value={values.balance}\r\n                          onChange={handleInputChange}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"type\"\r\n                          label=\"TYPE\"\r\n                          value={values.type}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounttypechoices}\r\n                          error={errors.type}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.DictSelect\r\n                          name=\"balance_sheet_category\"\r\n                          label=\"BALANACE SHEET CATEGORY\"\r\n                          value={values.balance_sheet_category}\r\n                          onChange={handleInputChange}\r\n                          options={props.accountbalancesheetcategorieschoices}\r\n                          error={errors.balance_sheet_category}\r\n                      />\r\n                      <Controls.Select\r\n                          name=\"parent_account\"\r\n                          label=\"PARENT ACCOUNT\"\r\n                          value={values.parent_account}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounts}\r\n                          error={errors.parent_account}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"active\"\r\n                          label=\"STATUS\"\r\n                          value={values.active}\r\n                          onChange={handleInputChange}\r\n                          options={props.accountstatuschoices}\r\n                          error={errors.active}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accounts.accounts,\r\n    accountstatuschoices: state.feechoices.accountstatuschoices,\r\n    accounttypechoices: state.feechoices.accounttypechoices,\r\n    accountbalancesheetcategorieschoices: state.feechoices.accountbalancesheetcategorieschoices,\r\n\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getAccountBalanceSheetCategoriesChoices, getAccounts, getAccountTypeChoices, getAccountStatusChoices} ) \r\n    (AddAccount);","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\inactiveaccounts.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\inactiveaccountTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminInactiveAccounts.js",["1544","1545"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getInActiveAccounts, editInactiveAccount, addInActiveAccount } from '../../actions/inactiveaccounts';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddAccount from './AddAccount';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'account_number', label: 'NUMBER' },\r\n  { id: 'balance', label: 'BALANCE' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'balance_sheet_category', label: 'CATEGORY' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst InActiveAccountsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getInActiveAccounts();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (account, resetForm) => {\r\n      if (account.id > 0)\r\n        props.editInactiveAccount(account.id, account)    \r\n      else\r\n        props.addInActiveAccount(account)\r\n        console.log(account)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Account\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.account_number}</TableCell>\r\n                          <TableCell>{item.balance}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.balance_sheet_category}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Account Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddAccount\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.inactiveaccounts.inactiveaccounts\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getInActiveAccounts, editInactiveAccount, addInActiveAccount} ) \r\n  (InActiveAccountsAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\inactiveaccounts.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\taxes.js",["1546"],"import {\r\n        ADD_TAX,\r\n        GET_TAXES,\r\n        DELETE_TAX,\r\n        EDIT_TAX\r\n    } from '../types/taxTypes';\r\n\r\nconst initialState = {\r\n    taxes: [],\r\n    tax: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_TAXES:\r\n            return {\r\n                ...state,\r\n                taxes: action.payload\r\n            };\r\n        case DELETE_TAX:\r\n            return {\r\n                ...state,\r\n                tax: state.taxes.filter(tax=> tax.id !== action.payload)\r\n            };\r\n        case ADD_TAX:\r\n            return {\r\n                ...state,\r\n                tax: [...state.taxes, action.payload]\r\n            };\r\n        case EDIT_TAX:\r\n            const arrayList = state.taxes;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                taxes: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\taxTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminTaxes.js",["1547","1548","1549"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getTaxes, addTax, editTax } from '../../actions/taxes';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddTax from './AddTax';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\nimport { GiConsoleController } from \"react-icons/gi\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'rate', label: 'RATE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AccountsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getTaxes();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (tax, resetForm) => {\r\n      if (tax.id > 0)\r\n        props.editTax(tax.id, tax)    \r\n      else\r\n        props.addTax(tax)\r\n        console.log(tax)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.rate}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Tax Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddTax\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.taxes.taxes\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getTaxes, addTax, editTax} ) \r\n  (AccountsAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddTax.js",["1550","1551"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  rate: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddTax = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('rate' in fieldValues)\r\n        temp.rate = fieldValues.rate ? \"\" : \"This field is required.\"\r\n    \r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                                  \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"tax\"\r\n                          label=\"TAX\"\r\n                          value={values.tax}\r\n                          onChange={handleInputChange}\r\n                          error={errors.tax}\r\n                      />                    \r\n \r\n                      <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddTax;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\taxes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\currencies.js",["1552"],"import {\r\n        ADD_CURRENCY,\r\n        GET_CURRENCIES,\r\n        EDIT_CURRENCY,\r\n        DELETE_CURRENCY\r\n    } from '../types/currencyTypes';\r\n\r\nconst initialState = {\r\n    currencies: [],\r\n    currency: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CURRENCIES:\r\n            return {\r\n                ...state,\r\n                currencies: action.payload\r\n            };\r\n        case DELETE_CURRENCY:\r\n            return {\r\n                ...state,\r\n                currency: state.currencies.filter(currency=> currency.id !== action.payload)\r\n            };\r\n        case ADD_CURRENCY:\r\n            return {\r\n                ...state,\r\n                currency: [...state.currencies, action.payload]\r\n            };\r\n        case EDIT_CURRENCY:\r\n            const arrayList = state.currencies;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                currencies: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\currencyTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminCurrencies.js",["1553","1554"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getCurrencies, addCurrency, editCurrency } from '../../actions/currencies';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddCurrency from './AddCurrency';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'symbol', label: 'SYMBOL' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminCurrencies = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCurrencies();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (currency, resetForm) => {\r\n      if (currency.id > 0)\r\n        props.editCurrency(currency.id, currency)    \r\n      else\r\n        props.addCurrency(currency)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.symbol}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCurrency\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.currencies.currencies,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getCurrencies, addCurrency, editCurrency} ) \r\n  (AdminCurrencies);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddCurrency.js",["1555","1556"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  symbol: '',\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst AddCurrency = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('symbol' in fieldValues)\r\n        temp.symbol = fieldValues.symbol ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                            label=\"SYMBOL\"\r\n                            name=\"symbol\"\r\n                            value={values.symbol}\r\n                            onChange={handleInputChange}\r\n                            error={errors.symbol}\r\n                    /> \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddCurrency;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\currencies.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\workbooks.js",["1557"],"import {\r\n        ADD_WORKBOOK,\r\n        GET_WORKBOOKS,\r\n        DELETE_WORKBOOK,\r\n        GET_WORKBOOK,\r\n        EDIT_WORKBOOK\r\n    } from '../types/workbookTypes';\r\n\r\nconst initialState = {\r\n    workbooks: [],\r\n    workbook: [],\r\n    loading: false\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_WORKBOOKS:\r\n            return {\r\n                ...state,\r\n                workbooks: action.payload\r\n            };\r\n        case DELETE_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook: state.workbooks.filter(workbook=> workbook.id !== action.payload)\r\n            };\r\n        case ADD_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook: [...state.workbooks, action.payload]\r\n            }\r\n        case GET_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook:action.payload\r\n                };\r\n        case EDIT_WORKBOOK:\r\n            const arrayList = state.workbooks;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                workbooks: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\workbookTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminWorkBooks.js",["1558","1559"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getWorkbooks, addWorkbook, editWorkbook } from '../../actions/workbooks';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddWorkBook from './AddWorkBook';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminWorkBooks = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getWorkbooks();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (workbook, resetForm) => {\r\n      if (workbook.id > 0)\r\n        props.editWorkbook(workbook.id, workbook)    \r\n      else\r\n        props.addWorkbook(workbook)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search WorkBook\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"WorkBook Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddWorkBook\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.workbooks.workbooks\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getWorkbooks, addWorkbook, editWorkbook} ) \r\n  (AdminWorkBooks);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddWorkBook.js",["1560","1561"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddWorkBook = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddWorkBook;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\workbooks.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\ledgers.js",["1562"],"import {\r\n        GET_LEDGERS,\r\n        DELETE_LEDGER,\r\n        GET_LEDGER,\r\n        EDIT_LEDGER,\r\n        ADD_LEDGER\r\n    } from '../types/ledgerTypes';\r\n\r\nconst initialState = {\r\n    ledgers: [],\r\n    ledger: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_LEDGERS:\r\n            return {\r\n                ...state,\r\n                ledgers: action.payload\r\n            };\r\n        case DELETE_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger: state.ledgers.filter(ledger=> ledger.id !== action.payload)\r\n            };\r\n        case GET_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger:action.payload\r\n                };\r\n        case ADD_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger: [...state.ledgers, action.payload]\r\n            };\r\n        case EDIT_LEDGER:\r\n            const arrayList = state.ledgers;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                ledgers: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\ledgerTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AdminLedger.js",["1563","1564"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getLedgers, addLedger, editLedger } from '../../actions/ledgers';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddLedger from './AddLedger';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminLedgers = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getLedgers();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (ledger, resetForm) => {\r\n    if (ledger.id > 0)\r\n        props.editLedger(ledger.id, ledger)    \r\n      else\r\n        props.addLedger(ledger)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Ledger\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Ledger Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddLedger\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.ledgers.ledgers,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {  getLedgers, addLedger, editLedger } ) \r\n  (AdminLedgers);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddLedger.js",["1565","1566"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddLedger = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddLedger;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\ledgers.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\journals.js",["1567"],"import {\r\n        GET_JOURNALS,\r\n        DELETE_JOURNAL,\r\n        GET_JOURNAL,\r\n        ADD_JOURNAL,\r\n        EDIT_JOURNAL\r\n    } from '../types/journalTypes';\r\n\r\nconst initialState = {\r\n    journals: [],\r\n    journal: [],\r\n    loading: false\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_JOURNALS:\r\n            return {\r\n                ...state,\r\n                journals: action.payload\r\n            };\r\n        case DELETE_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal: state.journals.filter(journal=> journal.id !== action.payload)\r\n            };\r\n        case GET_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal:action.payload\r\n                };\r\n        case ADD_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal: [...state.journals, action.payload]\r\n            }\r\n        case EDIT_JOURNAL:\r\n            const arrayList = state.journals;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                journals: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\journalTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\JournalsAdminView.js",["1568","1569","1570","1571"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getJournals, addJournal, editJournal} from '../../actions/journals';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddWorkBook from './AddWorkBook';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\nimport AddJournal from \"./AddJournal\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'description', label: 'DESCRIPTION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst JournalsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getJournals();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (journal, resetForm) => {\r\n      if (journal.id > 0)\r\n        props.editJournal(journal.id, journal)    \r\n      else\r\n        props.addJournal(journal)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Journal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.description}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CodeIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Journal Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddJournal\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.journals.journals,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getJournals, addJournal, editJournal} ) \r\n  (JournalsAdminView);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddJournal.js",["1572","1573"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  description: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddJournal = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"description\"\r\n                        label=\"DESCRIPTION\"\r\n                        value={values.description}\r\n                        onChange={handleInputChange}\r\n                        error={errors.description}\r\n                    /> \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddJournal;","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\journals.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\people.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\assets.js",["1574"],"import {\r\n        ADD_ASSET,\r\n        GET_ASSETS,\r\n        DELETE_ASSET,\r\n        GET_ASSET,\r\n        EDIT_ASSET\r\n    } from '../types/assetTypes';\r\n\r\nconst initialState = {\r\n    assets: [],\r\n    asset: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ASSETS:\r\n            return {\r\n                ...state,\r\n                assets: action.payload\r\n            };\r\n        case DELETE_ASSET:\r\n            return {\r\n                ...state,\r\n                asset: state.assets.filter(asset=> asset.id !== action.payload)\r\n            };\r\n        case ADD_ASSET:\r\n            return {\r\n                ...state,\r\n                asset: [...state.assets, action.payload]\r\n            }\r\n        case GET_ASSET:\r\n            return {\r\n                ...state,\r\n                asset:action.payload\r\n                };\r\n        case EDIT_ASSET:\r\n            const arrayList = state.assets;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                assets: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\types\\assetTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\peopleTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AssetsAdminView.js",["1575","1576"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAssets, addAsset, editAsset} from '../../actions/assets';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddAsset from './AddAsset';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'reference_number', label: 'CODE' },\r\n  { id: 'initial_value', label: 'INITIAL VALUE' },\r\n  { id: 'category', label: 'CATEGORY' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AssetsAdminView= props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAssets();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const addOrEdit = (asset, resetForm) => {\r\n      if (asset.id > 0)\r\n        props.editAsset(asset.id, asset)    \r\n      else\r\n        props.addAsset(asset)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Journal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.reference_number}</TableCell>\r\n                          <TableCell>{item.initial_value}</TableCell>\r\n                          <TableCell>{item.category}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Asset Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddAsset\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.assets.assets,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getAssets, addAsset, editAsset} ) \r\n  (AssetsAdminView);\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\assets.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\accounting\\AddAsset.js",["1577","1578","1579","1580","1581","1582","1583","1584"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getAccounts } from '../../actions/accounts';\r\nimport { getAdminBursars } from '../../actions/people';\r\nimport { getAssetTypesChoices, getAssetsDepriciationMethodChoices} from '../../actions/choices';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  category: '',\r\n  description: '',\r\n  initial_value: '',\r\n  credit_account: '',\r\n  depreciation_period: '',\r\n  init_date: null,\r\n  depreciation_method: '',\r\n  salvage_value: '',\r\n  created_by: '',\r\n}\r\n\r\n\r\n\r\nconst AddAsset = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('category' in fieldValues)\r\n        temp.category = fieldValues.category ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    if ('initial_value' in fieldValues)\r\n        temp.initial_value = fieldValues.initial_value ? \"\" : \"This field is required.\"\r\n    if ('credit_account' in fieldValues)\r\n        temp.credit_account = fieldValues.credit_account ? \"\" : \"This field is required.\"\r\n    if ('depreciation_period:' in fieldValues)\r\n        temp.depreciation_period = fieldValues.depreciation_period ? \"\" : \"This field is required.\"\r\n    if ('init_date' in fieldValues)\r\n        temp.init_date = fieldValues.init_date ? \"\" : \"This field is required.\"\r\n    if ('depreciation_method' in fieldValues)\r\n        temp.depreciation_method = fieldValues.depreciation_method ? \"\" : \"This field is required.\"\r\n    if ('salvage_value' in fieldValues)\r\n        temp.salvage_value = fieldValues.salvage_value ? \"\" : \"This field is required.\"\r\n    if ('created_by' in fieldValues)\r\n        temp.created_by = fieldValues.created_by ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminBursars();\r\n        props.getAccounts();\r\n        props.getAssetTypesChoices();\r\n        props.getAssetsDepriciationMethodChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"INITIAL VALUE\"\r\n                          name=\"initial_value\"\r\n                          value={values.initial_value}\r\n                          onChange={handleInputChange}\r\n                          error={errors.initial_value}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DEPRECIATION PERIOD\"\r\n                          name=\"depreciation_period\"\r\n                          value={values.depreciation_period}\r\n                          onChange={handleInputChange}\r\n                          error={errors.depreciation_period}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"category\"\r\n                          label=\"CATEGORY\"\r\n                          value={values.category}\r\n                          onChange={handleInputChange}\r\n                          options={props.assettypechoices}\r\n                          error={errors.category}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"depreciation_method\"\r\n                          label=\"DEPRECIATION METHOD\"\r\n                          value={values.depreciation_method}\r\n                          onChange={handleInputChange}\r\n                          options={props.assetsdepriciationmethodchoices}\r\n                          error={errors.depreciation_method}\r\n                      />                 \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Select\r\n                          name=\"credit_account\"\r\n                          label=\"CREDIT ACCOUNT\"\r\n                          value={values.parent_account}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounts}\r\n                          error={errors.parent_account}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"SALVAGE VALUE\"\r\n                          name=\"salvage_value\"\r\n                          value={values.salvage_value}\r\n                          onChange={handleInputChange}\r\n                          error={errors.salvage_value}\r\n                      />\r\n                      <Controls.Select\r\n                          name=\"created_by\"\r\n                          label=\"CREDIT ACCOUNT\"\r\n                          value={values.created_by}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounts}\r\n                          error={errors.created_by}\r\n                      />\r\n                      <input  \r\n                        name=\"init_date\"\r\n                        value={values.init_date}\r\n                        type=\"date\" \r\n                        className=\"form-control\"  \r\n                        onChange={handleInputChange} \r\n                        />\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accounts.accounts,\r\n    assettypechoices: state.feechoices.assettypechoices,\r\n    assetsdepriciationmethodchoices: state.feechoices.assetsdepriciationmethodchoices,\r\n    staffusers: state.people.adminbursars,\r\n    \r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getAccounts, getAssetTypesChoices, getAssetsDepriciationMethodChoices, getAdminBursars} ) \r\n    (AddAsset);\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\people.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\classes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\classTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\GradeSelect.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\components\\formcontrols\\UserSelect.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AdminClass.js",["1585","1586"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getClasses, addClass, editClass } from '../../actions/classes';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddClass from './AddClass';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'max_population', label: 'REQUIRED POPULATION' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'year', label: 'YEAR' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminClass = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getClasses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (classi, resetForm) => {\r\n      if (classi.id > 0)\r\n        props.editClass(classi.id, classi)    \r\n      else\r\n        props.addClass(classi)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Class\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.max_population}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>{item.year}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddClass\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.classes.classes,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getClasses, addClass, editClass } ) \r\n  (AdminClass);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AddClass.js",["1587","1588"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getStudentsClassStatusChoices } from '../../actions/choices';\r\nimport { getStreams } from '../../actions/classes';\r\nimport { getAdminTeachers } from '../../actions/people';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  \r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n    name: '',\r\n    stream: '',\r\n    max_population: '',\r\n    class_teacher: '',\r\n    year: '',\r\n    status: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddClass = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('stream' in fieldValues)\r\n        temp.stream = fieldValues.stream ? \"\" : \"This field is required.\"\r\n    if ('max_population' in fieldValues)\r\n        temp.max_population = fieldValues.max_population ? \"\" : \"This field is required.\"\r\n    if ('class_teacher' in fieldValues)\r\n        temp.class_teacher = fieldValues.class_teacher ? \"\" : \"This field is required.\"\r\n    if ('year' in fieldValues)\r\n        temp.year = fieldValues.year ? \"\" : \"This field is required.\"\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStudentsClassStatusChoices();\r\n        props.getStreams();\r\n        props.getAdminTeachers();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"POPULATION LIMIT\"\r\n                          name=\"max_population\"\r\n                          value={values.max_population}\r\n                          onChange={handleInputChange}\r\n                          error={errors.max_population}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"status\"\r\n                          label=\"STATUS\"\r\n                          value={values.status}\r\n                          onChange={handleInputChange}\r\n                          options={props.studentclassstatuschoices}\r\n                          error={errors.status}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.GradeSelect\r\n                          name=\"stream\"\r\n                          label=\"GRADE\"\r\n                          value={values.stream}\r\n                          onChange={handleInputChange}\r\n                          options={props.streams}\r\n                          error={errors.stream}\r\n                      />\r\n                      <Controls.UserSelect\r\n                          name=\"class_teacher\"\r\n                          label=\"CLASS TEACHER\"\r\n                          value={values.class_teacher}\r\n                          onChange={handleInputChange}\r\n                          options={props.adminteachers}\r\n                          error={errors.class_teacher}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"YEAR\"\r\n                          name=\"year\"\r\n                          value={values.year}\r\n                          onChange={handleInputChange}\r\n                          error={errors.year}\r\n                      />\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    streams: state.classes.streams,\r\n    studentclassstatuschoices: state.classes.studentclassstatuschoices,\r\n    adminteachers: state.people.adminteachers,\r\n\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getStudentsClassStatusChoices, getStreams, getAdminTeachers } ) \r\n    (AddClass);","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\classes.js",["1589","1590"],"import axios from 'axios';\r\nimport {\r\n        ADD_CLASS,\r\n        GET_CLASSES,\r\n        GET_CLASS,\r\n        EDIT_CLASS,\r\n        ADD_STREAM,\r\n        GET_STREAMS,\r\n        EDIT_STREAM,\r\n    } from '../types/classTypes';\r\nimport { \r\n    classesURL, \r\n    classstreamsURL,\r\n    classsubjectsURL,\r\n    classstudentsURL,\r\n} from '../constants';\r\n\r\n// Get\r\nexport const getClasses = () => dispatch => {\r\n    axios.get(classesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CLASSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addClass = (classi) => dispatch => {\r\n    axios.post(classesURL, classi)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_CLASS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getClass = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/classes/classes/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CLASS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editClass = (id, classi) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/classes/classes/${id}/`, classi)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_CLASS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStreams = () => dispatch => {\r\n    axios.get(classstreamsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_STREAMS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addStream = (stream) => dispatch => {\r\n    axios.post(classstreamsURL, stream)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STREAM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Edit\r\nexport const editStream = (id, stream) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/classes/class-streams/${id}/`, stream)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STREAM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AdminStream.js",["1591","1592"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getStreams, addStream, editStream } from '../../actions/classes';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddStream from './AddStream';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'grade', label: 'NAME' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStream = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStreams();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (stream, resetForm) => {\r\n      if (stream.id > 0)\r\n        props.editStream(stream.id, stream)    \r\n      else\r\n        props.addStream(stream)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Class\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.grade}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Stream Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddStream\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.classes.streams,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getStreams, addStream, editStream } ) \r\n  (AdminStream);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\classes\\AddStream.js",["1593","1594"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  \r\n}));\r\n\r\nconst initialFValues = {\r\n    grade: '',\r\n}\r\n\r\n\r\n\r\nconst AddStream = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('grade' in fieldValues)\r\n        temp.grade = fieldValues.grade ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"grade\"\r\n                          label=\"GRADE\"\r\n                          value={values.grade}\r\n                          onChange={handleInputChange}\r\n                          error={errors.grade}\r\n                      />             \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddStream;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminBursars.js",["1595","1596","1597"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminBursars, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from './AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminBursars = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminBursars();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addBursar(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Teacher\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"BURSAR Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminbursars,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminBursars, addBursar} ) \r\n  (AdminBursars);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AddBursar.js",["1598","1599"],"import React from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  email: '',\r\n  username: '',\r\n  password: '',\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst AddBursar = props => {\r\n  const { addOrEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('email' in fieldValues)\r\n        temp.email = fieldValues.email ? \"\" : \"This field is required.\"\r\n    if ('username' in fieldValues)\r\n        temp.username = fieldValues.username ? \"\" : \"This field is required.\"\r\n    if ('password' in fieldValues)\r\n        temp.password = fieldValues.password ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"email\"\r\n                          label=\"EMAIL\"\r\n                          value={values.email}\r\n                          onChange={handleInputChange}\r\n                          error={errors.email}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"USERNAME\"\r\n                          name=\"username\"\r\n                          value={values.username}\r\n                          onChange={handleInputChange}\r\n                          error={errors.username}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        label=\"PASSWORD\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleInputChange}\r\n                        error={errors.password}\r\n                    /> \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nexport default AddBursar;\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminTeachers.js",["1600","1601","1602"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminTeachers, addTeacher } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from './AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminTeachers = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminTeachers();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addTeacher(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Principal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Principal Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminteachers,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminTeachers, addTeacher} ) \r\n  (AdminTeachers);\r\n\r\n  \r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\staff\\AdminPrincipals.js",["1603","1604","1605"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminPrincipals, addPrincipal } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from './AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminPrincipals = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminPrincipals();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addPrincipal(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Principal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Principal Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminprincipals,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminPrincipals, addPrincipal} ) \r\n  (AdminPrincipals);\r\n\r\n  \r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\AdminStudents.js",["1606","1607"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudents, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from '../staff/AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudents = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudents();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addBursar(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/students/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Teacher\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <PermIdentityIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"BURSAR Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminstudents,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudents, addBursar} ) \r\n  (AdminStudents);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\parents\\AdminParents.js",["1608","1609","1610"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminParents, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from '../staff/AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminParents = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminParents();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addBursar(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Teacher\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"BURSAR Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminparents,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminParents, addBursar} ) \r\n  (AdminParents);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendances.js",["1611","1612"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminAttendances, editAdminAttendance, addAdminAttendance } from '../../actions/attendances';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport MarkRegister from './AddAttendance';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'date', label: 'DATE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'recorded_by', label: 'TEACHER' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminAttendances = props => {\r\n    // const [records, setRecords] = useState([])\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminAttendances();\r\n    }\r\n    console.log('mount it!');\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editAdminAttendance(fee.id, fee)    \r\n      else\r\n        props.addAdminAttendance(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/attendance/${id}`)\r\n  }\r\n\r\n  \r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.date}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.recorded_by}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Register Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <MarkRegister\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.adminattendances.adminattendances,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminAttendances, editAdminAttendance, addAdminAttendance} ) \r\n  (AdminAttendances);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AddAttendance.js",["1613","1614"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getTeacherProfiles } from '../../actions/people';\r\nimport { getClasses } from  '../../actions/classes';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    klass: '', \r\n    recorded_by: '',\r\n}\r\n\r\n\r\n\r\nconst MarkRegister = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('klass' in fieldValues)\r\n        temp.klass = fieldValues.klass ? \"\" : \"This field is required.\"\r\n    if ('recorded_by' in fieldValues)\r\n        temp.recorded_by = fieldValues.recorded_by ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getTeacherProfiles();\r\n        props.getClasses();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Select\r\n                            name=\"klass\"\r\n                            label=\"CLASS\"\r\n                            value={values.klass}\r\n                            onChange={handleInputChange}\r\n                            options={props.classes}\r\n                            error={errors.klass}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.UserSelect\r\n                          name=\"recorded_by\"\r\n                          label=\"TEACHER\"\r\n                          value={values.recorded_by}\r\n                          onChange={handleInputChange}\r\n                          options={props.teacherprofiles}\r\n                          error={errors.recorded_by}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    classes: state.classes.classes,\r\n    teacherprofiles: state.people.teacherprofiles,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getClasses, getTeacherProfiles} ) (MarkRegister);","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\attendances.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminApprovedAdmissions.js",["1615","1616","1617"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAcceptedAdmissions, addAdmission, editAcceptedAdmission } from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminApprovedAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAcceptedAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editFee(fee.id, fee)    \r\n      else\r\n        props.addFee(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.acceptedadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAcceptedAdmissions, addAdmission, editAcceptedAdmission} ) \r\n  (AdminApprovedAdmissions);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\admissions.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AddAdmission.js",["1618","1619"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getStudentProfiles } from '../../actions/people';\r\nimport { getClasses } from  '../../actions/classes';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    klass: '', \r\n    student: '',\r\n}\r\n\r\n\r\n\r\nconst Apply = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('klass' in fieldValues)\r\n        temp.klass = fieldValues.klass ? \"\" : \"This field is required.\"\r\n    if ('student' in fieldValues)\r\n        temp.student = fieldValues.student ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStudentProfiles();\r\n        props.getClasses();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Select\r\n                            name=\"klass\"\r\n                            label=\"CLASS\"\r\n                            value={values.klass}\r\n                            onChange={handleInputChange}\r\n                            options={props.classes}\r\n                            error={errors.klass}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.UserSelect\r\n                          name=\"student\"\r\n                          label=\"APPLICANT\"\r\n                          value={values.student}\r\n                          onChange={handleInputChange}\r\n                          options={props.studentprofiles}\r\n                          error={errors.student}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    classes: state.classes.classes,\r\n    studentprofiles: state.people.studentprofiles,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getClasses, getStudentProfiles} ) (Apply);\r\n\r\n\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminRejectedAdmissions.js",["1620","1621","1622"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getRejectedAdmissions, addAdmission, editRejectedAdmission } from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminRejectedAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getRejectedAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editRejectedAdmission(fee.id, fee)    \r\n      else\r\n        props.addAdmission(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.rejectedadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getRejectedAdmissions, addAdmission, editRejectedAdmission} ) \r\n  (AdminRejectedAdmissions);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminPendingAdmissions.js",["1623","1624","1625"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getPendingAdmissions, addAdmission, editPendingAdmission } from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminPendingAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getPendingAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editPendingAdmission(fee.id, fee)    \r\n      else\r\n        props.addAdmission(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.pendingadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getPendingAdmissions, addAdmission, editPendingAdmission } ) \r\n  (AdminPendingAdmissions);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\admissions\\AdminMeetingAdmissions.js",["1626","1627","1628"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getMeetingAdmissions, addAdmission, editMeetingAdmission} from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminMeetingAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getMeetingAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editMeetingAdmission(fee.id, fee)    \r\n      else\r\n        props.addAdmission(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.meetingadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getMeetingAdmissions, addAdmission, editMeetingAdmission} ) \r\n  (AdminMeetingAdmissions);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\reducers\\gradings.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\types\\gradingTypes.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentTests.js",["1629","1630","1631"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudentTests, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentTests = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentTests();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/tests/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudenttests,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentTests, addGrade, editGrade} ) \r\n  (AdminStudentTests);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AddGrade.js",["1632","1633"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getGeneralGradingTypeChoices } from '../../actions/choices';\r\nimport { getClasses } from '../../actions/classes';\r\nimport { getTeacherProfiles } from '../../actions/people';\r\nimport { getSubjects } from '../../actions/curriculums';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n    name: '',\r\n    klass: '',\r\n    total_marks: '',\r\n    type: '',\r\n    subject: '',\r\n    recorded_by: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddGrade = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('klass' in fieldValues)\r\n        temp.klass = fieldValues.klass ? \"\" : \"This field is required.\"\r\n    if ('type' in fieldValues)\r\n        temp.type = fieldValues.type ? \"\" : \"This field is required.\"\r\n    if ('total_marks' in fieldValues)\r\n        temp.total_marks = fieldValues.total_marks ? \"\" : \"This field is required.\"\r\n    if ('subject' in fieldValues)\r\n        temp.subject = fieldValues.subject ? \"\" : \"This field is required.\"\r\n    if ('recorded_by' in fieldValues)\r\n        temp.recorded_by = fieldValues.recorded_by ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getClasses();\r\n        props.getTeacherProfiles();\r\n        props.getSubjects();\r\n        props.getGeneralGradingTypeChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"TOTAL MARKS\"\r\n                          name=\"total_marks\"\r\n                          value={values.total_marks}\r\n                          onChange={handleInputChange}\r\n                          error={errors.total_marks}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"type\"\r\n                          label=\"TYPE\"\r\n                          value={values.type}\r\n                          onChange={handleInputChange}\r\n                          options={props.generalgradingtypechoices}\r\n                          error={errors.type}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Select\r\n                          name=\"subject\"\r\n                          label=\"SUBJECT\"\r\n                          value={values.subject}\r\n                          onChange={handleInputChange}\r\n                          options={props.subjects}\r\n                          error={errors.subject}\r\n                      />\r\n                      <Controls.Select\r\n                          name=\"klass\"\r\n                          label=\"CLASS\"\r\n                          value={values.klass}\r\n                          onChange={handleInputChange}\r\n                          options={props.classes}\r\n                          error={errors.klass}\r\n                      />\r\n                      <Controls.UserSelect\r\n                          name=\"recorded_by\"\r\n                          label=\"TEACHER\"\r\n                          value={values.recorded_by}\r\n                          onChange={handleInputChange}\r\n                          options={props.teacherprofiles}\r\n                          error={errors.recorded_by}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    generalgradingtypechoices: state.feechoices.generalgradingtypechoices,\r\n    classes: state.classes.classes,\r\n    teacherprofiles: state.people.teacherprofiles,\r\n    subjects: state.curriculums.subjects,\r\n\r\n\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getClasses, getGeneralGradingTypeChoices, getTeacherProfiles, getSubjects} ) \r\n    (AddGrade);","c:\\gosso\\gbc_oms\\frontend\\src\\actions\\gradings.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentAssignments.js",["1634","1635","1636"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudentAssignments, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentAssignments = props => {\r\n    const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentAssignments();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/assignments/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentassignments,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentAssignments, addGrade, editGrade} ) \r\n  (AdminStudentAssignments);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercises.js",["1637","1638","1639"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudentExcercises, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentExcercises = props => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentExcercises();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/excercises/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentexcercises,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentExcercises, addGrade, editGrade} ) \r\n  (AdminStudentExcercises);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\StudentProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Assignments.js",["1640","1641"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'TEST' },\r\n  { id: 'totalmarks', label: 'TOTAL MARKS' },\r\n  { id: 'subject', label: 'SUBJECT' },\r\n  { id: 'score', label: 'STUDENT SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\nconst Asignments = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/assignment-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.subject}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Asignments;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Attendance.js",["1642","1643"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'attendance', label: 'DATE' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Attendance = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/attendance-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.attendance}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Attendance;\r\n\r\n  \r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Excercises.js",["1644","1645"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'TEST' },\r\n  { id: 'totalmarks', label: 'TOTAL MARKS' },\r\n  { id: 'subject', label: 'SUBJECT' },\r\n  { id: 'score', label: 'STUDENT SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\nconst Excercises = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/excercise-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.subject}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Excercises;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\ProfileBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\Tests.js",["1646","1647"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'TEST' },\r\n  { id: 'totalmarks', label: 'TOTAL MARKS' },\r\n  { id: 'subject', label: 'SUBJECT' },\r\n  { id: 'score', label: 'STUDENT SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\nconst Tests = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/test-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.subject}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Tests;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\students\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendance.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AttendanceBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\Records.js",["1648","1649","1650"],"import React, { useEffect, useState } from \"react\"\r\nimport {  editAttendanceRecord, addAttendanceRecord } from '../../actions/attendances';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from 'axios';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddRecord from './AddRecord';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'attendance', label: 'DATE' },\r\n  { id: 'student', label: 'STUDENT' },\r\n  { id: 'status', label: 'ATTENDANCE STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst Records = props => {\r\n    // const [records, setRecords] = useState([])\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [records, setRecords] = useState([])\r\n\r\n    const {id} =props.data\r\n\r\n\r\n  \r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editAttendanceRecord(fee.id, fee)    \r\n      else\r\n        console.log(fee)        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/attendance/student-attendance-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Record\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.attendance}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Edit Record\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddRecord\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(\r\n  null, \r\n  {editAttendanceRecord, addAttendanceRecord} ) \r\n  (Records);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\attendance\\AddRecord.js",["1651","1652"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getAttendanceStatusChoices } from '../../actions/choices';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    status: '', \r\n}\r\n\r\n\r\n\r\nconst MarkRegister = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAttendanceStatusChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.DictSelect\r\n                            name=\"status\"\r\n                            label=\"ATTENDANCE STATUS\"\r\n                            value={values.status}\r\n                            onChange={handleInputChange}\r\n                            options={props.attendancestatuschoices}\r\n                            error={errors.status}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    attendancestatuschoices: state.feechoices.attendancestatuschoices,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAttendanceStatusChoices} ) (MarkRegister);","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\TestRecords.js",["1653","1654","1655","1656"],"import React, { useEffect, useState } from \"react\"\r\nimport {  editTestRecord } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from 'axios';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport EditRecord from './EditRecord';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'student', label: 'STUDENT' },\r\n  { id: 'totalmarks', label: 'TOTAL' },\r\n  { id: 'score', label: 'SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TestRecords = props => {\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [records, setRecords] = useState([])\r\n\r\n    const {id} =props.data\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editTestRecord(fee.id, fee)    \r\n      else\r\n        console.log(fee)        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/grading/grading-test-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Record\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Edit Record\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <EditRecord\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(\r\n  null, \r\n  { editTestRecord} ) \r\n  (TestRecords);\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\GradingBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminGradingTest.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\ExcerciseRecords.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\EditRecord.js",["1657","1658"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    score: '', \r\n}\r\n\r\n\r\n\r\nconst EditRecord = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('score' in fieldValues)\r\n        temp.score = fieldValues.score ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                            name=\"score\"\r\n                            label=\"STUDENT SCORE\"\r\n                            value={values.score}\r\n                            onChange={handleInputChange}\r\n                            error={errors.score}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default EditRecord;","c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercise.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\it\\gradings\\AdminAssignment.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\test\\StudentLog.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\test\\TeacherLog.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\test\\BursarLog.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\auth\\Login.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\actions\\auth.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\dashboard\\TeacherHome.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\SliderWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\dashboard\\dashboard-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\PerformanceChartWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\DateWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\CounterIconsWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\TaskWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\WeatherWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\CalculatorWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\TeacherLayout.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\TimelineWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\ContactWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Widget\\widget-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\MegaMenuLayout.js",["1659"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarBigLayout.js",["1660"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarLayout.js",["1661","1662","1663"],"import React, { Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport Header from '../../components/Header/Header';\r\nimport Sidebar from './Sidebar';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass LeftSidebarLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      handleOpenGuide\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"left-sidebar\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <Sidebar\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          loadTransition={loadTransition}\r\n          leftSidebar\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingLeft : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLeftSidebarLayout.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // children: PropTypes.node.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n  // toggleDrawer: PropTypes.func.isRequired,\r\n  // loadTransition: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // sidebarOpen: PropTypes.bool.isRequired,\r\n  // pageLoaded: PropTypes.bool.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // deco: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // place: PropTypes.string.isRequired,\r\n  // titleException: PropTypes.array.isRequired,\r\n  // handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(LeftSidebarLayout));\r\n","c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\RightSidebarLayout.js",["1664"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\DropMenuLayout.js",["1665"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\Counter\\CounterWidget.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\Sidebar.js",["1666"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\navigationConfig.js",["1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\index.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavigation.js",["1687","1688","1689","1690"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\layout\\sidebar-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\sidebarBig-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MainMenuBig.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\Navigation.js",["1691","1692"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MenuProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavGroup.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavItem.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavCollapse.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavLink.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\NavLinkAdapter.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavBadge.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendances.js",["1693","1694","1695"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendance.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddAttendance.js",["1696","1697"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AttendanceBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\Records.js",["1698","1699","1700"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddRecord.js",["1701","1702"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\attendance\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTests.js",["1703","1704","1705"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercises.js",["1706","1707","1708","1709"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTest.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignments.js",["1710","1711","1712"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignment.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercise.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\TestRecords.js",["1713","1714","1715","1716"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\AddGrade.js",["1717","1718"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\ExcerciseRecords.js",["1719","1720","1721"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\GradingBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\EditRecord.js",["1722","1723"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\gradings\\appStyles-jss.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudentProfile.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudents.js",["1724","1725","1726"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\About.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Attendance.js",["1727","1728"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Assignments.js",["1729","1730"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Excercises.js",["1731","1732"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\ProfileBag.js",[],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\Tests.js",["1733","1734"],"c:\\gosso\\gbc_oms\\frontend\\src\\teacher\\students\\appStyles-jss.js",[],{"ruleId":"1735","replacedBy":"1736"},{"ruleId":"1737","replacedBy":"1738"},{"ruleId":"1739","severity":1,"message":"1740","line":10,"column":8,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":15},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":10,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":19},{"ruleId":"1739","severity":1,"message":"1744","line":29,"column":8,"nodeType":"1741","messageId":"1742","endLine":29,"endColumn":24},{"ruleId":"1739","severity":1,"message":"1745","line":30,"column":8,"nodeType":"1741","messageId":"1742","endLine":30,"endColumn":27},{"ruleId":"1739","severity":1,"message":"1746","line":31,"column":8,"nodeType":"1741","messageId":"1742","endLine":31,"endColumn":26},{"ruleId":"1739","severity":1,"message":"1747","line":32,"column":8,"nodeType":"1741","messageId":"1742","endLine":32,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1748","line":34,"column":8,"nodeType":"1741","messageId":"1742","endLine":34,"endColumn":19},{"ruleId":"1749","severity":1,"message":"1750","line":22,"column":1,"nodeType":"1751","endLine":81,"endColumn":2},{"ruleId":"1749","severity":1,"message":"1750","line":13,"column":1,"nodeType":"1751","endLine":23,"endColumn":2},{"ruleId":"1749","severity":1,"message":"1750","line":12,"column":1,"nodeType":"1751","endLine":22,"endColumn":2},{"ruleId":"1749","severity":1,"message":"1750","line":17,"column":1,"nodeType":"1751","endLine":49,"endColumn":2},{"ruleId":"1739","severity":1,"message":"1752","line":13,"column":8,"nodeType":"1741","messageId":"1742","endLine":13,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1753","line":14,"column":8,"nodeType":"1741","messageId":"1742","endLine":14,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1754","line":15,"column":8,"nodeType":"1741","messageId":"1742","endLine":15,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1755","line":16,"column":8,"nodeType":"1741","messageId":"1742","endLine":16,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1756","line":17,"column":8,"nodeType":"1741","messageId":"1742","endLine":17,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1757","line":4,"column":10,"nodeType":"1741","messageId":"1742","endLine":4,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1758","line":11,"column":8,"nodeType":"1741","messageId":"1742","endLine":11,"endColumn":12},{"ruleId":"1739","severity":1,"message":"1759","line":10,"column":8,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":10,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":19},{"ruleId":"1739","severity":1,"message":"1760","line":4,"column":10,"nodeType":"1741","messageId":"1742","endLine":4,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1761","line":4,"column":24,"nodeType":"1741","messageId":"1742","endLine":4,"endColumn":41},{"ruleId":"1739","severity":1,"message":"1762","line":5,"column":17,"nodeType":"1741","messageId":"1742","endLine":5,"endColumn":31},{"ruleId":"1739","severity":1,"message":"1763","line":6,"column":17,"nodeType":"1741","messageId":"1742","endLine":6,"endColumn":31},{"ruleId":"1739","severity":1,"message":"1764","line":7,"column":16,"nodeType":"1741","messageId":"1742","endLine":7,"endColumn":25},{"ruleId":"1739","severity":1,"message":"1765","line":8,"column":21,"nodeType":"1741","messageId":"1742","endLine":8,"endColumn":32},{"ruleId":"1739","severity":1,"message":"1766","line":9,"column":19,"nodeType":"1741","messageId":"1742","endLine":9,"endColumn":30},{"ruleId":"1739","severity":1,"message":"1767","line":10,"column":18,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":25},{"ruleId":"1739","severity":1,"message":"1768","line":11,"column":16,"nodeType":"1741","messageId":"1742","endLine":11,"endColumn":29},{"ruleId":"1739","severity":1,"message":"1769","line":14,"column":8,"nodeType":"1741","messageId":"1742","endLine":14,"endColumn":25},{"ruleId":"1739","severity":1,"message":"1770","line":15,"column":8,"nodeType":"1741","messageId":"1742","endLine":15,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1771","line":16,"column":8,"nodeType":"1741","messageId":"1742","endLine":16,"endColumn":29},{"ruleId":"1739","severity":1,"message":"1772","line":17,"column":8,"nodeType":"1741","messageId":"1742","endLine":17,"endColumn":24},{"ruleId":"1739","severity":1,"message":"1773","line":18,"column":8,"nodeType":"1741","messageId":"1742","endLine":18,"endColumn":24},{"ruleId":"1739","severity":1,"message":"1774","line":19,"column":8,"nodeType":"1741","messageId":"1742","endLine":19,"endColumn":26},{"ruleId":"1739","severity":1,"message":"1775","line":20,"column":8,"nodeType":"1741","messageId":"1742","endLine":20,"endColumn":23},{"ruleId":"1739","severity":1,"message":"1776","line":21,"column":8,"nodeType":"1741","messageId":"1742","endLine":21,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1777","line":22,"column":8,"nodeType":"1741","messageId":"1742","endLine":22,"endColumn":20},{"ruleId":"1739","severity":1,"message":"1778","line":26,"column":8,"nodeType":"1741","messageId":"1742","endLine":26,"endColumn":18},{"ruleId":"1739","severity":1,"message":"1779","line":30,"column":7,"nodeType":"1741","messageId":"1742","endLine":30,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1779","line":25,"column":7,"nodeType":"1741","messageId":"1742","endLine":25,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":10,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":19},{"ruleId":"1739","severity":1,"message":"1780","line":10,"column":8,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":24},{"ruleId":"1739","severity":1,"message":"1779","line":30,"column":7,"nodeType":"1741","messageId":"1742","endLine":30,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1779","line":26,"column":7,"nodeType":"1741","messageId":"1742","endLine":26,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1779","line":30,"column":7,"nodeType":"1741","messageId":"1742","endLine":30,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1781","line":37,"column":22,"nodeType":"1741","messageId":"1742","endLine":37,"endColumn":26},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":8,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1782","line":60,"column":7,"nodeType":"1741","messageId":"1742","endLine":60,"endColumn":15},{"ruleId":"1739","severity":1,"message":"1783","line":1,"column":17,"nodeType":"1741","messageId":"1742","endLine":1,"endColumn":25},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":8,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1757","line":5,"column":10,"nodeType":"1741","messageId":"1742","endLine":5,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":8,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1759","line":1,"column":8,"nodeType":"1741","messageId":"1742","endLine":1,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":8,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1784","line":11,"column":8,"nodeType":"1741","messageId":"1742","endLine":11,"endColumn":13},{"ruleId":"1739","severity":1,"message":"1785","line":12,"column":8,"nodeType":"1741","messageId":"1742","endLine":12,"endColumn":12},{"ruleId":"1739","severity":1,"message":"1782","line":50,"column":7,"nodeType":"1741","messageId":"1742","endLine":50,"endColumn":15},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":8,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1786","line":10,"column":10,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":20},{"ruleId":"1739","severity":1,"message":"1787","line":11,"column":8,"nodeType":"1741","messageId":"1742","endLine":11,"endColumn":12},{"ruleId":"1739","severity":1,"message":"1788","line":53,"column":7,"nodeType":"1741","messageId":"1742","endLine":53,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":58,"column":11,"nodeType":"1741","messageId":"1742","endLine":58,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":71,"column":6,"nodeType":"1792","endLine":71,"endColumn":8,"suggestions":"1793"},{"ruleId":"1739","severity":1,"message":"1794","line":49,"column":9,"nodeType":"1741","messageId":"1742","endLine":49,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":95,"column":6,"nodeType":"1792","endLine":95,"endColumn":21,"suggestions":"1796"},{"ruleId":"1739","severity":1,"message":"1788","line":51,"column":7,"nodeType":"1741","messageId":"1742","endLine":51,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":56,"column":11,"nodeType":"1741","messageId":"1742","endLine":56,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":69,"column":6,"nodeType":"1792","endLine":69,"endColumn":8,"suggestions":"1797"},{"ruleId":"1739","severity":1,"message":"1794","line":45,"column":9,"nodeType":"1741","messageId":"1742","endLine":45,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1798","line":81,"column":6,"nodeType":"1792","endLine":81,"endColumn":21,"suggestions":"1799"},{"ruleId":"1739","severity":1,"message":"1788","line":52,"column":7,"nodeType":"1741","messageId":"1742","endLine":52,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":57,"column":11,"nodeType":"1741","messageId":"1742","endLine":57,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":70,"column":6,"nodeType":"1792","endLine":70,"endColumn":8,"suggestions":"1800"},{"ruleId":"1739","severity":1,"message":"1794","line":48,"column":9,"nodeType":"1741","messageId":"1742","endLine":48,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":89,"column":6,"nodeType":"1792","endLine":89,"endColumn":21,"suggestions":"1801"},{"ruleId":"1749","severity":1,"message":"1750","line":17,"column":1,"nodeType":"1751","endLine":49,"endColumn":2},{"ruleId":"1739","severity":1,"message":"1788","line":54,"column":7,"nodeType":"1741","messageId":"1742","endLine":54,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":71,"column":6,"nodeType":"1792","endLine":71,"endColumn":8,"suggestions":"1802"},{"ruleId":"1739","severity":1,"message":"1794","line":53,"column":9,"nodeType":"1741","messageId":"1742","endLine":53,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":103,"column":6,"nodeType":"1792","endLine":103,"endColumn":21,"suggestions":"1803"},{"ruleId":"1739","severity":1,"message":"1788","line":54,"column":7,"nodeType":"1741","messageId":"1742","endLine":54,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":71,"column":6,"nodeType":"1792","endLine":71,"endColumn":8,"suggestions":"1804"},{"ruleId":"1749","severity":1,"message":"1750","line":14,"column":1,"nodeType":"1751","endLine":41,"endColumn":2},{"ruleId":"1739","severity":1,"message":"1805","line":22,"column":10,"nodeType":"1741","messageId":"1742","endLine":22,"endColumn":29},{"ruleId":"1739","severity":1,"message":"1788","line":52,"column":7,"nodeType":"1741","messageId":"1742","endLine":52,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":69,"column":6,"nodeType":"1792","endLine":69,"endColumn":8,"suggestions":"1806"},{"ruleId":"1739","severity":1,"message":"1794","line":45,"column":9,"nodeType":"1741","messageId":"1742","endLine":45,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1798","line":84,"column":6,"nodeType":"1792","endLine":84,"endColumn":21,"suggestions":"1807"},{"ruleId":"1749","severity":1,"message":"1750","line":14,"column":1,"nodeType":"1751","endLine":41,"endColumn":2},{"ruleId":"1739","severity":1,"message":"1788","line":51,"column":7,"nodeType":"1741","messageId":"1742","endLine":51,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":68,"column":6,"nodeType":"1792","endLine":68,"endColumn":8,"suggestions":"1808"},{"ruleId":"1739","severity":1,"message":"1794","line":47,"column":9,"nodeType":"1741","messageId":"1742","endLine":47,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1798","line":85,"column":6,"nodeType":"1792","endLine":85,"endColumn":21,"suggestions":"1809"},{"ruleId":"1749","severity":1,"message":"1750","line":16,"column":1,"nodeType":"1751","endLine":48,"endColumn":2},{"ruleId":"1739","severity":1,"message":"1788","line":50,"column":7,"nodeType":"1741","messageId":"1742","endLine":50,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":67,"column":6,"nodeType":"1792","endLine":67,"endColumn":8,"suggestions":"1810"},{"ruleId":"1739","severity":1,"message":"1794","line":45,"column":9,"nodeType":"1741","messageId":"1742","endLine":45,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1798","line":81,"column":6,"nodeType":"1792","endLine":81,"endColumn":21,"suggestions":"1811"},{"ruleId":"1749","severity":1,"message":"1750","line":15,"column":1,"nodeType":"1751","endLine":47,"endColumn":2},{"ruleId":"1739","severity":1,"message":"1788","line":50,"column":7,"nodeType":"1741","messageId":"1742","endLine":50,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":67,"column":6,"nodeType":"1792","endLine":67,"endColumn":8,"suggestions":"1812"},{"ruleId":"1739","severity":1,"message":"1794","line":45,"column":9,"nodeType":"1741","messageId":"1742","endLine":45,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1798","line":81,"column":6,"nodeType":"1792","endLine":81,"endColumn":21,"suggestions":"1813"},{"ruleId":"1749","severity":1,"message":"1750","line":16,"column":1,"nodeType":"1751","endLine":48,"endColumn":2},{"ruleId":"1739","severity":1,"message":"1814","line":6,"column":8,"nodeType":"1741","messageId":"1742","endLine":6,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1815","line":19,"column":8,"nodeType":"1741","messageId":"1742","endLine":19,"endColumn":19},{"ruleId":"1739","severity":1,"message":"1788","line":53,"column":7,"nodeType":"1741","messageId":"1742","endLine":53,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":70,"column":6,"nodeType":"1792","endLine":70,"endColumn":8,"suggestions":"1816"},{"ruleId":"1739","severity":1,"message":"1794","line":46,"column":9,"nodeType":"1741","messageId":"1742","endLine":46,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1798","line":84,"column":6,"nodeType":"1792","endLine":84,"endColumn":21,"suggestions":"1817"},{"ruleId":"1749","severity":1,"message":"1750","line":15,"column":1,"nodeType":"1751","endLine":47,"endColumn":2},{"ruleId":"1739","severity":1,"message":"1788","line":52,"column":7,"nodeType":"1741","messageId":"1742","endLine":52,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":70,"column":6,"nodeType":"1792","endLine":70,"endColumn":8,"suggestions":"1818"},{"ruleId":"1739","severity":1,"message":"1819","line":9,"column":8,"nodeType":"1741","messageId":"1742","endLine":9,"endColumn":20},{"ruleId":"1739","severity":1,"message":"1820","line":11,"column":3,"nodeType":"1741","messageId":"1742","endLine":11,"endColumn":26},{"ruleId":"1739","severity":1,"message":"1821","line":12,"column":3,"nodeType":"1741","messageId":"1742","endLine":12,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1822","line":13,"column":3,"nodeType":"1741","messageId":"1742","endLine":13,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1823","line":16,"column":7,"nodeType":"1741","messageId":"1742","endLine":16,"endColumn":16},{"ruleId":"1739","severity":1,"message":"1824","line":61,"column":10,"nodeType":"1741","messageId":"1742","endLine":61,"endColumn":22},{"ruleId":"1739","severity":1,"message":"1825","line":63,"column":9,"nodeType":"1741","messageId":"1742","endLine":63,"endColumn":25},{"ruleId":"1790","severity":1,"message":"1795","line":125,"column":6,"nodeType":"1792","endLine":125,"endColumn":21,"suggestions":"1826"},{"ruleId":"1739","severity":1,"message":"1788","line":53,"column":7,"nodeType":"1741","messageId":"1742","endLine":53,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":70,"column":6,"nodeType":"1792","endLine":70,"endColumn":8,"suggestions":"1827"},{"ruleId":"1739","severity":1,"message":"1794","line":49,"column":9,"nodeType":"1741","messageId":"1742","endLine":49,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":100,"column":6,"nodeType":"1792","endLine":100,"endColumn":21,"suggestions":"1828"},{"ruleId":"1739","severity":1,"message":"1829","line":14,"column":5,"nodeType":"1741","messageId":"1742","endLine":14,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1830","line":15,"column":5,"nodeType":"1741","messageId":"1742","endLine":15,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1788","line":50,"column":7,"nodeType":"1741","messageId":"1742","endLine":50,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":67,"column":6,"nodeType":"1792","endLine":67,"endColumn":8,"suggestions":"1831"},{"ruleId":"1739","severity":1,"message":"1794","line":37,"column":9,"nodeType":"1741","messageId":"1742","endLine":37,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1798","line":73,"column":6,"nodeType":"1792","endLine":73,"endColumn":21,"suggestions":"1832"},{"ruleId":"1739","severity":1,"message":"1788","line":52,"column":7,"nodeType":"1741","messageId":"1742","endLine":52,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":57,"column":11,"nodeType":"1741","messageId":"1742","endLine":57,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":70,"column":6,"nodeType":"1792","endLine":70,"endColumn":8,"suggestions":"1833"},{"ruleId":"1739","severity":1,"message":"1794","line":48,"column":9,"nodeType":"1741","messageId":"1742","endLine":48,"endColumn":16},{"ruleId":"1739","severity":1,"message":"1834","line":68,"column":7,"nodeType":"1741","messageId":"1742","endLine":68,"endColumn":16},{"ruleId":"1739","severity":1,"message":"1788","line":52,"column":7,"nodeType":"1741","messageId":"1742","endLine":52,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":57,"column":11,"nodeType":"1741","messageId":"1742","endLine":57,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":70,"column":6,"nodeType":"1792","endLine":70,"endColumn":8,"suggestions":"1835"},{"ruleId":"1739","severity":1,"message":"1788","line":52,"column":7,"nodeType":"1741","messageId":"1742","endLine":52,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":57,"column":11,"nodeType":"1741","messageId":"1742","endLine":57,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":70,"column":6,"nodeType":"1792","endLine":70,"endColumn":8,"suggestions":"1836"},{"ruleId":"1739","severity":1,"message":"1788","line":54,"column":7,"nodeType":"1741","messageId":"1742","endLine":54,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":72,"column":6,"nodeType":"1792","endLine":72,"endColumn":8,"suggestions":"1837"},{"ruleId":"1739","severity":1,"message":"1788","line":52,"column":7,"nodeType":"1741","messageId":"1742","endLine":52,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":57,"column":11,"nodeType":"1741","messageId":"1742","endLine":57,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":70,"column":6,"nodeType":"1792","endLine":70,"endColumn":8,"suggestions":"1838"},{"ruleId":"1739","severity":1,"message":"1788","line":54,"column":7,"nodeType":"1741","messageId":"1742","endLine":54,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":73,"column":6,"nodeType":"1792","endLine":73,"endColumn":8,"suggestions":"1839"},{"ruleId":"1739","severity":1,"message":"1823","line":10,"column":7,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":87,"column":6,"nodeType":"1792","endLine":87,"endColumn":21,"suggestions":"1840"},{"ruleId":"1739","severity":1,"message":"1788","line":53,"column":7,"nodeType":"1741","messageId":"1742","endLine":53,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":58,"column":11,"nodeType":"1741","messageId":"1742","endLine":58,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":71,"column":6,"nodeType":"1792","endLine":71,"endColumn":8,"suggestions":"1841"},{"ruleId":"1739","severity":1,"message":"1823","line":10,"column":7,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":87,"column":6,"nodeType":"1792","endLine":87,"endColumn":21,"suggestions":"1842"},{"ruleId":"1739","severity":1,"message":"1788","line":53,"column":7,"nodeType":"1741","messageId":"1742","endLine":53,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":58,"column":11,"nodeType":"1741","messageId":"1742","endLine":58,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":71,"column":6,"nodeType":"1792","endLine":71,"endColumn":8,"suggestions":"1843"},{"ruleId":"1739","severity":1,"message":"1788","line":53,"column":7,"nodeType":"1741","messageId":"1742","endLine":53,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":58,"column":11,"nodeType":"1741","messageId":"1742","endLine":58,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":71,"column":6,"nodeType":"1792","endLine":71,"endColumn":8,"suggestions":"1844"},{"ruleId":"1739","severity":1,"message":"1788","line":53,"column":7,"nodeType":"1741","messageId":"1742","endLine":53,"endColumn":14},{"ruleId":"1739","severity":1,"message":"1789","line":58,"column":11,"nodeType":"1741","messageId":"1742","endLine":58,"endColumn":18},{"ruleId":"1790","severity":1,"message":"1791","line":71,"column":6,"nodeType":"1792","endLine":71,"endColumn":8,"suggestions":"1845"},{"ruleId":"1739","severity":1,"message":"1788","line":54,"column":7,"nodeType":"1741","messageId":"1742","endLine":54,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":73,"column":6,"nodeType":"1792","endLine":73,"endColumn":8,"suggestions":"1846"},{"ruleId":"1739","severity":1,"message":"1847","line":98,"column":9,"nodeType":"1741","messageId":"1742","endLine":98,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1794","line":48,"column":9,"nodeType":"1741","messageId":"1742","endLine":48,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":100,"column":6,"nodeType":"1792","endLine":100,"endColumn":21,"suggestions":"1848"},{"ruleId":"1739","severity":1,"message":"1814","line":6,"column":8,"nodeType":"1741","messageId":"1742","endLine":6,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1788","line":56,"column":7,"nodeType":"1741","messageId":"1742","endLine":56,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":74,"column":6,"nodeType":"1792","endLine":74,"endColumn":8,"suggestions":"1849"},{"ruleId":"1739","severity":1,"message":"1814","line":6,"column":8,"nodeType":"1741","messageId":"1742","endLine":6,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1788","line":55,"column":7,"nodeType":"1741","messageId":"1742","endLine":55,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":73,"column":6,"nodeType":"1792","endLine":73,"endColumn":8,"suggestions":"1850"},{"ruleId":"1790","severity":1,"message":"1851","line":70,"column":8,"nodeType":"1792","endLine":70,"endColumn":10,"suggestions":"1852"},{"ruleId":"1739","severity":1,"message":"1847","line":80,"column":9,"nodeType":"1741","messageId":"1742","endLine":80,"endColumn":21},{"ruleId":"1790","severity":1,"message":"1851","line":71,"column":4,"nodeType":"1792","endLine":71,"endColumn":6,"suggestions":"1853"},{"ruleId":"1739","severity":1,"message":"1847","line":81,"column":9,"nodeType":"1741","messageId":"1742","endLine":81,"endColumn":21},{"ruleId":"1790","severity":1,"message":"1851","line":70,"column":4,"nodeType":"1792","endLine":70,"endColumn":6,"suggestions":"1854"},{"ruleId":"1739","severity":1,"message":"1847","line":80,"column":9,"nodeType":"1741","messageId":"1742","endLine":80,"endColumn":21},{"ruleId":"1790","severity":1,"message":"1851","line":70,"column":4,"nodeType":"1792","endLine":70,"endColumn":6,"suggestions":"1855"},{"ruleId":"1739","severity":1,"message":"1847","line":80,"column":9,"nodeType":"1741","messageId":"1742","endLine":80,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1788","line":50,"column":7,"nodeType":"1741","messageId":"1742","endLine":50,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1851","line":93,"column":8,"nodeType":"1792","endLine":93,"endColumn":10,"suggestions":"1856"},{"ruleId":"1739","severity":1,"message":"1847","line":104,"column":9,"nodeType":"1741","messageId":"1742","endLine":104,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1823","line":10,"column":7,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":83,"column":6,"nodeType":"1792","endLine":83,"endColumn":21,"suggestions":"1857"},{"ruleId":"1739","severity":1,"message":"1858","line":7,"column":8,"nodeType":"1741","messageId":"1742","endLine":7,"endColumn":15},{"ruleId":"1739","severity":1,"message":"1788","line":51,"column":7,"nodeType":"1741","messageId":"1742","endLine":51,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1851","line":90,"column":8,"nodeType":"1792","endLine":90,"endColumn":10,"suggestions":"1859"},{"ruleId":"1739","severity":1,"message":"1847","line":101,"column":9,"nodeType":"1741","messageId":"1742","endLine":101,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1823","line":9,"column":7,"nodeType":"1741","messageId":"1742","endLine":9,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1798","line":79,"column":6,"nodeType":"1792","endLine":79,"endColumn":21,"suggestions":"1860"},{"ruleId":"1739","severity":1,"message":"1779","line":26,"column":7,"nodeType":"1741","messageId":"1742","endLine":26,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1779","line":30,"column":7,"nodeType":"1741","messageId":"1742","endLine":30,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":10,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":19},{"ruleId":"1739","severity":1,"message":"1780","line":10,"column":8,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":24},{"ruleId":"1739","severity":1,"message":"1779","line":30,"column":7,"nodeType":"1741","messageId":"1742","endLine":30,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1779","line":30,"column":7,"nodeType":"1741","messageId":"1742","endLine":30,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1779","line":25,"column":7,"nodeType":"1741","messageId":"1742","endLine":25,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1782","line":60,"column":7,"nodeType":"1741","messageId":"1742","endLine":60,"endColumn":15},{"ruleId":"1739","severity":1,"message":"1761","line":4,"column":24,"nodeType":"1741","messageId":"1742","endLine":4,"endColumn":41},{"ruleId":"1739","severity":1,"message":"1762","line":5,"column":17,"nodeType":"1741","messageId":"1742","endLine":5,"endColumn":31},{"ruleId":"1739","severity":1,"message":"1763","line":6,"column":17,"nodeType":"1741","messageId":"1742","endLine":6,"endColumn":31},{"ruleId":"1739","severity":1,"message":"1764","line":7,"column":16,"nodeType":"1741","messageId":"1742","endLine":7,"endColumn":25},{"ruleId":"1739","severity":1,"message":"1765","line":8,"column":21,"nodeType":"1741","messageId":"1742","endLine":8,"endColumn":32},{"ruleId":"1739","severity":1,"message":"1766","line":9,"column":19,"nodeType":"1741","messageId":"1742","endLine":9,"endColumn":30},{"ruleId":"1739","severity":1,"message":"1767","line":10,"column":18,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":25},{"ruleId":"1739","severity":1,"message":"1768","line":11,"column":16,"nodeType":"1741","messageId":"1742","endLine":11,"endColumn":29},{"ruleId":"1739","severity":1,"message":"1769","line":14,"column":8,"nodeType":"1741","messageId":"1742","endLine":14,"endColumn":25},{"ruleId":"1739","severity":1,"message":"1770","line":15,"column":8,"nodeType":"1741","messageId":"1742","endLine":15,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1771","line":16,"column":8,"nodeType":"1741","messageId":"1742","endLine":16,"endColumn":29},{"ruleId":"1739","severity":1,"message":"1772","line":17,"column":8,"nodeType":"1741","messageId":"1742","endLine":17,"endColumn":24},{"ruleId":"1739","severity":1,"message":"1773","line":18,"column":8,"nodeType":"1741","messageId":"1742","endLine":18,"endColumn":24},{"ruleId":"1739","severity":1,"message":"1774","line":19,"column":8,"nodeType":"1741","messageId":"1742","endLine":19,"endColumn":26},{"ruleId":"1739","severity":1,"message":"1775","line":20,"column":8,"nodeType":"1741","messageId":"1742","endLine":20,"endColumn":23},{"ruleId":"1739","severity":1,"message":"1776","line":21,"column":8,"nodeType":"1741","messageId":"1742","endLine":21,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1777","line":22,"column":8,"nodeType":"1741","messageId":"1742","endLine":22,"endColumn":20},{"ruleId":"1739","severity":1,"message":"1861","line":24,"column":8,"nodeType":"1741","messageId":"1742","endLine":24,"endColumn":20},{"ruleId":"1739","severity":1,"message":"1862","line":25,"column":8,"nodeType":"1741","messageId":"1742","endLine":25,"endColumn":20},{"ruleId":"1739","severity":1,"message":"1778","line":26,"column":8,"nodeType":"1741","messageId":"1742","endLine":26,"endColumn":18},{"ruleId":"1739","severity":1,"message":"1743","line":2,"column":8,"nodeType":"1741","messageId":"1742","endLine":2,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1784","line":11,"column":8,"nodeType":"1741","messageId":"1742","endLine":11,"endColumn":13},{"ruleId":"1739","severity":1,"message":"1785","line":12,"column":8,"nodeType":"1741","messageId":"1742","endLine":12,"endColumn":12},{"ruleId":"1739","severity":1,"message":"1782","line":50,"column":7,"nodeType":"1741","messageId":"1742","endLine":50,"endColumn":15},{"ruleId":"1739","severity":1,"message":"1786","line":10,"column":10,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":20},{"ruleId":"1739","severity":1,"message":"1787","line":11,"column":8,"nodeType":"1741","messageId":"1742","endLine":11,"endColumn":12},{"ruleId":"1739","severity":1,"message":"1788","line":54,"column":7,"nodeType":"1741","messageId":"1742","endLine":54,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":73,"column":6,"nodeType":"1792","endLine":73,"endColumn":8,"suggestions":"1863"},{"ruleId":"1739","severity":1,"message":"1847","line":96,"column":9,"nodeType":"1741","messageId":"1742","endLine":96,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1823","line":10,"column":7,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":87,"column":6,"nodeType":"1792","endLine":87,"endColumn":21,"suggestions":"1864"},{"ruleId":"1739","severity":1,"message":"1788","line":50,"column":7,"nodeType":"1741","messageId":"1742","endLine":50,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1851","line":93,"column":8,"nodeType":"1792","endLine":93,"endColumn":10,"suggestions":"1865"},{"ruleId":"1739","severity":1,"message":"1847","line":104,"column":9,"nodeType":"1741","messageId":"1742","endLine":104,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1823","line":10,"column":7,"nodeType":"1741","messageId":"1742","endLine":10,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":83,"column":6,"nodeType":"1792","endLine":83,"endColumn":21,"suggestions":"1866"},{"ruleId":"1739","severity":1,"message":"1788","line":54,"column":7,"nodeType":"1741","messageId":"1742","endLine":54,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":73,"column":6,"nodeType":"1792","endLine":73,"endColumn":8,"suggestions":"1867"},{"ruleId":"1739","severity":1,"message":"1847","line":98,"column":9,"nodeType":"1741","messageId":"1742","endLine":98,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1814","line":6,"column":8,"nodeType":"1741","messageId":"1742","endLine":6,"endColumn":17},{"ruleId":"1739","severity":1,"message":"1788","line":55,"column":7,"nodeType":"1741","messageId":"1742","endLine":55,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":73,"column":6,"nodeType":"1792","endLine":73,"endColumn":8,"suggestions":"1868"},{"ruleId":"1739","severity":1,"message":"1847","line":98,"column":9,"nodeType":"1741","messageId":"1742","endLine":98,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1788","line":55,"column":7,"nodeType":"1741","messageId":"1742","endLine":55,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":73,"column":6,"nodeType":"1792","endLine":73,"endColumn":8,"suggestions":"1869"},{"ruleId":"1739","severity":1,"message":"1847","line":98,"column":9,"nodeType":"1741","messageId":"1742","endLine":98,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1858","line":7,"column":8,"nodeType":"1741","messageId":"1742","endLine":7,"endColumn":15},{"ruleId":"1739","severity":1,"message":"1788","line":51,"column":7,"nodeType":"1741","messageId":"1742","endLine":51,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1851","line":90,"column":8,"nodeType":"1792","endLine":90,"endColumn":10,"suggestions":"1870"},{"ruleId":"1739","severity":1,"message":"1847","line":101,"column":9,"nodeType":"1741","messageId":"1742","endLine":101,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1794","line":48,"column":9,"nodeType":"1741","messageId":"1742","endLine":48,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1795","line":100,"column":6,"nodeType":"1792","endLine":100,"endColumn":21,"suggestions":"1871"},{"ruleId":"1739","severity":1,"message":"1788","line":50,"column":7,"nodeType":"1741","messageId":"1742","endLine":50,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1851","line":89,"column":8,"nodeType":"1792","endLine":89,"endColumn":10,"suggestions":"1872"},{"ruleId":"1739","severity":1,"message":"1847","line":100,"column":9,"nodeType":"1741","messageId":"1742","endLine":100,"endColumn":21},{"ruleId":"1739","severity":1,"message":"1823","line":9,"column":7,"nodeType":"1741","messageId":"1742","endLine":9,"endColumn":16},{"ruleId":"1790","severity":1,"message":"1798","line":79,"column":6,"nodeType":"1792","endLine":79,"endColumn":21,"suggestions":"1873"},{"ruleId":"1739","severity":1,"message":"1788","line":51,"column":7,"nodeType":"1741","messageId":"1742","endLine":51,"endColumn":14},{"ruleId":"1790","severity":1,"message":"1791","line":68,"column":6,"nodeType":"1792","endLine":68,"endColumn":8,"suggestions":"1874"},{"ruleId":"1739","severity":1,"message":"1847","line":85,"column":9,"nodeType":"1741","messageId":"1742","endLine":85,"endColumn":21},{"ruleId":"1790","severity":1,"message":"1851","line":71,"column":4,"nodeType":"1792","endLine":71,"endColumn":6,"suggestions":"1875"},{"ruleId":"1739","severity":1,"message":"1847","line":81,"column":9,"nodeType":"1741","messageId":"1742","endLine":81,"endColumn":21},{"ruleId":"1790","severity":1,"message":"1851","line":70,"column":8,"nodeType":"1792","endLine":70,"endColumn":10,"suggestions":"1876"},{"ruleId":"1739","severity":1,"message":"1847","line":80,"column":9,"nodeType":"1741","messageId":"1742","endLine":80,"endColumn":21},{"ruleId":"1790","severity":1,"message":"1851","line":70,"column":4,"nodeType":"1792","endLine":70,"endColumn":6,"suggestions":"1877"},{"ruleId":"1739","severity":1,"message":"1847","line":80,"column":9,"nodeType":"1741","messageId":"1742","endLine":80,"endColumn":21},{"ruleId":"1790","severity":1,"message":"1851","line":70,"column":4,"nodeType":"1792","endLine":70,"endColumn":6,"suggestions":"1878"},{"ruleId":"1739","severity":1,"message":"1847","line":80,"column":9,"nodeType":"1741","messageId":"1742","endLine":80,"endColumn":21},"no-native-reassign",["1879"],"no-negated-in-lhs",["1880"],"no-unused-vars","'BlogBar' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'LeftSidebarThumb' is defined but never used.","'LeftSidebarBigThumb' is defined but never used.","'TopNavigationThumb' is defined but never used.","'MegaMenuThumb' is defined but never used.","'LayoutThumb' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'thumb1' is defined but never used.","'thumb3' is defined but never used.","'thumb5' is defined but never used.","'thumb2' is defined but never used.","'thumb4' is defined but never used.","'Link' is defined but never used.","'link' is defined but never used.","'imgApi' is defined but never used.","'NavLink' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","'CalendarTodayIcon' is defined but never used.","'TrainIcon' is defined but never used.","'SupervisorAccountIcon' is defined but never used.","'ShutterSpeedIcon' is defined but never used.","'LocalCarWashIcon' is defined but never used.","'AccountBalanceIcon' is defined but never used.","'AttachMoneyIcon' is defined but never used.","'BuildIcon' is defined but never used.","'CategoryIcon' is defined but never used.","'PersonIcon' is defined but never used.","'titleException' is assigned a value but never used.","'navigationConfig' is defined but never used.","'data' is assigned a value but never used.","'dataMenu' is assigned a value but never used.","'Fragment' is defined but never used.","'dummy' is defined but never used.","'logo' is defined but never used.","'Typography' is defined but never used.","'clsx' is defined but never used.","'options' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["1881"],"'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'setValues'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1882"],["1883"],"React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["1884"],["1885"],["1886"],["1887"],["1888"],["1889"],"'GiConsoleController' is defined but never used.",["1890"],["1891"],["1892"],["1893"],["1894"],["1895"],["1896"],["1897"],"'CloseIcon' is defined but never used.","'AddWorkBook' is defined but never used.",["1898"],["1899"],["1900"],"'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'useStyles' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.",["1901"],["1902"],["1903"],"'classsubjectsURL' is defined but never used.","'classstudentsURL' is defined but never used.",["1904"],["1905"],["1906"],"'setValues' is assigned a value but never used.",["1907"],["1908"],["1909"],["1910"],["1911"],["1912"],["1913"],["1914"],["1915"],["1916"],["1917"],["1918"],"'handleSearch' is assigned a value but never used.",["1919"],["1920"],["1921"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1922"],["1923"],["1924"],["1925"],["1926"],["1927"],"'AddIcon' is defined but never used.",["1928"],["1929"],"'HowToRegIcon' is defined but never used.","'BusinessIcon' is defined but never used.",["1930"],["1931"],["1932"],["1933"],["1934"],["1935"],["1936"],["1937"],["1938"],["1939"],["1940"],["1941"],["1942"],["1943"],["1944"],["1945"],"no-global-assign","no-unsafe-negation",{"desc":"1946","fix":"1947"},{"desc":"1948","fix":"1949"},{"desc":"1946","fix":"1950"},{"desc":"1951","fix":"1952"},{"desc":"1946","fix":"1953"},{"desc":"1948","fix":"1954"},{"desc":"1946","fix":"1955"},{"desc":"1948","fix":"1956"},{"desc":"1946","fix":"1957"},{"desc":"1946","fix":"1958"},{"desc":"1951","fix":"1959"},{"desc":"1946","fix":"1960"},{"desc":"1951","fix":"1961"},{"desc":"1946","fix":"1962"},{"desc":"1951","fix":"1963"},{"desc":"1946","fix":"1964"},{"desc":"1951","fix":"1965"},{"desc":"1946","fix":"1966"},{"desc":"1951","fix":"1967"},{"desc":"1946","fix":"1968"},{"desc":"1948","fix":"1969"},{"desc":"1946","fix":"1970"},{"desc":"1948","fix":"1971"},{"desc":"1946","fix":"1972"},{"desc":"1951","fix":"1973"},{"desc":"1946","fix":"1974"},{"desc":"1946","fix":"1975"},{"desc":"1946","fix":"1976"},{"desc":"1946","fix":"1977"},{"desc":"1946","fix":"1978"},{"desc":"1946","fix":"1979"},{"desc":"1948","fix":"1980"},{"desc":"1946","fix":"1981"},{"desc":"1948","fix":"1982"},{"desc":"1946","fix":"1983"},{"desc":"1946","fix":"1984"},{"desc":"1946","fix":"1985"},{"desc":"1946","fix":"1986"},{"desc":"1948","fix":"1987"},{"desc":"1946","fix":"1988"},{"desc":"1946","fix":"1989"},{"desc":"1990","fix":"1991"},{"desc":"1990","fix":"1992"},{"desc":"1990","fix":"1993"},{"desc":"1990","fix":"1994"},{"desc":"1990","fix":"1995"},{"desc":"1948","fix":"1996"},{"desc":"1990","fix":"1997"},{"desc":"1951","fix":"1998"},{"desc":"1946","fix":"1999"},{"desc":"1948","fix":"2000"},{"desc":"1990","fix":"2001"},{"desc":"1948","fix":"2002"},{"desc":"1946","fix":"2003"},{"desc":"1946","fix":"2004"},{"desc":"1946","fix":"2005"},{"desc":"1990","fix":"2006"},{"desc":"1948","fix":"2007"},{"desc":"1990","fix":"2008"},{"desc":"1951","fix":"2009"},{"desc":"1946","fix":"2010"},{"desc":"1990","fix":"2011"},{"desc":"1990","fix":"2012"},{"desc":"1990","fix":"2013"},{"desc":"1990","fix":"2014"},"Update the dependencies array to be: [props]",{"range":"2015","text":"2016"},"Update the dependencies array to be: [props, recordForEdit, setValues]",{"range":"2017","text":"2018"},{"range":"2019","text":"2016"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"2020","text":"2021"},{"range":"2022","text":"2016"},{"range":"2023","text":"2018"},{"range":"2024","text":"2016"},{"range":"2025","text":"2018"},{"range":"2026","text":"2016"},{"range":"2027","text":"2016"},{"range":"2028","text":"2021"},{"range":"2029","text":"2016"},{"range":"2030","text":"2021"},{"range":"2031","text":"2016"},{"range":"2032","text":"2021"},{"range":"2033","text":"2016"},{"range":"2034","text":"2021"},{"range":"2035","text":"2016"},{"range":"2036","text":"2021"},{"range":"2037","text":"2016"},{"range":"2038","text":"2018"},{"range":"2039","text":"2016"},{"range":"2040","text":"2018"},{"range":"2041","text":"2016"},{"range":"2042","text":"2021"},{"range":"2043","text":"2016"},{"range":"2044","text":"2016"},{"range":"2045","text":"2016"},{"range":"2046","text":"2016"},{"range":"2047","text":"2016"},{"range":"2048","text":"2016"},{"range":"2049","text":"2018"},{"range":"2050","text":"2016"},{"range":"2051","text":"2018"},{"range":"2052","text":"2016"},{"range":"2053","text":"2016"},{"range":"2054","text":"2016"},{"range":"2055","text":"2016"},{"range":"2056","text":"2018"},{"range":"2057","text":"2016"},{"range":"2058","text":"2016"},"Update the dependencies array to be: [id]",{"range":"2059","text":"2060"},{"range":"2061","text":"2060"},{"range":"2062","text":"2060"},{"range":"2063","text":"2060"},{"range":"2064","text":"2060"},{"range":"2065","text":"2018"},{"range":"2066","text":"2060"},{"range":"2067","text":"2021"},{"range":"2068","text":"2016"},{"range":"2069","text":"2018"},{"range":"2070","text":"2060"},{"range":"2071","text":"2018"},{"range":"2072","text":"2016"},{"range":"2073","text":"2016"},{"range":"2074","text":"2016"},{"range":"2075","text":"2060"},{"range":"2076","text":"2018"},{"range":"2077","text":"2060"},{"range":"2078","text":"2021"},{"range":"2079","text":"2016"},{"range":"2080","text":"2060"},{"range":"2081","text":"2060"},{"range":"2082","text":"2060"},{"range":"2083","text":"2060"},[1802,1804],"[props]",[2190,2205],"[props, recordForEdit, setValues]",[1773,1775],[1599,1614],"[recordForEdit, setValues]",[1816,1818],[1909,1924],[1872,1874],[2635,2650],[1920,1922],[1760,1762],[1715,1730],[1742,1744],[1726,1741],[1700,1702],[1600,1615],[1684,1686],[1598,1613],[1834,1836],[1743,1758],[1820,1822],[3700,3715],[1809,1811],[2514,2529],[1684,1686],[1463,1478],[1793,1795],[1797,1799],[1805,1807],[1870,1872],[1800,1802],[1971,1973],[1969,1984],[1894,1896],[1946,1961],[1894,1896],[1890,1892],[1889,1891],[1915,1917],[2578,2593],[1984,1986],[1987,1989],[1613,1615],"[id]",[1524,1526],[1604,1606],[1594,1596],[2346,2348],[1763,1778],[2270,2272],[1572,1587],[1945,1947],[1969,1984],[2346,2348],[1763,1778],[1882,1884],[1961,1963],[1905,1907],[2270,2272],[2578,2593],[2243,2245],[1572,1587],[1582,1584],[1524,1526],[1613,1615],[1604,1606],[1594,1596]]