[{"c:\\almus\\gbc_oms\\frontend\\src\\index.js":"1","c:\\almus\\gbc_oms\\frontend\\src\\store.js":"2","c:\\almus\\gbc_oms\\frontend\\src\\App.js":"3","c:\\almus\\gbc_oms\\frontend\\src\\theme\\ThemeWrapper.js":"4","c:\\almus\\gbc_oms\\frontend\\src\\test\\StudentLog.js":"5","c:\\almus\\gbc_oms\\frontend\\src\\test\\BursarLog.js":"6","c:\\almus\\gbc_oms\\frontend\\src\\auth\\Login.js":"7","c:\\almus\\gbc_oms\\frontend\\src\\actions\\auth.js":"8","c:\\almus\\gbc_oms\\frontend\\src\\containers\\landing\\LandingPage.js":"9","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Profile\\CompanyProfile.js":"10","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogPage.js":"11","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminCurrencies.js":"12","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AccountsAdminView.js":"13","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminTaxes.js":"14","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminInactiveAccounts.js":"15","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminLedger.js":"16","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminWorkBooks.js":"17","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AssetsAdminView.js":"18","c:\\almus\\gbc_oms\\frontend\\src\\it\\curriculum\\Curriculum.js":"19","c:\\almus\\gbc_oms\\frontend\\src\\it\\curriculum\\SubjectsAdminView.js":"20","c:\\almus\\gbc_oms\\frontend\\src\\it\\classes\\AdminStream.js":"21","c:\\almus\\gbc_oms\\frontend\\src\\it\\dashboard\\InformationTechnologyHome.js":"22","c:\\almus\\gbc_oms\\frontend\\src\\it\\classes\\AdminClass.js":"23","c:\\almus\\gbc_oms\\frontend\\src\\it\\fees\\Fees.js":"24","c:\\almus\\gbc_oms\\frontend\\src\\it\\staff\\AdminPrincipals.js":"25","c:\\almus\\gbc_oms\\frontend\\src\\it\\staff\\AdminTeachers.js":"26","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\AdminStudents.js":"27","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\StudentProfile.js":"28","c:\\almus\\gbc_oms\\frontend\\src\\it\\staff\\AdminBursars.js":"29","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AdminApprovedAdmissions.js":"30","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AdminMeetingAdmissions.js":"31","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AdminRejectedAdmissions.js":"32","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AdminPendingAdmissions.js":"33","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendances.js":"34","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminGradingTest.js":"35","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentAssignments.js":"36","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentTests.js":"37","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercises.js":"38","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendance.js":"39","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminAssignment.js":"40","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\dashboard\\TeacherHome.js":"41","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendances.js":"42","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTest.js":"43","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTests.js":"44","c:\\almus\\gbc_oms\\frontend\\src\\it\\parents\\AdminParents.js":"45","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendance.js":"46","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignments.js":"47","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignment.js":"48","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercises.js":"49","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercise.js":"50","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudents.js":"51","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudentProfile.js":"52","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercise.js":"53","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminUpcomingCourses.js":"54","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminInactiveCourses.js":"55","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminOngoingCourses.js":"56","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminInactiveCourse.js":"57","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminUpcomingCourse.js":"58","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminFinishedCourses.js":"59","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminOngoingCourse.js":"60","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminFinishedCourse.js":"61","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\AdminTopic.js":"62","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\AdminSubTopic.js":"63","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\AdminStudyNote.js":"64","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\index.js":"65","c:\\almus\\gbc_oms\\frontend\\src\\theme\\applicationTheme.js":"66","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\CourseBag.js":"67","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\About.js":"68","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\NoteBag.js":"69","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\About.js":"70","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\Notes.js":"71","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\Topics.js":"72","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\About.js":"73","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\SubTopicBag.js":"74","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\SubTopics.js":"75","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\About.js":"76","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\TopicBag.js":"77","c:\\almus\\gbc_oms\\frontend\\src\\actions\\courses.js":"78","c:\\almus\\gbc_oms\\frontend\\src\\actions\\uiactions.js":"79","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\guidelines\\GuideLines.js":"80","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\objectives\\Objectives.js":"81","c:\\almus\\gbc_oms\\frontend\\src\\components\\SocialMedia\\jss\\cover-jss.js":"82","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\index.js":"83","c:\\almus\\gbc_oms\\frontend\\src\\components\\SocialMedia\\Cover.js":"84","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\errors.js":"85","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\messages.js":"86","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\reports.js":"87","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\assets.js":"88","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\classes.js":"89","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\courses.js":"90","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\gradings.js":"91","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\journals.js":"92","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\people.js":"93","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\ledgers.js":"94","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\currencies.js":"95","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\workbooks.js":"96","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\inactiveaccounts.js":"97","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\taxes.js":"98","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\accounts.js":"99","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\admissions.js":"100","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\teacherattendances.js":"101","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\feechoices.js":"102","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\fees.js":"103","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\studentattendances.js":"104","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\adminattendances.js":"105","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\curriculums.js":"106","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\itmenu.js":"107","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\auth.js":"108","c:\\almus\\gbc_oms\\frontend\\src\\theme\\themePaletteMode.js":"109","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\TopicCard.js":"110","c:\\almus\\gbc_oms\\frontend\\src\\constants.js":"111","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\InformationTechnologyLayout.js":"112","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\appStyles-jss.js":"113","c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\profile-jss.js":"114","c:\\almus\\gbc_oms\\frontend\\src\\components\\table\\useTable.js":"115","c:\\almus\\gbc_oms\\frontend\\src\\types\\courseTypes.js":"116","c:\\almus\\gbc_oms\\frontend\\src\\types\\uitypes.js":"117","c:\\almus\\gbc_oms\\frontend\\src\\components\\PapperBlock\\PapperBlock.js":"118","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\LayoutThumb.js":"119","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\settings-jss.js":"120","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\ThemeThumbs.js":"121","c:\\almus\\gbc_oms\\frontend\\src\\types\\alertTypes.js":"122","c:\\almus\\gbc_oms\\frontend\\src\\types\\reportTypes.js":"123","c:\\almus\\gbc_oms\\frontend\\src\\types\\assetTypes.js":"124","c:\\almus\\gbc_oms\\frontend\\src\\types\\choiceTypes.js":"125","c:\\almus\\gbc_oms\\frontend\\src\\types\\gradingTypes.js":"126","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\MegaMenuThumb.js":"127","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\TopNavigationThumb.js":"128","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarBigThumb.js":"129","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarThumb.js":"130","c:\\almus\\gbc_oms\\frontend\\src\\types\\peopleTypes.js":"131","c:\\almus\\gbc_oms\\frontend\\src\\types\\journalTypes.js":"132","c:\\almus\\gbc_oms\\frontend\\src\\types\\classTypes.js":"133","c:\\almus\\gbc_oms\\frontend\\src\\types\\ledgerTypes.js":"134","c:\\almus\\gbc_oms\\frontend\\src\\types\\currencyTypes.js":"135","c:\\almus\\gbc_oms\\frontend\\src\\types\\workbookTypes.js":"136","c:\\almus\\gbc_oms\\frontend\\src\\types\\inactiveaccountTypes.js":"137","c:\\almus\\gbc_oms\\frontend\\src\\types\\taxTypes.js":"138","c:\\almus\\gbc_oms\\frontend\\src\\types\\accountTypes.js":"139","c:\\almus\\gbc_oms\\frontend\\src\\types\\admissionTypes.js":"140","c:\\almus\\gbc_oms\\frontend\\src\\types\\attendanceTypes.js":"141","c:\\almus\\gbc_oms\\frontend\\src\\types\\feeTypes.js":"142","c:\\almus\\gbc_oms\\frontend\\src\\types\\curriculumTypes.js":"143","c:\\almus\\gbc_oms\\frontend\\src\\types\\authTypes.js":"144","c:\\almus\\gbc_oms\\frontend\\src\\theme\\darkPalette.js":"145","c:\\almus\\gbc_oms\\frontend\\src\\theme\\lightPalette.js":"146","c:\\almus\\gbc_oms\\frontend\\src\\utility.js":"147","c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\navigationConfig.js":"148","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\cardStyles-jss.js":"149","c:\\almus\\gbc_oms\\frontend\\src\\components\\PapperBlock\\papperStyle-jss.js":"150","c:\\almus\\gbc_oms\\frontend\\src\\theme\\themePalette.js":"151","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\thumbPreview-jss.js":"152","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\appStyles-jss.js":"153","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\MegaMenuLayout.js":"154","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\DropMenuLayout.js":"155","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarBigLayout.js":"156","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\RightSidebarLayout.js":"157","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarLayout.js":"158","c:\\almus\\gbc_oms\\frontend\\src\\components\\GuideSlider\\index.js":"159","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\appStyles-jss.js":"160","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\Decoration.js":"161","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\Sidebar.js":"162","c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\Header.js":"163","c:\\almus\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\BreadCrumb.js":"164","c:\\almus\\gbc_oms\\frontend\\src\\components\\Sidebar\\index.js":"165","c:\\almus\\gbc_oms\\frontend\\src\\components\\GuideSlider\\guide-jss.js":"166","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\sidebar-jss.js":"167","c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavigation.js":"168","c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\UserMenu.js":"169","c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\header-jss.js":"170","c:\\almus\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\breadCrumb-jss.js":"171","c:\\almus\\gbc_oms\\frontend\\src\\api\\dummy\\guideData.js":"172","c:\\almus\\gbc_oms\\frontend\\src\\api\\dummy\\dummyContents.js":"173","c:\\almus\\gbc_oms\\frontend\\src\\components\\Search\\SearchUi.js":"174","c:\\almus\\gbc_oms\\frontend\\src\\components\\Sidebar\\SidebarContent.js":"175","c:\\almus\\gbc_oms\\frontend\\src\\components\\Sidebar\\sidebar-jss.js":"176","c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\HeaderMenu.js":"177","c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\Navigation.js":"178","c:\\almus\\gbc_oms\\frontend\\src\\api\\ui\\link.js":"179","c:\\almus\\gbc_oms\\frontend\\src\\api\\images\\avatars.js":"180","c:\\almus\\gbc_oms\\frontend\\src\\components\\Search\\search-jss.js":"181","c:\\almus\\gbc_oms\\frontend\\src\\api\\ui\\menu.js":"182","c:\\almus\\gbc_oms\\frontend\\src\\it\\SidebarBig\\index.js":"183","c:\\almus\\gbc_oms\\frontend\\src\\api\\dummy\\brand.js":"184","c:\\almus\\gbc_oms\\frontend\\src\\components\\Sidebar\\MainMenu.js":"185","c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\MegaMenu.js":"186","c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavLink.js":"187","c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavItem.js":"188","c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavGroup.js":"189","c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavCollapse.js":"190","c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\DropListMenu.js":"191","c:\\almus\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MainMenuBig.js":"192","c:\\almus\\gbc_oms\\frontend\\src\\it\\SidebarBig\\sidebarBig-jss.js":"193","c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavBadge.js":"194","c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\NavLinkAdapter.js":"195","c:\\almus\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MenuProfile.js":"196","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\objectives\\AddObjective.js":"197","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Controls.js":"198","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Popup.js":"199","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\guidelines\\AddGuideLine.js":"200","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\AddSubTopic.js":"201","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\appStyles-jss.js":"202","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\SearchTopic.js":"203","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\AddTopic.js":"204","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\AddNote.js":"205","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\appStyles-jss.js":"206","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\timelines.js":"207","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\ui.js":"208","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\appStyles-jss.js":"209","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AddCourse.js":"210","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\SearchCourse.js":"211","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\CourseCard.js":"212","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\ExcerciseRecords.js":"213","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\GradingBag.js":"214","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\About.js":"215","c:\\almus\\gbc_oms\\frontend\\src\\actions\\gradings.js":"216","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\ProfileBag.js":"217","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\Tests.js":"218","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\Excercises.js":"219","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\Attendance.js":"220","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\Assignments.js":"221","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\About.js":"222","c:\\almus\\gbc_oms\\frontend\\src\\actions\\people.js":"223","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\useForm.js":"224","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\UserSelect.js":"225","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\ActionButton.js":"226","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\DictSelect.js":"227","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\GradeSelect.js":"228","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Select.js":"229","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Button.js":"230","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\DatePicker.js":"231","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\CheckBox.js":"232","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Input.js":"233","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\RadioGroup.js":"234","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\ExcerciseRecords.js":"235","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\GradingBag.js":"236","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\About.js":"237","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\AddGrade.js":"238","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\TeacherLayout.js":"239","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\About.js":"240","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\AttendanceBag.js":"241","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\Records.js":"242","c:\\almus\\gbc_oms\\frontend\\src\\it\\staff\\AddBursar.js":"243","c:\\almus\\gbc_oms\\frontend\\src\\actions\\attendances.js":"244","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TestRecords.js":"245","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddAttendance.js":"246","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\dashboard\\dashboard-jss.js":"247","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\search-jss.js":"248","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\CalculatorWidget.js":"249","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\TimelineWidget.js":"250","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\ContactWidget.js":"251","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\WeatherWidget.js":"252","c:\\almus\\gbc_oms\\frontend\\src\\actions\\choices.js":"253","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\search-jss.js":"254","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\cardStyles-jss.js":"255","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\EditRecord.js":"256","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\appStyles-jss.js":"257","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\appStyles-jss.js":"258","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\EditRecord.js":"259","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\appStyles-jss.js":"260","c:\\almus\\gbc_oms\\frontend\\src\\actions\\classes.js":"261","c:\\almus\\gbc_oms\\frontend\\src\\actions\\curriculums.js":"262","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\appStyles-jss.js":"263","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\appStyles-jss.js":"264","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddRecord.js":"265","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\MegaMenuLayout.js":"266","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\DropMenuLayout.js":"267","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarBigLayout.js":"268","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\RightSidebarLayout.js":"269","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarLayout.js":"270","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\widget-jss.js":"271","c:\\almus\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Contact\\api\\contactData.js":"272","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\Sidebar.js":"273","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\navigationConfig.js":"274","c:\\almus\\gbc_oms\\frontend\\src\\components\\Calculator\\index.js":"275","c:\\almus\\gbc_oms\\frontend\\src\\api\\images\\photos.js":"276","c:\\almus\\gbc_oms\\frontend\\src\\api\\palette\\colorfull.js":"277","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\index.js":"278","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavigation.js":"279","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\sidebar-jss.js":"280","c:\\almus\\gbc_oms\\frontend\\src\\components\\Calculator\\ButtonPanel.js":"281","c:\\almus\\gbc_oms\\frontend\\src\\components\\Calculator\\ResultPanel.js":"282","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MainMenuBig.js":"283","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\Navigation.js":"284","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\sidebarBig-jss.js":"285","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MenuProfile.js":"286","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavLink.js":"287","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavItem.js":"288","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavCollapse.js":"289","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavGroup.js":"290","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavBadge.js":"291","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\NavLinkAdapter.js":"292","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\TaskWidget.js":"293","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\CounterIconsWidget.js":"294","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\DateWidget.js":"295","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\PerformanceChartWidget.js":"296","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\SliderWidget.js":"297","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\About.js":"298","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AddGrade.js":"299","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AttendanceBag.js":"300","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\Records.js":"301","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\TestRecords.js":"302","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AddAttendance.js":"303","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AddAdmission.js":"304","c:\\almus\\gbc_oms\\frontend\\src\\actions\\admissions.js":"305","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\Attendance.js":"306","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\Excercises.js":"307","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\ProfileBag.js":"308","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\Tests.js":"309","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\About.js":"310","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\Assignments.js":"311","c:\\almus\\gbc_oms\\frontend\\src\\it\\fees\\AddFee.js":"312","c:\\almus\\gbc_oms\\frontend\\src\\actions\\fees.js":"313","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AddRecord.js":"314","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\appStyles-jss.js":"315","c:\\almus\\gbc_oms\\frontend\\src\\it\\classes\\AddClass.js":"316","c:\\almus\\gbc_oms\\frontend\\src\\it\\classes\\AddStream.js":"317","c:\\almus\\gbc_oms\\frontend\\src\\api\\chart\\chartData.js":"318","c:\\almus\\gbc_oms\\frontend\\src\\it\\dashboard\\dashboard-jss.js":"319","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Counter\\CounterWidget.js":"320","c:\\almus\\gbc_oms\\frontend\\src\\it\\curriculum\\AddSubject.js":"321","c:\\almus\\gbc_oms\\frontend\\src\\it\\curriculum\\AddCurriculum.js":"322","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddAsset.js":"323","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\TaskWidget.js":"324","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\TimelineWidget.js":"325","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\ContactWidget.js":"326","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\WeatherWidget.js":"327","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\DateWidget.js":"328","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\CalculatorWidget.js":"329","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\CounterIconsWidget.js":"330","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\PerformanceChartWidget.js":"331","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\SliderWidget.js":"332","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddLedger.js":"333","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddWorkBook.js":"334","c:\\almus\\gbc_oms\\frontend\\src\\actions\\workbooks.js":"335","c:\\almus\\gbc_oms\\frontend\\src\\actions\\ledgers.js":"336","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddAccount.js":"337","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddTax.js":"338","c:\\almus\\gbc_oms\\frontend\\src\\actions\\inactiveaccounts.js":"339","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddCurrency.js":"340","c:\\almus\\gbc_oms\\frontend\\src\\actions\\assets.js":"341","c:\\almus\\gbc_oms\\frontend\\src\\actions\\taxes.js":"342","c:\\almus\\gbc_oms\\frontend\\src\\actions\\accounts.js":"343","c:\\almus\\gbc_oms\\frontend\\src\\actions\\currencies.js":"344","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogHome.js":"345","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Profile\\Profile.js":"346","c:\\almus\\gbc_oms\\frontend\\src\\containers\\landing\\HomePage.js":"347","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\Blog.js":"348","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\Corporate.js":"349","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\ProfileBag.js":"350","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\appStyles-jss.js":"351","c:\\almus\\gbc_oms\\frontend\\src\\actions\\reports.js":"352","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\widget-jss.js":"353","c:\\almus\\gbc_oms\\frontend\\src\\it\\Counter\\CounterWidget.js":"354","c:\\almus\\gbc_oms\\frontend\\src\\actions\\timeline.js":"355","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Blog\\SidebarBlog.js":"356","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Blog\\blogStyle-jss.js":"357","c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\Albums.js":"358","c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\About.js":"359","c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\Favorites.js":"360","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Contact.js":"361","c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\HeadlineCard.js":"362","c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\ShowcaseCard.js":"363","c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\Connection.js":"364","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Header.js":"365","c:\\almus\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Timeline\\api\\timelineData.js":"366","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\BlogBar.js":"367","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Pricing.js":"368","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Footer.js":"369","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Technology.js":"370","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Showcase.js":"371","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Feature.js":"372","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Banner.js":"373","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Testimonials.js":"374","c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\index.js":"375","c:\\almus\\gbc_oms\\frontend\\src\\api\\images\\imgData.js":"376","c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\ProfileCard.js":"377","c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\cardStyle-jss.js":"378","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\landingStyle-jss.js":"379","c:\\almus\\gbc_oms\\frontend\\src\\api\\apps\\connectionData.js":"380","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Title.js":"381","c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\ContactForm.js":"382","c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Qna.js":"383","c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\helpSupport-jss.js":"384","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\SideNavMobile.js":"385","c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\PricingCard.js":"386","c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\PostCard.js":"387","c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\GeneralCard.js":"388","c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Company.js":"389","c:\\almus\\gbc_oms\\frontend\\src\\components\\Quote\\Quote.js":"390","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherInactiveCourses.js":"391","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherUpcomingCourses.js":"392","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherFinishedCourses.js":"393","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherUpcomingCourse.js":"394","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherOngoingCourses.js":"395","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\About.js":"396","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\CourseCard.js":"397","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\SearchCourse.js":"398","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\AddCourse.js":"399","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\CourseBag.js":"400","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\Topics.js":"401","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\search-jss.js":"402","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\appStyles-jss.js":"403","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\cardStyles-jss.js":"404","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\TopicCard.js":"405","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\SearchTopic.js":"406","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\AddTopic.js":"407","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\cardStyles-jss.js":"408","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\search-jss.js":"409","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherOngoingCourse.js":"410","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherInactiveCourse.js":"411","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherFinishedCourse.js":"412","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\TeacherTopic.js":"413","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\About.js":"414","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\TopicBag.js":"415","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\objectives\\Objectives.js":"416","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\guidelines\\GuideLines.js":"417","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\SubTopics.js":"418","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\guidelines\\AddGuideLine.js":"419","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\appStyles-jss.js":"420","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\AddSubTopic.js":"421","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\objectives\\AddObjective.js":"422","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\TeacherSubTopic.js":"423","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\SubTopicBag.js":"424","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\About.js":"425","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\Notes.js":"426","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\appStyles-jss.js":"427","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\AddNote.js":"428","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\TeacherStudyNote.js":"429","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\NoteBag.js":"430","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\About.js":"431","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\appStyles-jss.js":"432"},{"size":420,"mtime":1612431440314,"results":"433","hashOfConfig":"434"},{"size":403,"mtime":1612431440610,"results":"435","hashOfConfig":"434"},{"size":12402,"mtime":1612509185539,"results":"436","hashOfConfig":"434"},{"size":7654,"mtime":1612431441163,"results":"437","hashOfConfig":"434"},{"size":155,"mtime":1612431441162,"results":"438","hashOfConfig":"434"},{"size":153,"mtime":1612431441161,"results":"439","hashOfConfig":"434"},{"size":2667,"mtime":1612431438453,"results":"440","hashOfConfig":"434"},{"size":1953,"mtime":1612431438287,"results":"441","hashOfConfig":"434"},{"size":290,"mtime":1612431439516,"results":"442","hashOfConfig":"434"},{"size":311,"mtime":1612431439473,"results":"443","hashOfConfig":"434"},{"size":286,"mtime":1612431439466,"results":"444","hashOfConfig":"434"},{"size":5041,"mtime":1612431440379,"results":"445","hashOfConfig":"434"},{"size":5374,"mtime":1612431440373,"results":"446","hashOfConfig":"434"},{"size":5019,"mtime":1612431440385,"results":"447","hashOfConfig":"434"},{"size":5520,"mtime":1612431440380,"results":"448","hashOfConfig":"434"},{"size":4893,"mtime":1612431440381,"results":"449","hashOfConfig":"434"},{"size":4940,"mtime":1612431440385,"results":"450","hashOfConfig":"434"},{"size":5238,"mtime":1612431440386,"results":"451","hashOfConfig":"434"},{"size":5099,"mtime":1612431440469,"results":"452","hashOfConfig":"434"},{"size":5190,"mtime":1612431440469,"results":"453","hashOfConfig":"434"},{"size":4892,"mtime":1612431440422,"results":"454","hashOfConfig":"434"},{"size":2548,"mtime":1612431440472,"results":"455","hashOfConfig":"434"},{"size":5205,"mtime":1612431440415,"results":"456","hashOfConfig":"434"},{"size":5152,"mtime":1612431440476,"results":"457","hashOfConfig":"434"},{"size":5270,"mtime":1612439977822,"results":"458","hashOfConfig":"434"},{"size":5126,"mtime":1612431440506,"results":"459","hashOfConfig":"434"},{"size":5397,"mtime":1612431440508,"results":"460","hashOfConfig":"434"},{"size":4489,"mtime":1612431440510,"results":"461","hashOfConfig":"434"},{"size":5106,"mtime":1612431440500,"results":"462","hashOfConfig":"434"},{"size":5327,"mtime":1612431440393,"results":"463","hashOfConfig":"434"},{"size":5337,"mtime":1612431440394,"results":"464","hashOfConfig":"434"},{"size":5347,"mtime":1612431440395,"results":"465","hashOfConfig":"434"},{"size":5339,"mtime":1612431440394,"results":"466","hashOfConfig":"434"},{"size":5645,"mtime":1612431440398,"results":"467","hashOfConfig":"434"},{"size":3751,"mtime":1612431440480,"results":"468","hashOfConfig":"434"},{"size":5651,"mtime":1612431440480,"results":"469","hashOfConfig":"434"},{"size":5519,"mtime":1612431440480,"results":"470","hashOfConfig":"434"},{"size":5650,"mtime":1612431440479,"results":"471","hashOfConfig":"434"},{"size":3777,"mtime":1612431440398,"results":"472","hashOfConfig":"434"},{"size":3864,"mtime":1612431440478,"results":"473","hashOfConfig":"434"},{"size":3144,"mtime":1612431441121,"results":"474","hashOfConfig":"434"},{"size":5568,"mtime":1612431441035,"results":"475","hashOfConfig":"434"},{"size":3736,"mtime":1612431441128,"results":"476","hashOfConfig":"434"},{"size":5459,"mtime":1612431441129,"results":"477","hashOfConfig":"434"},{"size":5113,"mtime":1612431440498,"results":"478","hashOfConfig":"434"},{"size":3783,"mtime":1612431441035,"results":"479","hashOfConfig":"434"},{"size":5510,"mtime":1612431441127,"results":"480","hashOfConfig":"434"},{"size":3860,"mtime":1612431441127,"results":"481","hashOfConfig":"434"},{"size":5570,"mtime":1612431441128,"results":"482","hashOfConfig":"434"},{"size":3851,"mtime":1612431441127,"results":"483","hashOfConfig":"434"},{"size":4168,"mtime":1612431441160,"results":"484","hashOfConfig":"434"},{"size":4510,"mtime":1612431441159,"results":"485","hashOfConfig":"434"},{"size":3866,"mtime":1612431440478,"results":"486","hashOfConfig":"434"},{"size":4789,"mtime":1612431440434,"results":"487","hashOfConfig":"434"},{"size":4761,"mtime":1612431440432,"results":"488","hashOfConfig":"434"},{"size":4756,"mtime":1612431440433,"results":"489","hashOfConfig":"434"},{"size":3444,"mtime":1612431440431,"results":"490","hashOfConfig":"434"},{"size":3444,"mtime":1612431440434,"results":"491","hashOfConfig":"434"},{"size":4761,"mtime":1612431440431,"results":"492","hashOfConfig":"434"},{"size":3440,"mtime":1612431440433,"results":"493","hashOfConfig":"434"},{"size":3444,"mtime":1612431440430,"results":"494","hashOfConfig":"434"},{"size":3876,"mtime":1612431440463,"results":"495","hashOfConfig":"434"},{"size":3439,"mtime":1612431440459,"results":"496","hashOfConfig":"434"},{"size":3143,"mtime":1612431440444,"results":"497","hashOfConfig":"434"},{"size":1495,"mtime":1612431440551,"results":"498","hashOfConfig":"434"},{"size":16209,"mtime":1612431441163,"results":"499","hashOfConfig":"434"},{"size":2345,"mtime":1612431440435,"results":"500","hashOfConfig":"434"},{"size":3763,"mtime":1612431440429,"results":"501","hashOfConfig":"434"},{"size":2345,"mtime":1612431440444,"results":"502","hashOfConfig":"434"},{"size":3749,"mtime":1612431440443,"results":"503","hashOfConfig":"434"},{"size":5374,"mtime":1612431440445,"results":"504","hashOfConfig":"434"},{"size":4588,"mtime":1612431440465,"results":"505","hashOfConfig":"434"},{"size":3670,"mtime":1612431440458,"results":"506","hashOfConfig":"434"},{"size":2345,"mtime":1612431440460,"results":"507","hashOfConfig":"434"},{"size":5182,"mtime":1612431440460,"results":"508","hashOfConfig":"434"},{"size":3774,"mtime":1612431440462,"results":"509","hashOfConfig":"434"},{"size":2345,"mtime":1612431440464,"results":"510","hashOfConfig":"434"},{"size":21671,"mtime":1612431438300,"results":"511","hashOfConfig":"434"},{"size":1257,"mtime":1612431438338,"results":"512","hashOfConfig":"434"},{"size":4996,"mtime":1612431440442,"results":"513","hashOfConfig":"434"},{"size":4990,"mtime":1612431440450,"results":"514","hashOfConfig":"434"},{"size":1613,"mtime":1612431438783,"results":"515","hashOfConfig":"434"},{"size":14038,"mtime":1612431438802,"results":"516","hashOfConfig":"434"},{"size":2428,"mtime":1612431438780,"results":"517","hashOfConfig":"434"},{"size":328,"mtime":1612431440540,"results":"518","hashOfConfig":"434"},{"size":278,"mtime":1612431440585,"results":"519","hashOfConfig":"434"},{"size":402,"mtime":1612431440591,"results":"520","hashOfConfig":"434"},{"size":1247,"mtime":1612431440519,"results":"521","hashOfConfig":"434"},{"size":1805,"mtime":1612431440531,"results":"522","hashOfConfig":"434"},{"size":13055,"mtime":1612431440533,"results":"523","hashOfConfig":"434"},{"size":5268,"mtime":1612431440550,"results":"524","hashOfConfig":"434"},{"size":1295,"mtime":1612431440584,"results":"525","hashOfConfig":"434"},{"size":4510,"mtime":1612431440588,"results":"526","hashOfConfig":"434"},{"size":1271,"mtime":1612431440585,"results":"527","hashOfConfig":"434"},{"size":1164,"mtime":1612431440535,"results":"528","hashOfConfig":"434"},{"size":1318,"mtime":1612431440610,"results":"529","hashOfConfig":"434"},{"size":1492,"mtime":1612431440551,"results":"530","hashOfConfig":"434"},{"size":1064,"mtime":1612431440595,"results":"531","hashOfConfig":"434"},{"size":1275,"mtime":1612431440514,"results":"532","hashOfConfig":"434"},{"size":2964,"mtime":1612431440518,"results":"533","hashOfConfig":"434"},{"size":1406,"mtime":1612431440595,"results":"534","hashOfConfig":"434"},{"size":2920,"mtime":1612431440544,"results":"535","hashOfConfig":"434"},{"size":3666,"mtime":1612431440545,"results":"536","hashOfConfig":"434"},{"size":452,"mtime":1612431440593,"results":"537","hashOfConfig":"434"},{"size":2203,"mtime":1612431440518,"results":"538","hashOfConfig":"434"},{"size":2409,"mtime":1612431440536,"results":"539","hashOfConfig":"434"},{"size":1107,"mtime":1612431440576,"results":"540","hashOfConfig":"434"},{"size":1250,"mtime":1612431440520,"results":"541","hashOfConfig":"434"},{"size":259,"mtime":1612431441168,"results":"542","hashOfConfig":"434"},{"size":2567,"mtime":1612431440465,"results":"543","hashOfConfig":"434"},{"size":16614,"mtime":1612431439464,"results":"544","hashOfConfig":"434"},{"size":7075,"mtime":1612431440486,"results":"545","hashOfConfig":"434"},{"size":5370,"mtime":1612431440466,"results":"546","hashOfConfig":"434"},{"size":4161,"mtime":1612431438768,"results":"547","hashOfConfig":"434"},{"size":3927,"mtime":1612431439462,"results":"548","hashOfConfig":"434"},{"size":3883,"mtime":1612431441183,"results":"549","hashOfConfig":"434"},{"size":678,"mtime":1612431441226,"results":"550","hashOfConfig":"434"},{"size":2062,"mtime":1612431438764,"results":"551","hashOfConfig":"434"},{"size":1083,"mtime":1612431438801,"results":"552","hashOfConfig":"434"},{"size":4858,"mtime":1612431438803,"results":"553","hashOfConfig":"434"},{"size":1862,"mtime":1612431438802,"results":"554","hashOfConfig":"434"},{"size":135,"mtime":1612431441178,"results":"555","hashOfConfig":"434"},{"size":55,"mtime":1612431441219,"results":"556","hashOfConfig":"434"},{"size":205,"mtime":1612431441178,"results":"557","hashOfConfig":"434"},{"size":7867,"mtime":1612431441180,"results":"558","hashOfConfig":"434"},{"size":1380,"mtime":1612431441201,"results":"559","hashOfConfig":"434"},{"size":2038,"mtime":1612431438805,"results":"560","hashOfConfig":"434"},{"size":1659,"mtime":1612431438806,"results":"561","hashOfConfig":"434"},{"size":1994,"mtime":1612431438804,"results":"562","hashOfConfig":"434"},{"size":1516,"mtime":1612431438804,"results":"563","hashOfConfig":"434"},{"size":1260,"mtime":1612431441217,"results":"564","hashOfConfig":"434"},{"size":224,"mtime":1612431441212,"results":"565","hashOfConfig":"434"},{"size":519,"mtime":1612431441181,"results":"566","hashOfConfig":"434"},{"size":214,"mtime":1612431441213,"results":"567","hashOfConfig":"434"},{"size":192,"mtime":1612431441185,"results":"568","hashOfConfig":"434"},{"size":235,"mtime":1612431441239,"results":"569","hashOfConfig":"434"},{"size":325,"mtime":1612431441203,"results":"570","hashOfConfig":"434"},{"size":151,"mtime":1612431441226,"results":"571","hashOfConfig":"434"},{"size":223,"mtime":1612431441168,"results":"572","hashOfConfig":"434"},{"size":630,"mtime":1612431441177,"results":"573","hashOfConfig":"434"},{"size":517,"mtime":1612431441179,"results":"574","hashOfConfig":"434"},{"size":774,"mtime":1612431441188,"results":"575","hashOfConfig":"434"},{"size":486,"mtime":1612431441186,"results":"576","hashOfConfig":"434"},{"size":166,"mtime":1612431441179,"results":"577","hashOfConfig":"434"},{"size":5618,"mtime":1612431441167,"results":"578","hashOfConfig":"434"},{"size":5620,"mtime":1612431441167,"results":"579","hashOfConfig":"434"},{"size":132,"mtime":1612431441240,"results":"580","hashOfConfig":"434"},{"size":9575,"mtime":1612507815220,"results":"581","hashOfConfig":"434"},{"size":8679,"mtime":1612431440466,"results":"582","hashOfConfig":"434"},{"size":2713,"mtime":1612431438765,"results":"583","hashOfConfig":"434"},{"size":5584,"mtime":1612431441167,"results":"584","hashOfConfig":"434"},{"size":5107,"mtime":1612431438806,"results":"585","hashOfConfig":"434"},{"size":5367,"mtime":1612431440490,"results":"586","hashOfConfig":"434"},{"size":3412,"mtime":1612431440489,"results":"587","hashOfConfig":"434"},{"size":3359,"mtime":1612431440484,"results":"588","hashOfConfig":"434"},{"size":3516,"mtime":1612431440487,"results":"589","hashOfConfig":"434"},{"size":3552,"mtime":1612431440489,"results":"590","hashOfConfig":"434"},{"size":3518,"mtime":1612431440487,"results":"591","hashOfConfig":"434"},{"size":4267,"mtime":1612431438759,"results":"592","hashOfConfig":"434"},{"size":5367,"mtime":1612431439512,"results":"593","hashOfConfig":"434"},{"size":2386,"mtime":1612431439511,"results":"594","hashOfConfig":"434"},{"size":3806,"mtime":1612431440490,"results":"595","hashOfConfig":"434"},{"size":5972,"mtime":1612431438761,"results":"596","hashOfConfig":"434"},{"size":957,"mtime":1612431438755,"results":"597","hashOfConfig":"434"},{"size":3874,"mtime":1612431438772,"results":"598","hashOfConfig":"434"},{"size":976,"mtime":1612431438759,"results":"599","hashOfConfig":"434"},{"size":9240,"mtime":1612431440491,"results":"600","hashOfConfig":"434"},{"size":3228,"mtime":1612431440495,"results":"601","hashOfConfig":"434"},{"size":5902,"mtime":1612431438763,"results":"602","hashOfConfig":"434"},{"size":11881,"mtime":1612431438763,"results":"603","hashOfConfig":"434"},{"size":623,"mtime":1612431438756,"results":"604","hashOfConfig":"434"},{"size":1134,"mtime":1612431438351,"results":"605","hashOfConfig":"434"},{"size":774,"mtime":1612431438350,"results":"606","hashOfConfig":"434"},{"size":4312,"mtime":1612431438770,"results":"607","hashOfConfig":"434"},{"size":5261,"mtime":1612431438772,"results":"608","hashOfConfig":"434"},{"size":9240,"mtime":1612431438773,"results":"609","hashOfConfig":"434"},{"size":7699,"mtime":1612431438761,"results":"610","hashOfConfig":"434"},{"size":1995,"mtime":1612431440496,"results":"611","hashOfConfig":"434"},{"size":270,"mtime":1612431438444,"results":"612","hashOfConfig":"434"},{"size":427,"mtime":1612431438355,"results":"613","hashOfConfig":"434"},{"size":3085,"mtime":1612431438771,"results":"614","hashOfConfig":"434"},{"size":19766,"mtime":1612431438445,"results":"615","hashOfConfig":"434"},{"size":1683,"mtime":1612431440318,"results":"616","hashOfConfig":"434"},{"size":216,"mtime":1612431438350,"results":"617","hashOfConfig":"434"},{"size":4817,"mtime":1612431438771,"results":"618","hashOfConfig":"434"},{"size":6320,"mtime":1612431438762,"results":"619","hashOfConfig":"434"},{"size":696,"mtime":1612431440494,"results":"620","hashOfConfig":"434"},{"size":1049,"mtime":1612431440494,"results":"621","hashOfConfig":"434"},{"size":1042,"mtime":1612431440494,"results":"622","hashOfConfig":"434"},{"size":2980,"mtime":1612431440493,"results":"623","hashOfConfig":"434"},{"size":5757,"mtime":1612431438760,"results":"624","hashOfConfig":"434"},{"size":6305,"mtime":1612431440317,"results":"625","hashOfConfig":"434"},{"size":6306,"mtime":1612431440320,"results":"626","hashOfConfig":"434"},{"size":1069,"mtime":1612431440492,"results":"627","hashOfConfig":"434"},{"size":212,"mtime":1612431440495,"results":"628","hashOfConfig":"434"},{"size":3302,"mtime":1612431440318,"results":"629","hashOfConfig":"434"},{"size":3179,"mtime":1612431440449,"results":"630","hashOfConfig":"434"},{"size":587,"mtime":1612431438820,"results":"631","hashOfConfig":"434"},{"size":1369,"mtime":1612431438830,"results":"632","hashOfConfig":"434"},{"size":3179,"mtime":1612431440441,"results":"633","hashOfConfig":"434"},{"size":2714,"mtime":1612431440459,"results":"634","hashOfConfig":"434"},{"size":5370,"mtime":1612431440461,"results":"635","hashOfConfig":"434"},{"size":2297,"mtime":1612431440463,"results":"636","hashOfConfig":"434"},{"size":3782,"mtime":1612431440462,"results":"637","hashOfConfig":"434"},{"size":4888,"mtime":1612431440443,"results":"638","hashOfConfig":"434"},{"size":5370,"mtime":1612431440448,"results":"639","hashOfConfig":"434"},{"size":422,"mtime":1612431440603,"results":"640","hashOfConfig":"434"},{"size":2964,"mtime":1612431440604,"results":"641","hashOfConfig":"434"},{"size":5370,"mtime":1612431440436,"results":"642","hashOfConfig":"434"},{"size":6030,"mtime":1612431440430,"results":"643","hashOfConfig":"434"},{"size":2297,"mtime":1612431440436,"results":"644","hashOfConfig":"434"},{"size":2663,"mtime":1612431440435,"results":"645","hashOfConfig":"434"},{"size":4929,"mtime":1612431440482,"results":"646","hashOfConfig":"434"},{"size":2340,"mtime":1612431440482,"results":"647","hashOfConfig":"434"},{"size":401,"mtime":1612431440476,"results":"648","hashOfConfig":"434"},{"size":7236,"mtime":1612431438315,"results":"649","hashOfConfig":"434"},{"size":2284,"mtime":1612431441159,"results":"650","hashOfConfig":"434"},{"size":3786,"mtime":1612431441160,"results":"651","hashOfConfig":"434"},{"size":3801,"mtime":1612431441159,"results":"652","hashOfConfig":"434"},{"size":3603,"mtime":1612431441151,"results":"653","hashOfConfig":"434"},{"size":3810,"mtime":1612431441151,"results":"654","hashOfConfig":"434"},{"size":3759,"mtime":1612431441150,"results":"655","hashOfConfig":"434"},{"size":7614,"mtime":1612431438329,"results":"656","hashOfConfig":"434"},{"size":1226,"mtime":1612431438832,"results":"657","hashOfConfig":"434"},{"size":919,"mtime":1612431438831,"results":"658","hashOfConfig":"434"},{"size":873,"mtime":1612431438819,"results":"659","hashOfConfig":"434"},{"size":924,"mtime":1612431438829,"results":"660","hashOfConfig":"434"},{"size":923,"mtime":1612431438829,"results":"661","hashOfConfig":"434"},{"size":917,"mtime":1612431438831,"results":"662","hashOfConfig":"434"},{"size":737,"mtime":1612431438819,"results":"663","hashOfConfig":"434"},{"size":814,"mtime":1612431438828,"results":"664","hashOfConfig":"434"},{"size":753,"mtime":1612431438819,"results":"665","hashOfConfig":"434"},{"size":440,"mtime":1612431438830,"results":"666","hashOfConfig":"434"},{"size":800,"mtime":1612431438830,"results":"667","hashOfConfig":"434"},{"size":4929,"mtime":1612431441126,"results":"668","hashOfConfig":"434"},{"size":2284,"mtime":1612431441126,"results":"669","hashOfConfig":"434"},{"size":401,"mtime":1612431441124,"results":"670","hashOfConfig":"434"},{"size":5751,"mtime":1612431441124,"results":"671","hashOfConfig":"434"},{"size":6340,"mtime":1612431441137,"results":"672","hashOfConfig":"434"},{"size":319,"mtime":1612431441030,"results":"673","hashOfConfig":"434"},{"size":2293,"mtime":1612431441034,"results":"674","hashOfConfig":"434"},{"size":5251,"mtime":1612431441034,"results":"675","hashOfConfig":"434"},{"size":3313,"mtime":1612431440499,"results":"676","hashOfConfig":"434"},{"size":5092,"mtime":1612431438284,"results":"677","hashOfConfig":"434"},{"size":4946,"mtime":1612431441129,"results":"678","hashOfConfig":"434"},{"size":3176,"mtime":1612431441030,"results":"679","hashOfConfig":"434"},{"size":592,"mtime":1612431441122,"results":"680","hashOfConfig":"434"},{"size":3085,"mtime":1612431440466,"results":"681","hashOfConfig":"434"},{"size":616,"mtime":1612431441011,"results":"682","hashOfConfig":"434"},{"size":2108,"mtime":1612431441024,"results":"683","hashOfConfig":"434"},{"size":14148,"mtime":1612431441013,"results":"684","hashOfConfig":"434"},{"size":1034,"mtime":1612431441026,"results":"685","hashOfConfig":"434"},{"size":34256,"mtime":1612431438292,"results":"686","hashOfConfig":"434"},{"size":3085,"mtime":1612431440440,"results":"687","hashOfConfig":"434"},{"size":8679,"mtime":1612431440436,"results":"688","hashOfConfig":"434"},{"size":2609,"mtime":1612431440481,"results":"689","hashOfConfig":"434"},{"size":5367,"mtime":1612431440484,"results":"690","hashOfConfig":"434"},{"size":5367,"mtime":1612431441161,"results":"691","hashOfConfig":"434"},{"size":2609,"mtime":1612431441125,"results":"692","hashOfConfig":"434"},{"size":5367,"mtime":1612431441130,"results":"693","hashOfConfig":"434"},{"size":2471,"mtime":1612431438294,"results":"694","hashOfConfig":"434"},{"size":3421,"mtime":1612431438304,"results":"695","hashOfConfig":"434"},{"size":5367,"mtime":1612431441137,"results":"696","hashOfConfig":"434"},{"size":5367,"mtime":1612431441036,"results":"697","hashOfConfig":"434"},{"size":3053,"mtime":1612431441031,"results":"698","hashOfConfig":"434"},{"size":3412,"mtime":1612431441135,"results":"699","hashOfConfig":"434"},{"size":3359,"mtime":1612431441130,"results":"700","hashOfConfig":"434"},{"size":3516,"mtime":1612431441134,"results":"701","hashOfConfig":"434"},{"size":3552,"mtime":1612431441136,"results":"702","hashOfConfig":"434"},{"size":3389,"mtime":1612431441134,"results":"703","hashOfConfig":"434"},{"size":16068,"mtime":1612431441029,"results":"704","hashOfConfig":"434"},{"size":2176,"mtime":1612431439482,"results":"705","hashOfConfig":"434"},{"size":3806,"mtime":1612431441136,"results":"706","hashOfConfig":"434"},{"size":4308,"mtime":1612508074070,"results":"707","hashOfConfig":"434"},{"size":2114,"mtime":1612431438757,"results":"708","hashOfConfig":"434"},{"size":3563,"mtime":1612431438435,"results":"709","hashOfConfig":"434"},{"size":558,"mtime":1612431438436,"results":"710","hashOfConfig":"434"},{"size":1683,"mtime":1612431441008,"results":"711","hashOfConfig":"434"},{"size":5187,"mtime":1612431441147,"results":"712","hashOfConfig":"434"},{"size":9240,"mtime":1612431441138,"results":"713","hashOfConfig":"434"},{"size":4469,"mtime":1612431438756,"results":"714","hashOfConfig":"434"},{"size":752,"mtime":1612431438757,"results":"715","hashOfConfig":"434"},{"size":6305,"mtime":1612431441007,"results":"716","hashOfConfig":"434"},{"size":1995,"mtime":1612431441148,"results":"717","hashOfConfig":"434"},{"size":6306,"mtime":1612431441010,"results":"718","hashOfConfig":"434"},{"size":3302,"mtime":1612431441007,"results":"719","hashOfConfig":"434"},{"size":696,"mtime":1612431441146,"results":"720","hashOfConfig":"434"},{"size":1049,"mtime":1612431441146,"results":"721","hashOfConfig":"434"},{"size":2980,"mtime":1612431441145,"results":"722","hashOfConfig":"434"},{"size":1042,"mtime":1612431441145,"results":"723","hashOfConfig":"434"},{"size":1069,"mtime":1612431441139,"results":"724","hashOfConfig":"434"},{"size":212,"mtime":1612431441147,"results":"725","hashOfConfig":"434"},{"size":2758,"mtime":1612431441024,"results":"726","hashOfConfig":"434"},{"size":2344,"mtime":1612431441014,"results":"727","hashOfConfig":"434"},{"size":1600,"mtime":1612431441015,"results":"728","hashOfConfig":"434"},{"size":6051,"mtime":1612431441020,"results":"729","hashOfConfig":"434"},{"size":3162,"mtime":1612431441023,"results":"730","hashOfConfig":"434"},{"size":402,"mtime":1612431440395,"results":"731","hashOfConfig":"434"},{"size":5751,"mtime":1612431440477,"results":"732","hashOfConfig":"434"},{"size":2349,"mtime":1612431440399,"results":"733","hashOfConfig":"434"},{"size":5251,"mtime":1612431440399,"results":"734","hashOfConfig":"434"},{"size":4946,"mtime":1612431440483,"results":"735","hashOfConfig":"434"},{"size":3199,"mtime":1612431440396,"results":"736","hashOfConfig":"434"},{"size":3593,"mtime":1612431440393,"results":"737","hashOfConfig":"434"},{"size":3987,"mtime":1612431438279,"results":"738","hashOfConfig":"434"},{"size":3603,"mtime":1612431440509,"results":"739","hashOfConfig":"434"},{"size":3801,"mtime":1612431440509,"results":"740","hashOfConfig":"434"},{"size":2340,"mtime":1612431440510,"results":"741","hashOfConfig":"434"},{"size":3786,"mtime":1612431440511,"results":"742","hashOfConfig":"434"},{"size":3773,"mtime":1612431440507,"results":"743","hashOfConfig":"434"},{"size":3810,"mtime":1612431440508,"results":"744","hashOfConfig":"434"},{"size":4466,"mtime":1612431440475,"results":"745","hashOfConfig":"434"},{"size":5352,"mtime":1612431438310,"results":"746","hashOfConfig":"434"},{"size":3053,"mtime":1612431440396,"results":"747","hashOfConfig":"434"},{"size":5367,"mtime":1612431440400,"results":"748","hashOfConfig":"434"},{"size":5599,"mtime":1612431440414,"results":"749","hashOfConfig":"434"},{"size":2481,"mtime":1612431440415,"results":"750","hashOfConfig":"434"},{"size":6801,"mtime":1612431438348,"results":"751","hashOfConfig":"434"},{"size":592,"mtime":1612431440473,"results":"752","hashOfConfig":"434"},{"size":2339,"mtime":1612431441006,"results":"753","hashOfConfig":"434"},{"size":3442,"mtime":1612431440468,"results":"754","hashOfConfig":"434"},{"size":2627,"mtime":1612431440468,"results":"755","hashOfConfig":"434"},{"size":8337,"mtime":1612431440375,"results":"756","hashOfConfig":"434"},{"size":2758,"mtime":1612431440335,"results":"757","hashOfConfig":"434"},{"size":2108,"mtime":1612431440335,"results":"758","hashOfConfig":"434"},{"size":14148,"mtime":1612431440324,"results":"759","hashOfConfig":"434"},{"size":1034,"mtime":1612431440350,"results":"760","hashOfConfig":"434"},{"size":1600,"mtime":1612431440327,"results":"761","hashOfConfig":"434"},{"size":616,"mtime":1612431440322,"results":"762","hashOfConfig":"434"},{"size":2841,"mtime":1612431440326,"results":"763","hashOfConfig":"434"},{"size":6051,"mtime":1612431440331,"results":"764","hashOfConfig":"434"},{"size":3257,"mtime":1612431440334,"results":"765","hashOfConfig":"434"},{"size":2614,"mtime":1612431440377,"results":"766","hashOfConfig":"434"},{"size":2618,"mtime":1612431440378,"results":"767","hashOfConfig":"434"},{"size":1769,"mtime":1612431438345,"results":"768","hashOfConfig":"434"},{"size":1719,"mtime":1612431438326,"results":"769","hashOfConfig":"434"},{"size":6261,"mtime":1612431440373,"results":"770","hashOfConfig":"434"},{"size":3046,"mtime":1612431440378,"results":"771","hashOfConfig":"434"},{"size":1949,"mtime":1612431438317,"results":"772","hashOfConfig":"434"},{"size":3057,"mtime":1612431440375,"results":"773","hashOfConfig":"434"},{"size":1656,"mtime":1612431438282,"results":"774","hashOfConfig":"434"},{"size":1330,"mtime":1612431438337,"results":"775","hashOfConfig":"434"},{"size":1746,"mtime":1612431438277,"results":"776","hashOfConfig":"434"},{"size":1440,"mtime":1612431438303,"results":"777","hashOfConfig":"434"},{"size":4983,"mtime":1612431439465,"results":"778","hashOfConfig":"434"},{"size":4601,"mtime":1612431439473,"results":"779","hashOfConfig":"434"},{"size":1240,"mtime":1612431439516,"results":"780","hashOfConfig":"434"},{"size":3046,"mtime":1612431439507,"results":"781","hashOfConfig":"434"},{"size":1232,"mtime":1612431439509,"results":"782","hashOfConfig":"434"},{"size":3039,"mtime":1612431439512,"results":"783","hashOfConfig":"434"},{"size":5367,"mtime":1612431440511,"results":"784","hashOfConfig":"434"},{"size":408,"mtime":1612431438335,"results":"785","hashOfConfig":"434"},{"size":16068,"mtime":1612431440372,"results":"786","hashOfConfig":"434"},{"size":2372,"mtime":1612431440316,"results":"787","hashOfConfig":"434"},{"size":157,"mtime":1612431438338,"results":"788","hashOfConfig":"434"},{"size":11735,"mtime":1612431439467,"results":"789","hashOfConfig":"434"},{"size":2610,"mtime":1612431439467,"results":"790","hashOfConfig":"434"},{"size":5758,"mtime":1612431438766,"results":"791","hashOfConfig":"434"},{"size":9947,"mtime":1612431438766,"results":"792","hashOfConfig":"434"},{"size":4639,"mtime":1612431438767,"results":"793","hashOfConfig":"434"},{"size":3468,"mtime":1612431438848,"results":"794","hashOfConfig":"434"},{"size":2058,"mtime":1612431438809,"results":"795","hashOfConfig":"434"},{"size":2529,"mtime":1612431438815,"results":"796","hashOfConfig":"434"},{"size":1241,"mtime":1612431438767,"results":"797","hashOfConfig":"434"},{"size":4007,"mtime":1612431438849,"results":"798","hashOfConfig":"434"},{"size":6128,"mtime":1612431439503,"results":"799","hashOfConfig":"434"},{"size":1639,"mtime":1612431439508,"results":"800","hashOfConfig":"434"},{"size":1682,"mtime":1612431438850,"results":"801","hashOfConfig":"434"},{"size":2877,"mtime":1612431438849,"results":"802","hashOfConfig":"434"},{"size":5162,"mtime":1612431438852,"results":"803","hashOfConfig":"434"},{"size":4611,"mtime":1612431438850,"results":"804","hashOfConfig":"434"},{"size":2362,"mtime":1612431438848,"results":"805","hashOfConfig":"434"},{"size":4245,"mtime":1612431438847,"results":"806","hashOfConfig":"434"},{"size":3942,"mtime":1612431438853,"results":"807","hashOfConfig":"434"},{"size":1772,"mtime":1612431439471,"results":"808","hashOfConfig":"434"},{"size":1456,"mtime":1612431438395,"results":"809","hashOfConfig":"434"},{"size":3091,"mtime":1612431438815,"results":"810","hashOfConfig":"434"},{"size":8673,"mtime":1612431438817,"results":"811","hashOfConfig":"434"},{"size":22090,"mtime":1612431439115,"results":"812","hashOfConfig":"434"},{"size":1671,"mtime":1612431438347,"results":"813","hashOfConfig":"434"},{"size":1516,"mtime":1612431438853,"results":"814","hashOfConfig":"434"},{"size":2554,"mtime":1612431439469,"results":"815","hashOfConfig":"434"},{"size":7210,"mtime":1612431439469,"results":"816","hashOfConfig":"434"},{"size":787,"mtime":1612431439470,"results":"817","hashOfConfig":"434"},{"size":2261,"mtime":1612431438852,"results":"818","hashOfConfig":"434"},{"size":1936,"mtime":1612431438814,"results":"819","hashOfConfig":"434"},{"size":4177,"mtime":1612431438814,"results":"820","hashOfConfig":"434"},{"size":1866,"mtime":1612431438809,"results":"821","hashOfConfig":"434"},{"size":7223,"mtime":1612431439469,"results":"822","hashOfConfig":"434"},{"size":1851,"mtime":1612431438769,"results":"823","hashOfConfig":"434"},{"size":4694,"mtime":1612506282410,"results":"824","hashOfConfig":"434"},{"size":4678,"mtime":1612506220835,"results":"825","hashOfConfig":"434"},{"size":4690,"mtime":1612506261362,"results":"826","hashOfConfig":"434"},{"size":3444,"mtime":1612445530933,"results":"827","hashOfConfig":"434"},{"size":4695,"mtime":1612506237480,"results":"828","hashOfConfig":"434"},{"size":3763,"mtime":1612445529827,"results":"829","hashOfConfig":"434"},{"size":2663,"mtime":1612445531302,"results":"830","hashOfConfig":"434"},{"size":2297,"mtime":1612445531409,"results":"831","hashOfConfig":"434"},{"size":6030,"mtime":1612445530301,"results":"832","hashOfConfig":"434"},{"size":2289,"mtime":1612506301928,"results":"833","hashOfConfig":"434"},{"size":4565,"mtime":1612508924140,"results":"834","hashOfConfig":"434"},{"size":3085,"mtime":1612445531391,"results":"835","hashOfConfig":"434"},{"size":5370,"mtime":1612445530963,"results":"836","hashOfConfig":"434"},{"size":8679,"mtime":1612445531061,"results":"837","hashOfConfig":"434"},{"size":2567,"mtime":1612445531947,"results":"838","hashOfConfig":"434"},{"size":2297,"mtime":1612445531936,"results":"839","hashOfConfig":"434"},{"size":3782,"mtime":1612445531863,"results":"840","hashOfConfig":"434"},{"size":8679,"mtime":1612445531921,"results":"841","hashOfConfig":"434"},{"size":3085,"mtime":1612445531934,"results":"842","hashOfConfig":"434"},{"size":3440,"mtime":1612507248707,"results":"843","hashOfConfig":"434"},{"size":3444,"mtime":1612507273913,"results":"844","hashOfConfig":"434"},{"size":3444,"mtime":1612507262169,"results":"845","hashOfConfig":"434"},{"size":3876,"mtime":1612445531902,"results":"846","hashOfConfig":"434"},{"size":3774,"mtime":1612445531845,"results":"847","hashOfConfig":"434"},{"size":2289,"mtime":1612508471821,"results":"848","hashOfConfig":"434"},{"size":4990,"mtime":1612445531712,"results":"849","hashOfConfig":"434"},{"size":4996,"mtime":1612445531528,"results":"850","hashOfConfig":"434"},{"size":5187,"mtime":1612508820166,"results":"851","hashOfConfig":"434"},{"size":3179,"mtime":1612445531518,"results":"852","hashOfConfig":"434"},{"size":5370,"mtime":1612445531905,"results":"853","hashOfConfig":"434"},{"size":2714,"mtime":1612445531748,"results":"854","hashOfConfig":"434"},{"size":3179,"mtime":1612445531694,"results":"855","hashOfConfig":"434"},{"size":3439,"mtime":1612508920726,"results":"856","hashOfConfig":"434"},{"size":2289,"mtime":1612508950542,"results":"857","hashOfConfig":"434"},{"size":3670,"mtime":1612445531720,"results":"858","hashOfConfig":"434"},{"size":5379,"mtime":1612509061910,"results":"859","hashOfConfig":"434"},{"size":5370,"mtime":1612445531774,"results":"860","hashOfConfig":"434"},{"size":4888,"mtime":1612445531604,"results":"861","hashOfConfig":"434"},{"size":3143,"mtime":1612445531621,"results":"862","hashOfConfig":"434"},{"size":2289,"mtime":1612509024028,"results":"863","hashOfConfig":"434"},{"size":3749,"mtime":1612445531558,"results":"864","hashOfConfig":"434"},{"size":5370,"mtime":1612445531625,"results":"865","hashOfConfig":"434"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},"1c16dbg",{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"868"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"868"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"868"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"868"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"868"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"868"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"868"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"868"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"868"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"868"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"868"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"868"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"868"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"868"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"868"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"868"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"868"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"868"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"947","usedDeprecatedRules":"868"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"950","usedDeprecatedRules":"868"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"953","usedDeprecatedRules":"868"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"868"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"961","usedDeprecatedRules":"868"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"964","usedDeprecatedRules":"868"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"967","usedDeprecatedRules":"868"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"976","usedDeprecatedRules":"868"},{"filePath":"977","messages":"978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"981","usedDeprecatedRules":"868"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984","usedDeprecatedRules":"868"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"989","usedDeprecatedRules":"868"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"868"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"999","usedDeprecatedRules":"868"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1006","usedDeprecatedRules":"868"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009","usedDeprecatedRules":"868"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012","usedDeprecatedRules":"868"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019","usedDeprecatedRules":"868"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1030","usedDeprecatedRules":"868"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1045","usedDeprecatedRules":"868"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048","usedDeprecatedRules":"868"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055","usedDeprecatedRules":"868"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062","usedDeprecatedRules":"868"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067","usedDeprecatedRules":"868"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070","usedDeprecatedRules":"868"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075","usedDeprecatedRules":"868"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"868"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081","usedDeprecatedRules":"868"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1084","usedDeprecatedRules":"868"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1089","usedDeprecatedRules":"868"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"868"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099","usedDeprecatedRules":"868"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104","usedDeprecatedRules":"868"},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1107","usedDeprecatedRules":"868"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"868"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1115","usedDeprecatedRules":"868"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1118","usedDeprecatedRules":"868"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1123","usedDeprecatedRules":"868"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1126","usedDeprecatedRules":"868"},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1131","usedDeprecatedRules":"868"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"868"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145","usedDeprecatedRules":"868"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1150","usedDeprecatedRules":"868"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1163","usedDeprecatedRules":"868"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1182","messages":"1183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1224","messages":"1225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1226","messages":"1227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1232","messages":"1233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1236","usedDeprecatedRules":"868"},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1239","usedDeprecatedRules":"868"},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1242","usedDeprecatedRules":"868"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1245","usedDeprecatedRules":"868"},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1248","usedDeprecatedRules":"868"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255","usedDeprecatedRules":"868"},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258","usedDeprecatedRules":"868"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261","usedDeprecatedRules":"868"},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1264","usedDeprecatedRules":"868"},{"filePath":"1265","messages":"1266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1269","messages":"1270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1273","usedDeprecatedRules":"868"},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1276","usedDeprecatedRules":"868"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1287","usedDeprecatedRules":"868"},{"filePath":"1288","messages":"1289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1290","messages":"1291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1292","messages":"1293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"868"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1299","messages":"1300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1301","messages":"1302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1319","messages":"1320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1325","messages":"1326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1327","messages":"1328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1333","messages":"1334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1335","usedDeprecatedRules":"868"},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"868"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1345","usedDeprecatedRules":"868"},{"filePath":"1346","messages":"1347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1348","messages":"1349","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1350","usedDeprecatedRules":"868"},{"filePath":"1351","messages":"1352","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1353","usedDeprecatedRules":"868"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1356","usedDeprecatedRules":"868"},{"filePath":"1357","messages":"1358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1359","messages":"1360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1361","usedDeprecatedRules":"868"},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1366","messages":"1367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"868"},{"filePath":"1369","messages":"1370","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1350","usedDeprecatedRules":"868"},{"filePath":"1371","messages":"1372","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1373","usedDeprecatedRules":"868"},{"filePath":"1374","messages":"1375","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1376","usedDeprecatedRules":"868"},{"filePath":"1377","messages":"1378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1379","messages":"1380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1381","messages":"1382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1383","messages":"1384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1385","messages":"1386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"868"},{"filePath":"1388","messages":"1389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1390","usedDeprecatedRules":"868"},{"filePath":"1391","messages":"1392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1393","usedDeprecatedRules":"868"},{"filePath":"1394","messages":"1395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"868"},{"filePath":"1397","messages":"1398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1399","messages":"1400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1401","messages":"1402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1403","messages":"1404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1405","messages":"1406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1407","messages":"1408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1409","messages":"1410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1411","messages":"1412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1413","messages":"1414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1415","messages":"1416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1417","messages":"1418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1419","messages":"1420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1421","messages":"1422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1423","messages":"1424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1376","usedDeprecatedRules":"868"},{"filePath":"1425","messages":"1426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1427","messages":"1428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1429","messages":"1430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1431","usedDeprecatedRules":"868"},{"filePath":"1432","messages":"1433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1434","messages":"1435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1436","messages":"1437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1438","messages":"1439","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1440","usedDeprecatedRules":"868"},{"filePath":"1441","messages":"1442","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1443","usedDeprecatedRules":"868"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1446","messages":"1447","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448","usedDeprecatedRules":"868"},{"filePath":"1449","messages":"1450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1451","usedDeprecatedRules":"868"},{"filePath":"1452","messages":"1453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1454","messages":"1455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1456","messages":"1457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1458","messages":"1459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1460","messages":"1461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1462","messages":"1463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1464","messages":"1465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1466","messages":"1467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1468","messages":"1469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1470","messages":"1471","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1472","usedDeprecatedRules":"868"},{"filePath":"1473","messages":"1474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1475","messages":"1476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1477","messages":"1478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1472","usedDeprecatedRules":"868"},{"filePath":"1479","messages":"1480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1481","messages":"1482","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1483","usedDeprecatedRules":"868"},{"filePath":"1484","messages":"1485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1486","messages":"1487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1488","messages":"1489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1490","messages":"1491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1492","usedDeprecatedRules":"868"},{"filePath":"1493","messages":"1494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1236","usedDeprecatedRules":"868"},{"filePath":"1495","messages":"1496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1239","usedDeprecatedRules":"868"},{"filePath":"1497","messages":"1498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1242","usedDeprecatedRules":"868"},{"filePath":"1499","messages":"1500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1245","usedDeprecatedRules":"868"},{"filePath":"1501","messages":"1502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1503","messages":"1504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1505","messages":"1506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1507","messages":"1508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258","usedDeprecatedRules":"868"},{"filePath":"1509","messages":"1510","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1511","messages":"1512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1513","messages":"1514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1515","messages":"1516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1517","messages":"1518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1519","messages":"1520","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"868"},{"filePath":"1522","messages":"1523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1524","messages":"1525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1526","messages":"1527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1528","messages":"1529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1530","messages":"1531","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"868"},{"filePath":"1532","messages":"1533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1534","messages":"1535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1536","messages":"1537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1538","messages":"1539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1540","messages":"1541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1542","messages":"1543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1544","messages":"1545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1546","messages":"1547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1548","messages":"1549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1550","messages":"1551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1552","messages":"1553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1554","messages":"1555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1556","messages":"1557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1558","messages":"1559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1560","messages":"1561","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1431","usedDeprecatedRules":"868"},{"filePath":"1562","messages":"1563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1564","messages":"1565","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1440","usedDeprecatedRules":"868"},{"filePath":"1566","messages":"1567","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448","usedDeprecatedRules":"868"},{"filePath":"1568","messages":"1569","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1570","usedDeprecatedRules":"868"},{"filePath":"1571","messages":"1572","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1573","usedDeprecatedRules":"868"},{"filePath":"1574","messages":"1575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1576","messages":"1577","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1393","usedDeprecatedRules":"868"},{"filePath":"1578","messages":"1579","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1390","usedDeprecatedRules":"868"},{"filePath":"1580","messages":"1581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1582","messages":"1583","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"868"},{"filePath":"1584","messages":"1585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1586","messages":"1587","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"868"},{"filePath":"1588","messages":"1589","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1590","usedDeprecatedRules":"868"},{"filePath":"1591","messages":"1592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1593","messages":"1594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1492","usedDeprecatedRules":"868"},{"filePath":"1595","messages":"1596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1597","messages":"1598","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1599","usedDeprecatedRules":"868"},{"filePath":"1600","messages":"1601","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1602","usedDeprecatedRules":"868"},{"filePath":"1603","messages":"1604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1605","messages":"1606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1607","messages":"1608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1609","messages":"1610","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1611","usedDeprecatedRules":"868"},{"filePath":"1612","messages":"1613","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1614","usedDeprecatedRules":"868"},{"filePath":"1615","messages":"1616","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1617","usedDeprecatedRules":"868"},{"filePath":"1618","messages":"1619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1620","messages":"1621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1622","messages":"1623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1624","messages":"1625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1626","messages":"1627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1628","messages":"1629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1630","messages":"1631","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1632","usedDeprecatedRules":"868"},{"filePath":"1633","messages":"1634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1635","messages":"1636","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1637","usedDeprecatedRules":"868"},{"filePath":"1638","messages":"1639","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1640","usedDeprecatedRules":"868"},{"filePath":"1641","messages":"1642","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1643","usedDeprecatedRules":"868"},{"filePath":"1644","messages":"1645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1646","messages":"1647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1648","messages":"1649","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1650","usedDeprecatedRules":"868"},{"filePath":"1651","messages":"1652","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1653","usedDeprecatedRules":"868"},{"filePath":"1654","messages":"1655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1656","messages":"1657","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1658","usedDeprecatedRules":"868"},{"filePath":"1659","messages":"1660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1661","messages":"1662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1663","messages":"1664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1665","messages":"1666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1667","messages":"1668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1669","messages":"1670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1671","messages":"1672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1673","messages":"1674","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1675","usedDeprecatedRules":"868"},{"filePath":"1676","messages":"1677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1678","messages":"1679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1680","messages":"1681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1682","messages":"1683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1684","messages":"1685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1686","messages":"1687","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1688","usedDeprecatedRules":"868"},{"filePath":"1689","messages":"1690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1691","messages":"1692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1693","messages":"1694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1695","messages":"1696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1697","usedDeprecatedRules":"868"},{"filePath":"1698","messages":"1699","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1700","usedDeprecatedRules":"868"},{"filePath":"1701","messages":"1702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1703","messages":"1704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1705","messages":"1706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1707","messages":"1708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1709","messages":"1710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1711","messages":"1712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1713","messages":"1714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1715","messages":"1716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1717","messages":"1718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1719","messages":"1720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1721","messages":"1722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1723","messages":"1724","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1725","usedDeprecatedRules":"868"},{"filePath":"1726","messages":"1727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1728","messages":"1729","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1730","usedDeprecatedRules":"868"},{"filePath":"1731","messages":"1732","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1733","usedDeprecatedRules":"868"},{"filePath":"1734","messages":"1735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1736","messages":"1737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1738","messages":"1739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1740","messages":"1741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1742","messages":"1743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1744","messages":"1745","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1746","usedDeprecatedRules":"868"},{"filePath":"1747","messages":"1748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1749","messages":"1750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1751","messages":"1752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1753","messages":"1754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1755","messages":"1756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1757","messages":"1758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1759","messages":"1760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1761","messages":"1762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1763","messages":"1764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1765","messages":"1766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1767","messages":"1768","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1769","usedDeprecatedRules":"868"},{"filePath":"1770","messages":"1771","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1772","usedDeprecatedRules":"868"},{"filePath":"1773","messages":"1774","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1775","usedDeprecatedRules":"868"},{"filePath":"1776","messages":"1777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1778","messages":"1779","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1780","usedDeprecatedRules":"868"},{"filePath":"1781","messages":"1782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1783","messages":"1784","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1373","usedDeprecatedRules":"868"},{"filePath":"1785","messages":"1786","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1350","usedDeprecatedRules":"868"},{"filePath":"1787","messages":"1788","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"868"},{"filePath":"1789","messages":"1790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1791","messages":"1792","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1793","messages":"1794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1795","messages":"1796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1797","messages":"1798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1799","messages":"1800","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145","usedDeprecatedRules":"868"},{"filePath":"1801","messages":"1802","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1350","usedDeprecatedRules":"868"},{"filePath":"1803","messages":"1804","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1353","usedDeprecatedRules":"868"},{"filePath":"1805","messages":"1806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1807","messages":"1808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"868"},{"filePath":"1809","messages":"1810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1811","messages":"1812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1813","messages":"1814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1815","messages":"1816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1817","messages":"1818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1819","messages":"1820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1821","messages":"1822","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1823","messages":"1824","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1825","messages":"1826","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1827","usedDeprecatedRules":"868"},{"filePath":"1828","messages":"1829","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1830","messages":"1831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1832","messages":"1833","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1834","messages":"1835","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1836","messages":"1837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1838","messages":"1839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1840","messages":"1841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1842","messages":"1843","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1844","messages":"1845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1846","messages":"1847","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1848","messages":"1849","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1850","messages":"1851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1852","messages":"1853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1854","messages":"1855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c:\\almus\\gbc_oms\\frontend\\src\\index.js",[],["1856","1857"],"c:\\almus\\gbc_oms\\frontend\\src\\store.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\App.js",["1858"],"c:\\almus\\gbc_oms\\frontend\\src\\theme\\ThemeWrapper.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\test\\StudentLog.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\test\\BursarLog.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\auth\\Login.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\auth.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\landing\\LandingPage.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Profile\\CompanyProfile.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogPage.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminCurrencies.js",["1859","1860"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getCurrencies, addCurrency, editCurrency } from '../../actions/currencies';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddCurrency from './AddCurrency';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'symbol', label: 'SYMBOL' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminCurrencies = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCurrencies();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (currency, resetForm) => {\r\n      if (currency.id > 0)\r\n        props.editCurrency(currency.id, currency)    \r\n      else\r\n        props.addCurrency(currency)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.symbol}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCurrency\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.currencies.currencies,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getCurrencies, addCurrency, editCurrency} ) \r\n  (AdminCurrencies);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AccountsAdminView.js",["1861","1862"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAccounts, editAccount, addAccount } from '../../actions/accounts';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddAccount from './AddAccount';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'account_number', label: 'NUMBER' },\r\n  { id: 'balance', label: 'BALANCE' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'balance_sheet_category', label: 'CATEGORY' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AccountsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAccounts();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (account, resetForm) => {\r\n      if (account.id > 0)\r\n        props.editAccount(account.id, account)    \r\n      else\r\n        props.addAccount(account)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.account_number}</TableCell>\r\n                          <TableCell>{item.balance}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.balance_sheet_category}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Account Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddAccount\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.accounts.accounts\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAccounts, editAccount, addAccount} ) \r\n  (AccountsAdminView);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminTaxes.js",["1863","1864","1865"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getTaxes, addTax, editTax } from '../../actions/taxes';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddTax from './AddTax';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\nimport { GiConsoleController } from \"react-icons/gi\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'rate', label: 'RATE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AccountsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getTaxes();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (tax, resetForm) => {\r\n      if (tax.id > 0)\r\n        props.editTax(tax.id, tax)    \r\n      else\r\n        props.addTax(tax)\r\n        console.log(tax)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.rate}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Tax Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddTax\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.taxes.taxes\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getTaxes, addTax, editTax} ) \r\n  (AccountsAdminView);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminInactiveAccounts.js",["1866","1867"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getInActiveAccounts, editInactiveAccount, addInActiveAccount } from '../../actions/inactiveaccounts';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddAccount from './AddAccount';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'account_number', label: 'NUMBER' },\r\n  { id: 'balance', label: 'BALANCE' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'balance_sheet_category', label: 'CATEGORY' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst InActiveAccountsAdminView = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getInActiveAccounts();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (account, resetForm) => {\r\n      if (account.id > 0)\r\n        props.editInactiveAccount(account.id, account)    \r\n      else\r\n        props.addInActiveAccount(account)\r\n        console.log(account)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Account\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.account_number}</TableCell>\r\n                          <TableCell>{item.balance}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.balance_sheet_category}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Account Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddAccount\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.inactiveaccounts.inactiveaccounts\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getInActiveAccounts, editInactiveAccount, addInActiveAccount} ) \r\n  (InActiveAccountsAdminView);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminLedger.js",["1868","1869"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getLedgers, addLedger, editLedger } from '../../actions/ledgers';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddLedger from './AddLedger';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminLedgers = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getLedgers();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (ledger, resetForm) => {\r\n    if (ledger.id > 0)\r\n        props.editLedger(ledger.id, ledger)    \r\n      else\r\n        props.addLedger(ledger)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Ledger\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Ledger Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddLedger\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.ledgers.ledgers,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {  getLedgers, addLedger, editLedger } ) \r\n  (AdminLedgers);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AdminWorkBooks.js",["1870","1871"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getWorkbooks, addWorkbook, editWorkbook } from '../../actions/workbooks';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddWorkBook from './AddWorkBook';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminWorkBooks = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getWorkbooks();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (workbook, resetForm) => {\r\n      if (workbook.id > 0)\r\n        props.editWorkbook(workbook.id, workbook)    \r\n      else\r\n        props.addWorkbook(workbook)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search WorkBook\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"WorkBook Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddWorkBook\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.workbooks.workbooks\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getWorkbooks, addWorkbook, editWorkbook} ) \r\n  (AdminWorkBooks);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AssetsAdminView.js",["1872","1873"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAssets, addAsset, editAsset} from '../../actions/assets';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddAsset from './AddAsset';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'reference_number', label: 'CODE' },\r\n  { id: 'initial_value', label: 'INITIAL VALUE' },\r\n  { id: 'category', label: 'CATEGORY' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AssetsAdminView= props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAssets();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const addOrEdit = (asset, resetForm) => {\r\n      if (asset.id > 0)\r\n        props.editAsset(asset.id, asset)    \r\n      else\r\n        props.addAsset(asset)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Journal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.reference_number}</TableCell>\r\n                          <TableCell>{item.initial_value}</TableCell>\r\n                          <TableCell>{item.category}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Asset Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddAsset\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.assets.assets,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getAssets, addAsset, editAsset} ) \r\n  (AssetsAdminView);\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\curriculum\\Curriculum.js",["1874","1875","1876"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getCurriculums, addCurriculum, editCurriculum } from '../../actions/curriculums';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddCurriculum from './AddCurriculum';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'code', label: 'CODE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst FeeItView = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCurriculums();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (curriculum, resetForm) => {\r\n      if (curriculum.id > 0)\r\n        props.editCurriculum(curriculum.id, curriculum)    \r\n      else\r\n        props.addCurriculum(curriculum)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Curriculum\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.code}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Curriculum Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCurriculum\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.curriculums.curriculums\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getCurriculums, addCurriculum, editCurriculum} ) \r\n  (FeeItView);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\curriculum\\SubjectsAdminView.js",["1877","1878","1879"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getSubjects, addSubject, editSubject } from '../../actions/curriculums';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddSubject from './AddSubject';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'subject_code', label: 'CODE' },\r\n  { id: 'curriculum', label: 'CURRICULUM' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst SubjectAdminView = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getSubjects();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (subject, resetForm) => {\r\n      if (subject.id > 0)\r\n        props.editSubject(subject.id, subject)    \r\n      else\r\n        props.addSubject(subject)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Curriculum\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.subject_code}</TableCell>\r\n                          <TableCell>{item.curriculum}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Curriculum Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddSubject\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.curriculums.subjects,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getSubjects, addSubject, editSubject} ) \r\n  (SubjectAdminView);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\classes\\AdminStream.js",["1880","1881"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getStreams, addStream, editStream } from '../../actions/classes';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddStream from './AddStream';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'grade', label: 'NAME' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStream = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStreams();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (stream, resetForm) => {\r\n      if (stream.id > 0)\r\n        props.editStream(stream.id, stream)    \r\n      else\r\n        props.addStream(stream)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Class\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.grade}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Stream Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddStream\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.classes.streams,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getStreams, addStream, editStream } ) \r\n  (AdminStream);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\dashboard\\InformationTechnologyHome.js",["1882","1883","1884","1885","1886","1887"],"import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport brand from '../../api/dummy/brand';\r\nimport { Helmet } from 'react-helmet';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SliderWidget from \"../Widget/SliderWidget\";\r\nimport PerformanceChartWidget from \"../Widget/PerformanceChartWidget\";\r\nimport CounterIconsWidget from \"../Widget/CounterIconsWidget\";\r\nimport DateWidget from '../Widget/DateWidget';\r\nimport TaskWidget from '../Widget/TaskWidget';\r\nimport WeatherWidget from '../Widget/WeatherWidget';\r\nimport ContactWidget from '../Widget/ContactWidget';\r\nimport TimelineWidget from '../Widget/TimelineWidget';\r\nimport CalculatorWidget from '../Widget/CalculatorWidget';\r\nimport InformationTechnologyLayout from '../layout/InformationTechnologyLayout'\r\n\r\n\r\nimport styles from './dashboard-jss';\r\n\r\n\r\nclass InformationTechnologyHome extends PureComponent {\r\n  render() {\r\n    const title = brand.name + ' - Personal Dashboard';\r\n    const description = brand.desc;\r\n    const { classes } = this.props;\r\n    return (\r\n      <InformationTechnologyLayout>\r\n        <Helmet>\r\n          <title>{title}</title>\r\n          <meta name=\"description\" content={description} />\r\n          <meta property=\"og:title\" content={title} />\r\n          <meta property=\"og:description\" content={description} />\r\n          <meta property=\"twitter:title\" content={title} />\r\n          <meta property=\"twitter:description\" content={description} />\r\n        </Helmet>\r\n        {/* 1st Section */}\r\n        <Grid container spacing={3} className={classes.root}>\r\n          <Grid item md={6} xs={12}>\r\n            <CounterIconsWidget />\r\n          </Grid>\r\n          <Grid item md={6} sm={12} xs={12}>\r\n            <div className={classes.sliderWrap}>\r\n              <SliderWidget />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider className={classes.divider} />\r\n        {/* 2nd Section */}\r\n        <Grid container spacing={2} className={classes.root}>\r\n          <Grid item xs={12}>\r\n            <PerformanceChartWidget />\r\n          </Grid>\r\n        </Grid>\r\n        <Divider className={classes.divider} />\r\n        <CalculatorWidget />\r\n      </InformationTechnologyLayout>\r\n    );\r\n  }\r\n}\r\n\r\nInformationTechnologyHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InformationTechnologyHome);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\classes\\AdminClass.js",["1888","1889"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getClasses, addClass, editClass } from '../../actions/classes';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddClass from './AddClass';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'max_population', label: 'REQUIRED POPULATION' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'year', label: 'YEAR' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminClass = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getClasses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (classi, resetForm) => {\r\n      if (classi.id > 0)\r\n        props.editClass(classi.id, classi)    \r\n      else\r\n        props.addClass(classi)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Class\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.max_population}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>{item.year}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddClass\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.classes.classes,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getClasses, addClass, editClass } ) \r\n  (AdminClass);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\fees\\Fees.js",["1890","1891","1892"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getFees, addFee, editFee } from '../../actions/fees';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddFee from './AddFee';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'amount', label: 'AMOUNT' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'targets', label: 'TARGETS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst FeeItView = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getFees();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editFee(fee.id, fee)    \r\n      else\r\n        props.addFee(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.amount}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.targets}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddFee\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.fees.fees\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getFees, addFee, editFee} ) \r\n  (FeeItView);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\staff\\AdminPrincipals.js",["1893","1894","1895","1896"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminPrincipals, addPrincipal } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddBursar from './AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminPrincipals = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {token, email} = props;\r\n\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n          props.getAdminPrincipals(token);\r\n        // setRecords(adminprincipals)\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addPrincipal(bursar)       //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  //\r\n  //\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Principal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Principal Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminprincipals,\r\n    token: state.auth.token,\r\n    email: state.auth.email,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminPrincipals, addPrincipal} )\r\n  (AdminPrincipals);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\staff\\AdminTeachers.js",["1897","1898","1899"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminTeachers, addTeacher } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from './AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminTeachers = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminTeachers();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addTeacher(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Principal\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Principal Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminteachers,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminTeachers, addTeacher} ) \r\n  (AdminTeachers);\r\n\r\n  \r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\AdminStudents.js",["1900","1901"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudents, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from '../staff/AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudents = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudents();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addBursar(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/students/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Teacher\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <PermIdentityIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"BURSAR Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminstudents,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudents, addBursar} ) \r\n  (AdminStudents);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\StudentProfile.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\staff\\AdminBursars.js",["1902","1903","1904"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminBursars, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from './AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminBursars = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminBursars();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addBursar(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Teacher\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"BURSAR Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminbursars,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminBursars, addBursar} ) \r\n  (AdminBursars);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AdminApprovedAdmissions.js",["1905","1906","1907"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAcceptedAdmissions, addAdmission, editAcceptedAdmission } from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminApprovedAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAcceptedAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editFee(fee.id, fee)    \r\n      else\r\n        props.addFee(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.acceptedadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAcceptedAdmissions, addAdmission, editAcceptedAdmission} ) \r\n  (AdminApprovedAdmissions);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AdminMeetingAdmissions.js",["1908","1909","1910"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getMeetingAdmissions, addAdmission, editMeetingAdmission} from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminMeetingAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getMeetingAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editMeetingAdmission(fee.id, fee)    \r\n      else\r\n        props.addAdmission(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.meetingadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getMeetingAdmissions, addAdmission, editMeetingAdmission} ) \r\n  (AdminMeetingAdmissions);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AdminRejectedAdmissions.js",["1911","1912","1913"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getRejectedAdmissions, addAdmission, editRejectedAdmission } from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminRejectedAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getRejectedAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editRejectedAdmission(fee.id, fee)    \r\n      else\r\n        props.addAdmission(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.rejectedadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getRejectedAdmissions, addAdmission, editRejectedAdmission} ) \r\n  (AdminRejectedAdmissions);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AdminPendingAdmissions.js",["1914","1915","1916"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getPendingAdmissions, addAdmission, editPendingAdmission } from '../../actions/admissions';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport Apply from './AddAdmission';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'application_number', label: 'CODE' },\r\n  { id: 'student', label: 'APPLICANT' }, \r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminPendingAdmissions = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getPendingAdmissions();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editPendingAdmission(fee.id, fee)    \r\n      else\r\n        props.addAdmission(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.application_number}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <Apply\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.admissions.pendingadmissions,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getPendingAdmissions, addAdmission, editPendingAdmission } ) \r\n  (AdminPendingAdmissions);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendances.js",["1917","1918"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminAttendances, editAdminAttendance, addAdminAttendance } from '../../actions/attendances';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport MarkRegister from './AddAttendance';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'date', label: 'DATE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'recorded_by', label: 'TEACHER' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminAttendances = props => {\r\n    // const [records, setRecords] = useState([])\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminAttendances();\r\n    }\r\n    console.log('mount it!');\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editAdminAttendance(fee.id, fee)    \r\n      else\r\n        props.addAdminAttendance(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/attendance/${id}`)\r\n  }\r\n\r\n  \r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.date}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.recorded_by}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Register Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <MarkRegister\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.adminattendances.adminattendances,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminAttendances, editAdminAttendance, addAdminAttendance} ) \r\n  (AdminAttendances);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminGradingTest.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentAssignments.js",["1919","1920","1921"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudentAssignments, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentAssignments = props => {\r\n    const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentAssignments();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/assignments/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentassignments,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentAssignments, addGrade, editGrade} ) \r\n  (AdminStudentAssignments);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminStudentTests.js",["1922","1923","1924"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudentTests, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentTests = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentTests();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/tests/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudenttests,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentTests, addGrade, editGrade} ) \r\n  (AdminStudentTests);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercises.js",["1925","1926","1927"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminStudentExcercises, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentExcercises = props => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentExcercises();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/excercises/${id}`)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentexcercises,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentExcercises, addGrade, editGrade} ) \r\n  (AdminStudentExcercises);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AdminAttendance.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminAssignment.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\dashboard\\TeacherHome.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendances.js",["1928","1929","1930"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../layout/TeacherLayout\";\r\nimport { getAdminAttendances, editAdminAttendance, addAdminAttendance } from '../../actions/attendances';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport MarkRegister from './AddAttendance';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'date', label: 'DATE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'recorded_by', label: 'TEACHER' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherAttendances = props => {\r\n    // const [records, setRecords] = useState([])\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminAttendances();\r\n    }\r\n    console.log('mount it!');\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editAdminAttendance(fee.id, fee)\r\n      else\r\n        props.addAdminAttendance(fee)\r\n        console.log(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/attendance/${id}`)\r\n  }\r\n\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.date}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>{item.recorded_by}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Register Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <MarkRegister\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.adminattendances.adminattendances,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminAttendances, editAdminAttendance, addAdminAttendance} )\r\n  (TeacherAttendances);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTest.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherTests.js",["1931","1932","1933"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../layout/TeacherLayout\";\r\nimport { getAdminStudentTests, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherTests = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentTests();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/tests/${id}`)\r\n  }\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Test\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudenttests,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentTests, addGrade, editGrade} ) \r\n  (TeacherTests);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\parents\\AdminParents.js",["1934","1935","1936"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../layout/InformationTechnologyLayout\";\r\nimport { getAdminParents, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddBursar from '../staff/AddBursar';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminParents = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminParents();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (bursar, resetForm) => {\r\n      if (bursar.id > 0)\r\n        console.log('gosso')\r\n      else\r\n        props.addBursar(bursar)       //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Teacher\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n              onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"BURSAR Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddBursar\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminparents,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminParents, addBursar} ) \r\n  (AdminParents);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\TeacherAttendance.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignments.js",["1937","1938","1939"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../layout/TeacherLayout\";\r\nimport { getAdminStudentAssignments, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminStudentAssignments = props => {\r\n    const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentAssignments();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/assignments/${id}`)\r\n  }\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Fee\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentassignments,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentAssignments, addGrade, editGrade} ) \r\n  (AdminStudentAssignments);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherAssignment.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercises.js",["1940","1941","1942","1943"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../layout/TeacherLayout\";\r\nimport { getAdminStudentExcercises, addGrade, editGrade } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddGrade from './AddGrade';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'total_marks', label: 'MARKS' },\r\n  { id: 'type', label: 'TYPE' },\r\n  { id: 'klass', label: 'CLASS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherStudentExcercises = props => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudentExcercises();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editGrade(fee.id, fee)    \r\n      else\r\n        props.addGrade(fee)\r\n        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/excercises/${id}`)\r\n  }\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Excercise\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.total_marks}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>{item.klass}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <BorderColorIcon fontSize=\"small\" />\r\n                                  OPEN\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Grade Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGrade\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.gradings.adminstudentexcercises,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudentExcercises, addGrade, editGrade} ) \r\n  (TeacherStudentExcercises);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TeacherExcercise.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudents.js",["1944","1945","1946"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../layout/TeacherLayout\";\r\nimport { getAdminStudents, addBursar } from '../../actions/people';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'username', label: 'USERNAME' },\r\n  { id: 'email', label: 'EMAIL' },\r\n  { id: 'type', label: 'POSITION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherStudents = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n \r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminStudents();\r\n    }\r\n    console.log('mount it!');\r\n\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n\r\n\r\n  \r\n  \r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/students/${id}`)\r\n  }\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Student\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.username}</TableCell>\r\n                          <TableCell>{item.email}</TableCell>\r\n                          <TableCell>{item.type}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\"\r\n                                  onClick={() => { handleClick(item.id) }}\r\n                                >\r\n                                  <PermIdentityIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.people.adminstudents,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getAdminStudents, addBursar} ) \r\n  (TeacherStudents);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\TeacherStudentProfile.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AdminExcercise.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminUpcomingCourses.js",["1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminUpcomingCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminUpcomingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminUpcomingCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        console.log(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/upcomingcourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.adminupcomingcourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminUpcomingCourses, addCourse, editCourse} )\r\n  (AdminUpcomingCourses);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminInactiveCourses.js",["1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminInactiveCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminUpcomingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminInactiveCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/inactivecourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.admininactivecourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminInactiveCourses, addCourse, editCourse} )\r\n  (AdminUpcomingCourses);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminOngoingCourses.js",["1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminOngoingCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminOngoingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminOngoingCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/ongoingcourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.adminongoingcourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminOngoingCourses, addCourse, editCourse} )\r\n  (AdminOngoingCourses);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminInactiveCourse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminUpcomingCourse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminFinishedCourses.js",["1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminFinishedCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst AdminOngoingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminFinishedCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/finishedcourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <InformationTechnologyLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </InformationTechnologyLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.adminfinishedcourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminFinishedCourses, addCourse, editCourse} )\r\n  (AdminOngoingCourses);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminOngoingCourse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AdminFinishedCourse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\AdminTopic.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\AdminSubTopic.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\AdminStudyNote.js",["1995"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Cover from '../../../components/SocialMedia/Cover';\r\nimport bgCover from '../../../images/petal_bg.svg';\r\nimport styles from '../../../components/SocialMedia/jss/cover-jss';\r\nimport { getStudyNote } from '../../../actions/courses';\r\nimport About from './About';\r\nimport NoteBag from './NoteBag';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nfunction TabContainer(props) {\r\n  const { children } = props;\r\n  return (\r\n    <div style={{ paddingTop: 8 * 3 }}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nclass AdminStudyNote extends React.Component {\r\n  state = {\r\n    value: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getStudyNote(this.props.match.params.id);\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const {  classes } = this.props;\r\n    const { value } = this.state;\r\n    const {note} = this.props;\r\n\r\n\r\n    return (\r\n      <NoteBag>\r\n\r\n        <Helmet>\r\n          <title>{note.title}</title>\r\n          <meta name=\"description\" content={note.title} />\r\n          <meta property=\"og:title\" content={note.title} />\r\n          <meta property=\"og:description\" content={note.title} />\r\n          <meta property=\"twitter:title\" content={note.title} />\r\n          <meta property=\"twitter:description\" content={note.title} />\r\n        </Helmet>\r\n        <Cover\r\n          coverImg={bgCover}\r\n          name={note.title}\r\n        />\r\n        <AppBar position=\"static\" className={classes.profileTab}>\r\n          <Hidden mdUp>\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              variant=\"fullWidth\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab icon={<AccountCircle />} />\r\n            </Tabs>\r\n          </Hidden>\r\n          <Hidden smDown>\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              variant=\"fullWidth\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab icon={<AccountCircle />} label=\"ABOUT\" />\r\n            </Tabs>\r\n          </Hidden>\r\n        </AppBar>\r\n        {value === 0 && <TabContainer><About data={note}/></TabContainer>}\r\n      </NoteBag >\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  force: state, // force state from reducer\r\n  note: state.courses.adminstudynote,\r\n});\r\n\r\n\r\n\r\nconst AttendanceMapped = connect(\r\n  mapStateToProps,\r\n  {getStudyNote}\r\n)(AdminStudyNote);\r\n\r\nexport default withStyles(styles)(AttendanceMapped);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\index.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\theme\\applicationTheme.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\CourseBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\NoteBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\Notes.js",["1996","1997","1998","1999"],"import React, { useEffect, useState } from \"react\"\r\nimport { getStudyNotes, addStudyNote, editStudyNote } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddNote from './AddNote';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../../components/table/useTable\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'title', label: 'TITLE' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'approval_status', label: 'APPROVAL STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst Notes = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStudyNotes(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editStudyNote(fee.id, fee)\r\n      else\r\n        props.addStudyNote(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/notes/${id}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Notes\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.title}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>{item.approval_status}</TableCell>\r\n                          <TableCell>\r\n                            <Controls.ActionButton\r\n                                color=\"primary\"\r\n                                onClick={() => { openInPopup(item) }}>\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                                EDIT\r\n                            </Controls.ActionButton>\r\n                            <Controls.ActionButton\r\n                                color=\"secondary\"\r\n                                onClick={() => { handleClick(item.id) }}\r\n                              >\r\n                                <BorderColorIcon fontSize=\"small\" />\r\n                                OPEN\r\n                            </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddNote\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.courses.adminstudynotes,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getStudyNotes, addStudyNote, editStudyNote} )\r\n  (Notes);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\Topics.js",["2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012"],"import React, { useEffect, useState } from \"react\"\r\nimport InformationTechnologyLayout from \"../../layout/InformationTechnologyLayout\";\r\nimport { getAdminTopics, addTopic, editTopic } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddTopic from './AddTopic';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchTopic from \"./SearchTopic\";\r\nimport TopicCard from \"./TopicCard\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst Topics = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminTopics(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (topic, resetForm) => {\r\n      if (topic.id > 0)\r\n        props.editTopic(topic.id, topic)\r\n      else\r\n        props.addTopic(topic)\r\n        console.log(topic)  //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/topics/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchTopic\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((topic) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={topic.id}>\r\n                    <TopicCard\r\n                      list={listView === 'list'}\r\n                      full_name={topic.title}\r\n                      description={topic.assessment_overview}\r\n                      status={topic.id}\r\n                      detailOpen={() => handleClick(topic.id)}\r\n                      editItem={() => openInPopup(topic)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Topic Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddTopic\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.admintopics,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminTopics, addTopic, editTopic} )\r\n  (Topics);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\SubTopicBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\SubTopics.js",["2013","2014","2015","2016"],"import React, { useEffect, useState } from \"react\"\r\nimport { getAdminSubTopics, addSubTopic, editSubTopic} from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport AddSubTopic from './AddSubTopic';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'title', label: 'TITLE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst SubTopics = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminSubTopics(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editSubTopic(fee.id, fee)\r\n      else\r\n        props.addSubTopic(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/itdashboard/subtopics/${id}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Topic\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.title}</TableCell>\r\n                          <TableCell>\r\n                            <Controls.ActionButton\r\n                                color=\"primary\"\r\n                                onClick={() => { openInPopup(item) }}>\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                                EDIT\r\n                            </Controls.ActionButton>\r\n                            <Controls.ActionButton\r\n                                color=\"secondary\"\r\n                                onClick={() => { handleClick(item.id) }}\r\n                              >\r\n                                <BorderColorIcon fontSize=\"small\" />\r\n                                OPEN\r\n                            </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Subtopic Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddSubTopic\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.courses.adminsubtopics,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminSubTopics, addSubTopic, editSubTopic} )\r\n  (SubTopics);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\TopicBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\courses.js",["2017","2018","2019"],"import axios from 'axios';\r\nimport {\r\n  GET_UPCOMING_COURSES,\r\n  GET_UPCOMING_COURSE,\r\n  GET_ONGOING_COURSES,\r\n  GET_ONGOING_COURSE,\r\n  GET_FINISHED_COURSES,\r\n  GET_FINISHED_COURSE,\r\n  GET_INACTIVE_COURSES,\r\n  GET_INACTIVE_COURSE,\r\n  EDIT_COURSE,\r\n  ADD_COURSE,\r\n  GET_ADMIN_TOPICS,\r\n  GET_ADMIN_TOPIC,\r\n  ADD_TOPIC,\r\n  EDIT_TOPIC,\r\n  GET_ADMIN_REVIEWS,\r\n  GET_ADMIN_SUBTOPICS,\r\n  GET_ADMIN_SUBTOPIC,\r\n  ADD_SUBTOPIC,\r\n  EDIT_SUBTOPIC,\r\n  GET_ADMIN_TOPIC_OBJECTIVES,\r\n  GET_ADMIN_TOPIC_OBJECTIVE,\r\n  EDIT_TOPIC_OBJECTIVE,\r\n  ADD_TOPIC_OBJECTIVE,\r\n  GET_ADMIN_TOPIC_GUIDELINES,\r\n  GET_ADMIN_TOPIC_GUIDELINE,\r\n  EDIT_TOPIC_GUIDELINE,\r\n  ADD_TOPIC_GUIDELINE,\r\n  GET_ADMIN_STUDY_NOTES,\r\n  GET_ADMIN_STUDY_NOTE,\r\n  EDIT_STUDY_NOTE,\r\n  ADD_STUDY_NOTE,\r\n  GET_ADMIN_STUDY_NOTES_IMAGES,\r\n  GET_ADMIN_STUDY_NOTE_IMAGE,\r\n  EDIT_STUDY_NOTE_IMAGE,\r\n  ADD_STUDY_NOTE_IMAGE,\r\n  GET_ADMIN_STUDY_NOTES_FILES,\r\n  GET_ADMIN_STUDY_NOTE_FILE,\r\n  EDIT_STUDY_NOTE_FILE,\r\n  ADD_STUDY_NOTE_FILE,\r\n  GET_ADMIN_STUDY_NOTES_VIDEOS,\r\n  GET_ADMIN_STUDY_NOTE_VIDEO,\r\n  EDIT_STUDY_NOTE_VIDEO,\r\n  ADD_STUDY_NOTE_VIDEO,\r\n  GET_ADMIN_STUDY_NOTES_NOTES,\r\n  GET_ADMIN_STUDY_NOTE_NOTE,\r\n  EDIT_STUDY_NOTE_NOTE,\r\n  ADD_STUDY_NOTE_NOTE,\r\n  GET_ADMIN_STUDY_NOTES_REFERENCES,\r\n  GET_ADMIN_STUDY_NOTE_REFERENCE,\r\n  EDIT_STUDY_NOTE_REFERENCE,\r\n  ADD_STUDY_NOTE_REFERENCE,\r\n  GET_ADMIN_AUTHORS,\r\n  GET_ADMIN_AUTHOR,\r\n  EDIT_AUTHOR,\r\n  ADD_AUTHOR,\r\n  GET_ADMIN_PUBLISHER_CITIES,\r\n  GET_ADMIN_PUBLISHER_CITY,\r\n  EDIT_PUBLISHER_CITY,\r\n  ADD_PUBLISHER_CITY,\r\n  GET_ADMIN_PUBLISHERS,\r\n  GET_ADMIN_PUBLISHER,\r\n  EDIT_PUBLISHER,\r\n  ADD_PUBLISHER,\r\n  GET_COURSE_STATUS_CHOICES\r\n\r\n} from '../types/courseTypes';\r\nimport {\r\n  adminupcomingcoursesURL,\r\n  adminongoingcoursesURL,\r\n  adminfinishedcoursesURL,\r\n  admininactivecoursesURL,\r\n  admintopicsURL,\r\n  adminreviewsURL,\r\n  adminsubtopicsURL,\r\n  admintopicobjectivesURL,\r\n  admintopicguidelinesURL,\r\n  adminstudynotesURL,\r\n  adminstudynotesimagesURL,\r\n  adminstudynotesnotesURL,\r\n  adminstudynotesfilesURL,\r\n  adminstudynotesvideosURL,\r\n  adminstudynotesreferencesURL,\r\n  adminauthorsURL,\r\n  adminpublishercitiesURL,\r\n  coursestatuschoicesURL,\r\n  adminpublishersURL\r\n} from '../constants';\r\n\r\n\r\n\r\nexport const getCourseStatus = () => dispatch => {\r\n    axios.get(coursestatuschoicesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COURSE_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminUpcomingCourses = () => dispatch => {\r\n    axios.get(adminupcomingcoursesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UPCOMING_COURSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminUpcomingCourse = (id) => dispatch => {\r\n    axios.get(`${adminupcomingcoursesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UPCOMING_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminOngoingCourses = () => dispatch => {\r\n    axios.get(adminongoingcoursesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ONGOING_COURSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminOngoingCourse = (id) => dispatch => {\r\n    axios.get(`${adminongoingcoursesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ONGOING_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const getAdminFinishedCourses = () => dispatch => {\r\n    axios.get(adminfinishedcoursesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FINISHED_COURSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminFinishedCourse= (id) => dispatch => {\r\n    axios.get(`${adminfinishedcoursesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FINISHED_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminInactiveCourses = () => dispatch => {\r\n    axios.get(admininactivecoursesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INACTIVE_COURSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminInactiveCourse= (id) => dispatch => {\r\n    axios.get(`${admininactivecoursesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INACTIVE_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addCourse = (course) => dispatch => {\r\n    axios.post(adminupcomingcoursesURL, course)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editCourse = (id, course) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${adminupcomingcoursesURL}${id}/`, course)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_COURSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminTopics = (course_id) => dispatch => {\r\n    axios.get(`${admintopicsURL}?id=${course_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPICS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminTopic= (id) => dispatch => {\r\n    axios.get(`${admintopicsURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addTopic = (topic) => dispatch => {\r\n    axios.post(admintopicsURL, topic)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_TOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const editTopic = (id, topic) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${admintopicsURL}${id}/`, topic)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_TOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminReviews = (course_id) => dispatch => {\r\n    axios.get(`${adminreviewsURL}?id=${course_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_REVIEWS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAdminTopicObjectives = (topic_id) => dispatch => {\r\n    axios.get(`${admintopicobjectivesURL}?id=${topic_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC_OBJECTIVES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminTopicObjective = (id) => dispatch => {\r\n    axios.get(`${admintopicobjectivesURL}/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC_OBJECTIVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addTopicObjective = (objective) => dispatch => {\r\n    axios.post(admintopicobjectivesURL, objective)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_TOPIC_OBJECTIVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editTopicObjective = (id, objective) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${admintopicobjectivesURL}${id}/`, objective)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_TOPIC_OBJECTIVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const getAdminTopicGuidelines = (topic_id) => dispatch => {\r\n    axios.get(`${admintopicguidelinesURL}?id=${topic_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC_GUIDELINES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminTopicGuideline = (id) => dispatch => {\r\n    axios.get(`${admintopicguidelinesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_TOPIC_GUIDELINE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addTopicGuideLine = (guideline) => dispatch => {\r\n    axios.post(admintopicguidelinesURL, guideline)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_TOPIC_GUIDELINE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editTopicGuideline = (id, guideline) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${admintopicguidelinesURL}${id}/`, guideline)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_TOPIC_GUIDELINE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const getAdminSubTopics = (topic_id) => dispatch => {\r\n    axios.get(`${adminsubtopicsURL}?id=${topic_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_SUBTOPICS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAdminSubTopic = (id) => dispatch => {\r\n    axios.get(`${adminsubtopicsURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_SUBTOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addSubTopic = (subtopic) => dispatch => {\r\n    axios.post(adminsubtopicsURL, subtopic)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_SUBTOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editSubTopic = (id, subtopic) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${adminsubtopicsURL}${id}/`, subtopic)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_SUBTOPIC,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNotes = (topic_id) => dispatch => {\r\n    axios.get(`${adminstudynotesURL}?id=${topic_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNote = (id) => dispatch => {\r\n    axios.get(`${adminstudynotesURL}${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNote = (note) => dispatch => {\r\n    axios.post(adminstudynotesURL, note)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNote = (id, note) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`${adminstudynotesURL}${id}/`, note)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNoteVideos = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesvideosURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_VIDEOS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteVideo = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-videos/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_VIDEO,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteVideo = (video) => dispatch => {\r\n    axios.post(adminstudynotesvideosURL, video)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_VIDEO,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteVideo = (id, video) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-videos/${id}/`, video)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_VIDEO,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteImages = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesimagesURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_IMAGES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteImage = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-images/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_IMAGE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteImage = (image) => dispatch => {\r\n    axios.post(adminstudynotesimagesURL, image)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_IMAGE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteImage = (id, image) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-images/${id}/`, image)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_IMAGE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNoteNotes = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesnotesURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_NOTES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteNote = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-notes/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteNote = (note) => dispatch => {\r\n    axios.post(adminstudynotesnotesURL, note)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteNote = (id, note) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-notes/${id}/`, note)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNoteFiles = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesfilesURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_FILES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteFile = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-files/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_FILE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteFile = (file) => dispatch => {\r\n    axios.post(adminstudynotesfilesURL, file)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_FILE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteFile = (id, file) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-files/${id}/`, file)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_FILE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStudyNoteReferences = (note_id) => dispatch => {\r\n    axios.get(`${adminstudynotesreferencesURL}?id=${note_id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTES_REFERENCES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getStudyNoteReference = (id) => dispatch => {\r\n    axios.get(`http://127.0.0.1:8000/api/courses/admin-study-notes-references/${id}/`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_STUDY_NOTE_REFERENCE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const addStudyNoteReference = (reference) => dispatch => {\r\n    axios.post(adminstudynotesfilesURL, reference)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STUDY_NOTE_REFERENCE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editStudyNoteReference = (id, reference) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-study-notes-references/${id}/`, reference)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STUDY_NOTE_REFERENCE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAuthors = () => dispatch => {\r\n    axios.get(adminauthorsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_AUTHORS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const addAuthor = (author) => dispatch => {\r\n    axios.post(adminauthorsURL, author)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_AUTHOR,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editAuthor = (id, author) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-authors/${id}/`, author)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_AUTHOR,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getPublisherCities = () => dispatch => {\r\n    axios.get(adminpublishercitiesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_PUBLISHER_CITIES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const addPublisherCity = (city) => dispatch => {\r\n    axios.post(adminpublishercitiesURL, city)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PUBLISHER_CITY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editPublisherCity = (id, city) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-publisher-cities/${id}/`, city)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_PUBLISHER_CITY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getPublishers= () => dispatch => {\r\n    axios.get(adminpublishersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ADMIN_PUBLISHERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const addPublisher = (publisher) => dispatch => {\r\n    axios.post(adminpublishersURL, publisher)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PUBLISHER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const editPublisher = (id, publisher) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/courses/admin-publishers/${id}/`, publisher)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_PUBLISHER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\actions\\uiactions.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\guidelines\\GuideLines.js",["2020","2021","2022","2023"],"import React, { useEffect, useState } from \"react\"\r\nimport { getAdminTopicGuidelines, addTopicGuideLine, editTopicGuideline } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddGuideLine from './AddGuideLine';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'description', label: 'DESCRIPTION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst GuideLines = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminTopicGuidelines(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editTopicGuideline(fee.id, fee)\r\n      else\r\n        props.addTopicGuideLine(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Objective\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.description}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Guideline Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddGuideLine\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.courses.admintopicguidelines,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminTopicGuidelines, addTopicGuideLine, editTopicGuideline} )\r\n  (GuideLines);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\objectives\\Objectives.js",["2024","2025","2026","2027"],"import React, { useEffect, useState } from \"react\"\r\nimport { getAdminTopicObjectives, addTopicObjective, editTopicObjective } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddObjective from './AddObjective';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'description', label: 'DESCRIPTION' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst Objectives = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminTopicObjectives(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editTopicObjective(fee.id, fee)\r\n      else\r\n        props.addTopicObjective(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Objective\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.description}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddObjective\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.courses.admintopicobjectives,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminTopicObjectives, addTopicObjective, editTopicObjective} )\r\n  (Objectives);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\SocialMedia\\jss\\cover-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\index.js",["2028","2029","2030","2031","2032"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Palette from '@material-ui/icons/Palette';\r\nimport Close from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport LeftSidebarThumb from './templatePreview/LeftSidebarThumb';\r\nimport LeftSidebarBigThumb from './templatePreview/LeftSidebarBigThumb';\r\nimport TopNavigationThumb  from './templatePreview/TopNavigationThumb';\r\nimport MegaMenuThumb from './templatePreview/MegaMenuThumb';\r\nimport ThemeThumb from './ThemeThumbs';\r\nimport LayoutThumb from './LayoutThumb';\r\nimport styles from './settings-jss';\r\n\r\nfunction TabContainer({ children }) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 1.5 }}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nclass TemplateSettings extends React.Component {\r\n  state = {\r\n    type: 0,\r\n    show: false,\r\n    showAllThemes: false\r\n  };\r\n\r\n  // Tab Handle\r\n  handleChangeTab = (event, type) => {\r\n    this.setState({ type });\r\n  };\r\n\r\n  handleChangeIndexTab = index => {\r\n    this.setState({ type: index });\r\n  };\r\n\r\n  // Theme Mode Handle\r\n  handleSwitchMode = name => event => {\r\n    const { changeMode } = this.props;\r\n    const mode = event.target.checked ? 'dark' : 'light';\r\n    changeMode(mode);\r\n    this.setState({ [name]: event.target.checked });\r\n  };\r\n\r\n  handeSwitchDirection = name => event => {\r\n    const { changeDirection } = this.props;\r\n    const dir = event.target.checked ? 'rtl' : 'ltr';\r\n    changeDirection(dir);\r\n    this.setState({ [name]: event.target.checked });\r\n  }\r\n\r\n  // Background Position Handle\r\n  handleBgChangePosition = event => {\r\n    const { changeBgPosition } = this.props;\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    changeBgPosition(event.target.value);\r\n  };\r\n\r\n  // Decoration Handle\r\n  handleChangeDecoration = name => event => {\r\n    const { changeDecoration } = this.props;\r\n    this.setState({ [name]: event.target.checked });\r\n    changeDecoration(event.target.checked);\r\n  };\r\n\r\n  // Decoration Handle\r\n  handleChangeGradient = name => event => {\r\n    const { changeGradient } = this.props;\r\n    this.setState({ [name]: event.target.checked });\r\n    changeGradient(event.target.checked);\r\n  };\r\n\r\n  // Layout Handle\r\n  handleChangeLayout = event => {\r\n    const { changeLayout } = this.props;\r\n    changeLayout(event.target.value);\r\n  };\r\n\r\n  // Show Hide Panel\r\n  handleTogglePanel = () => {\r\n    const { show } = this.state;\r\n    this.setState({ show: !show });\r\n  }\r\n\r\n  // Toggle All Themes\r\n  handleToggleAllThemes = () => {\r\n    const { showAllThemes } = this.state;\r\n    this.setState({ showAllThemes: !showAllThemes });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      palette,\r\n      mode,\r\n      gradient,\r\n      decoration,\r\n      bgPosition,\r\n      selectedValue,\r\n      layout,\r\n      direction,\r\n      changeTheme,\r\n      changeRandomTheme\r\n    } = this.props;\r\n    const { show, type, showAllThemes } = this.state;\r\n    const getItem = dataArray => dataArray.map((item, index) => (\r\n      <FormControlLabel\r\n        key={index.toString()}\r\n        className={\r\n          classNames(\r\n            classes.themeField,\r\n            index > 7 && !showAllThemes ? classes.hide : ''\r\n          )\r\n        }\r\n        control={(\r\n          <ThemeThumb\r\n            value={item.value}\r\n            selectedValue={selectedValue}\r\n            handleChange={changeTheme}\r\n            name={item.name}\r\n          />\r\n        )}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <aside\r\n        className={\r\n          classNames(\r\n            classes.settingSidebar,\r\n            layout === 'right-sidebar' ? classes.leftSidebar : classes.rightSidebar,\r\n            show && classes.expanded\r\n          )\r\n        }\r\n      >\r\n        <div className={classes.toggleButton}>\r\n          <Fab\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            aria-label=\"toggle\"\r\n            className={classes.button}\r\n            onClick={this.handleTogglePanel}\r\n            classes={{\r\n              root: classes.buttonDrawer,\r\n            }}\r\n          >\r\n            {show ? <Close /> : <Palette />}\r\n          </Fab>\r\n        </div>\r\n        <Slide direction={direction === 'rtl' ? 'right' : 'left'} in={show} mountOnEnter unmountOnExit>\r\n          <div className={classes.root}>\r\n            <AppBar position=\"fixed\" className={classes.tab} color=\"default\">\r\n              <div className={classes.header}>\r\n                <IconButton\r\n                  onClick={this.handleTogglePanel}\r\n                  className={classes.backButton}\r\n                  aria-label=\"Baack\"\r\n                >\r\n                  <ArrowBack />\r\n                </IconButton>\r\n                <Typography variant=\"button\">Template Settings</Typography>\r\n              </div>\r\n              <Tabs\r\n                value={type}\r\n                onChange={this.handleChangeTab}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"fullWidth\"\r\n              >\r\n                <Tab label=\"Theme\" />\r\n                <Tab label=\"Layout\" />\r\n              </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n              index={type}\r\n              onChangeIndex={this.handleChangeIndexTab}\r\n            >\r\n              <TabContainer>\r\n                <section className={classes.settingWraper}>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>invert_colors</Icon>\r\n                        Theme Mode\r\n                      </FormLabel>\r\n                      <FormGroup className={classes.themeMode}>\r\n                        <span>Light Mode</span>\r\n                        <FormControlLabel\r\n                          className={classes.switch}\r\n                          control={(\r\n                            <Switch\r\n                              checked={mode === 'dark'}\r\n                              onChange={this.handleSwitchMode('dark')}\r\n                              value=\"dark\"\r\n                              color=\"default\"\r\n                              classes={{\r\n                                track: classes.themeCheckBar,\r\n                                thumb: classes.themeCheck,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        <span>Dark Mode</span>\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>\r\n                          format_textdirection_r_to_l\r\n                        </Icon>\r\n                        Layout Direction\r\n                      </FormLabel>\r\n                      <FormGroup className={classes.themeMode}>\r\n                        <span>LTR</span>\r\n                        <FormControlLabel\r\n                          className={classes.switch}\r\n                          control={(\r\n                            <Switch\r\n                              checked={direction === 'rtl'}\r\n                              onChange={this.handeSwitchDirection('rtl')}\r\n                              value=\"rtl\"\r\n                              color=\"default\"\r\n                              classes={{\r\n                                track: classes.themeCheckBar,\r\n                                thumb: classes.themeCheck,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        <span>RTL</span>\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\" className={classes.themeGroup}>\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>color_lens</Icon>\r\n                        Theme Color\r\n                      </FormLabel>\r\n                      <div className={classes.randomThemeField}>\r\n                        <ButtonBase onClick={() => changeRandomTheme()}>\r\n                          <img src=\"/images/random.jpg\" alt=\"random\" />\r\n                        </ButtonBase>\r\n                      </div>\r\n                      { palette !== undefined && getItem(palette) }\r\n                      <div className={classes.center}>\r\n                        <Button color=\"primary\" onClick={this.handleToggleAllThemes}>\r\n                          {showAllThemes ? 'Hide Some' : 'Show All'}\r\n                        </Button>\r\n                      </div>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>branding_watermark</Icon>\r\n                        Background Size\r\n                      </FormLabel>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel htmlFor=\"background-position\">Choose Size</InputLabel>\r\n                        <Select\r\n                          value={bgPosition}\r\n                          onChange={this.handleBgChangePosition}\r\n                          inputProps={{\r\n                            name: 'position',\r\n                            id: 'background-position',\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"header\">Header</MenuItem>\r\n                          <MenuItem value=\"half\">Half</MenuItem>\r\n                          <MenuItem value=\"full\">Full</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </FormControl>\r\n                  </Paper>\r\n                  <Paper className={classes.optBlock}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\" className={classes.title}>\r\n                        <Icon className={classes.icon}>texture</Icon>\r\n                        Art Decoration\r\n                      </FormLabel>\r\n                      <FormGroup row>\r\n                        <FormControlLabel\r\n                          control={(\r\n                            <Checkbox\r\n                              checked={decoration}\r\n                              onChange={this.handleChangeDecoration('decorated')}\r\n                              value=\"decorated\"\r\n                            />\r\n                          )}\r\n                          label=\"Show Art Decoration\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup row>\r\n                        <FormControlLabel\r\n                          control={(\r\n                            <Checkbox\r\n                              checked={gradient}\r\n                              onChange={this.handleChangeGradient('gradient')}\r\n                              value=\"gradient\"\r\n                            />\r\n                          )}\r\n                          label=\"Use Gradient\"\r\n                        />\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Paper>\r\n                </section>\r\n                {/* END */}\r\n              </TabContainer>\r\n            </SwipeableViews>\r\n          </div>\r\n        </Slide>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nTemplateSettings.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  // palette: PropTypes.,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  decoration: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n  layout: PropTypes.string.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  changeTheme: PropTypes.func.isRequired,\r\n  changeRandomTheme: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  changeGradient: PropTypes.func.isRequired,\r\n  changeDecoration: PropTypes.func.isRequired,\r\n  changeBgPosition: PropTypes.func.isRequired,\r\n  changeLayout: PropTypes.func.isRequired,\r\n  changeDirection: PropTypes.func.isRequired,\r\n};\r\n\r\nTemplateSettings.defaultProps = {\r\n  palette: undefined\r\n};\r\n\r\nexport default withStyles(styles)(TemplateSettings);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\SocialMedia\\Cover.js",["2033","2034","2035","2036","2037","2038","2039","2040"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\r\nimport Info from '@material-ui/icons/Info';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './jss/cover-jss';\r\n\r\nconst optionsOpt = [\r\n  'Edit Profile',\r\n  'Change Cover',\r\n  'Option 1',\r\n  'Option 2',\r\n  'Option 3',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nclass Cover extends React.Component {\r\n  state = {\r\n    anchorElOpt: null,\r\n  };\r\n\r\n  handleClickOpt = event => {\r\n    this.setState({ anchorElOpt: event.currentTarget });\r\n  };\r\n\r\n  handleCloseOpt = () => {\r\n    this.setState({ anchorElOpt: null });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      avatar,\r\n      name,\r\n      desc,\r\n      coverImg,\r\n    } = this.props;\r\n    const { anchorElOpt } = this.state;\r\n    return (\r\n      <div className={classes.cover} style={{ backgroundImage: `url(${coverImg})` }}>\r\n        <div className={classes.opt}>\r\n          <IconButton className={classes.button} aria-label=\"Delete\">\r\n            <Info />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-owns={anchorElOpt ? 'long-menu' : null}\r\n            aria-haspopup=\"true\"\r\n            className={classes.button}\r\n            onClick={this.handleClickOpt}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <Typography variant=\"h4\" className={classes.name} gutterBottom>\r\n            {name}\r\n            <VerifiedUser className={classes.verified} />\r\n          </Typography>\r\n          <Typography className={classes.subheading} gutterBottom>\r\n            {desc}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCover.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // avatar: PropTypes.string.isRequired,\r\n  // name: PropTypes.string.isRequired,\r\n  // desc: PropTypes.string.isRequired,\r\n  // coverImg: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Cover);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\errors.js",["2041"],"import { GET_ERRORS } from '../types/alertTypes';\r\n\r\nconst initialState = {\r\n\tmsg: {},\r\n\tstatus: null\r\n}\r\n\r\nexport default function (state=initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase GET_ERRORS:\r\n\t\t\treturn {\r\n\t\t\t\tmsg: action.payload.msg,\r\n\t\t\t\tstatus: action.payload.status\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\messages.js",["2042"],"import { CREATE_MESSAGE } from '../types/alertTypes';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_MESSAGE:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\reports.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\assets.js",["2043"],"import {\r\n        ADD_ASSET,\r\n        GET_ASSETS,\r\n        DELETE_ASSET,\r\n        GET_ASSET,\r\n        EDIT_ASSET\r\n    } from '../types/assetTypes';\r\n\r\nconst initialState = {\r\n    assets: [],\r\n    asset: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ASSETS:\r\n            return {\r\n                ...state,\r\n                assets: action.payload\r\n            };\r\n        case DELETE_ASSET:\r\n            return {\r\n                ...state,\r\n                asset: state.assets.filter(asset=> asset.id !== action.payload)\r\n            };\r\n        case ADD_ASSET:\r\n            return {\r\n                ...state,\r\n                asset: [...state.assets, action.payload]\r\n            }\r\n        case GET_ASSET:\r\n            return {\r\n                ...state,\r\n                asset:action.payload\r\n                };\r\n        case EDIT_ASSET:\r\n            const arrayList = state.assets;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                assets: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\classes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\courses.js",["2044","2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056"],"import {\r\n  GET_UPCOMING_COURSES,\r\n  GET_UPCOMING_COURSE,\r\n  GET_ONGOING_COURSES,\r\n  GET_ONGOING_COURSE,\r\n  GET_FINISHED_COURSES,\r\n  GET_FINISHED_COURSE,\r\n  GET_INACTIVE_COURSES,\r\n  GET_INACTIVE_COURSE,\r\n  EDIT_COURSE,\r\n  ADD_COURSE,\r\n  GET_ADMIN_TOPICS,\r\n  GET_ADMIN_TOPIC,\r\n  ADD_TOPIC,\r\n  EDIT_TOPIC,\r\n  GET_ADMIN_REVIEWS,\r\n  GET_ADMIN_SUBTOPICS,\r\n  GET_ADMIN_SUBTOPIC,\r\n  ADD_SUBTOPIC,\r\n  EDIT_SUBTOPIC,\r\n  GET_ADMIN_TOPIC_OBJECTIVES,\r\n  GET_ADMIN_TOPIC_OBJECTIVE,\r\n  EDIT_TOPIC_OBJECTIVE,\r\n  ADD_TOPIC_OBJECTIVE,\r\n  GET_ADMIN_TOPIC_GUIDELINES,\r\n  GET_ADMIN_TOPIC_GUIDELINE,\r\n  EDIT_TOPIC_GUIDELINE,\r\n  ADD_TOPIC_GUIDELINE,\r\n  GET_ADMIN_STUDY_NOTES,\r\n  GET_ADMIN_STUDY_NOTE,\r\n  EDIT_STUDY_NOTE,\r\n  ADD_STUDY_NOTE,\r\n  GET_ADMIN_STUDY_NOTES_IMAGES,\r\n  GET_ADMIN_STUDY_NOTE_IMAGE,\r\n  EDIT_STUDY_NOTE_IMAGE,\r\n  ADD_STUDY_NOTE_IMAGE,\r\n  GET_ADMIN_STUDY_NOTES_FILES,\r\n  GET_ADMIN_STUDY_NOTE_FILE,\r\n  EDIT_STUDY_NOTE_FILE,\r\n  ADD_STUDY_NOTE_FILE,\r\n  GET_ADMIN_STUDY_NOTES_VIDEOS,\r\n  GET_ADMIN_STUDY_NOTE_VIDEO,\r\n  EDIT_STUDY_NOTE_VIDEO,\r\n  ADD_STUDY_NOTE_VIDEO,\r\n  GET_ADMIN_STUDY_NOTES_NOTES,\r\n  GET_ADMIN_STUDY_NOTE_NOTE,\r\n  EDIT_STUDY_NOTE_NOTE,\r\n  ADD_STUDY_NOTE_NOTE,\r\n  GET_ADMIN_STUDY_NOTES_REFERENCES,\r\n  GET_ADMIN_STUDY_NOTE_REFERENCE,\r\n  EDIT_STUDY_NOTE_REFERENCE,\r\n  ADD_STUDY_NOTE_REFERENCE,\r\n  GET_ADMIN_AUTHORS,\r\n  GET_ADMIN_AUTHOR,\r\n  EDIT_AUTHOR,\r\n  ADD_AUTHOR,\r\n  GET_ADMIN_PUBLISHER_CITIES,\r\n  GET_ADMIN_PUBLISHER_CITY,\r\n  EDIT_PUBLISHER_CITY,\r\n  ADD_PUBLISHER_CITY,\r\n  GET_ADMIN_PUBLISHERS,\r\n  GET_ADMIN_PUBLISHER,\r\n  EDIT_PUBLISHER,\r\n  ADD_PUBLISHER,\r\n  GET_COURSE_STATUS_CHOICES,\r\n\r\n} from '../types/courseTypes';\r\n\r\n\r\nconst initialState = {\r\n    coursestatuschoices: [],\r\n    adminupcomingcourses: [],\r\n    adminupcomingcourse: {},\r\n    adminongoingcourses: [],\r\n    adminongoingcourse: {},\r\n    adminfinishedcourses: [],\r\n    adminfinishedcourse:{},\r\n    admininactivecourses: [],\r\n    admininactivecourse: {},\r\n    adminreviews: [],\r\n    admintopics: [],\r\n    admintopic: {},\r\n    admintopicobjectives: [],\r\n    admintopicguidelines: [],\r\n    adminsubtopics: [],\r\n    adminsubtopic: {},\r\n    adminstudynotes: [],\r\n    adminstudynote: {},\r\n    adminstudynotesimages: [],\r\n    adminstudynotesvideos: [],\r\n    adminstudynotesfiles: [],\r\n    adminstudynotesnotes: [],\r\n    adminstudynotesreferences: [],\r\n    adminauthors: [],\r\n    adminpublishers: [],\r\n    adminpublishercities: [],\r\n    loading: false\r\n}\r\n\r\nexport default function courses(state = initialState, action){\r\n    switch(action.type){\r\n\r\n      case GET_COURSE_STATUS_CHOICES:\r\n          return {\r\n              ...state,\r\n              coursestatuschoices : action.payload\r\n          };\r\n\r\n        case GET_UPCOMING_COURSES:\r\n            return {\r\n                ...state,\r\n                adminupcomingcourses : action.payload\r\n            };\r\n\r\n        case GET_UPCOMING_COURSE:\r\n            return {\r\n                ...state,\r\n                adminupcomingcourse : action.payload\r\n            };\r\n\r\n        case GET_ONGOING_COURSES:\r\n            return {\r\n                ...state,\r\n                adminongoingcourses : action.payload\r\n            };\r\n\r\n        case GET_ONGOING_COURSE:\r\n            return {\r\n                ...state,\r\n                adminongoingcourse : action.payload\r\n            };\r\n\r\n        case GET_FINISHED_COURSES:\r\n            return {\r\n                ...state,\r\n                adminfinishedcourses : action.payload\r\n            };\r\n\r\n        case GET_FINISHED_COURSE:\r\n            return {\r\n                ...state,\r\n                adminfinishedcourse : action.payload\r\n            };\r\n\r\n        case GET_INACTIVE_COURSES:\r\n            return {\r\n                ...state,\r\n                admininactivecourses : action.payload\r\n            };\r\n\r\n        case GET_INACTIVE_COURSE:\r\n            return {\r\n                ...state,\r\n                admininactivecourse : action.payload\r\n            };\r\n\r\n        case ADD_COURSE:\r\n            return {\r\n                ...state,\r\n                course: [...state.adminupcomingcourses, action.payload]\r\n            }\r\n\r\n        case EDIT_COURSE:\r\n            const eearrayList = state.adminupcomingcourses;\r\n            eearrayList.splice(eearrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminupcomingcourses: eearrayList,\r\n            };\r\n        case GET_ADMIN_REVIEWS:\r\n            return {\r\n                ...state,\r\n                adminreviews : action.payload\r\n            };\r\n\r\n        case GET_ADMIN_TOPICS:\r\n            return {\r\n                ...state,\r\n                admintopics : action.payload\r\n            };\r\n\r\n        case GET_ADMIN_TOPIC:\r\n            return {\r\n                ...state,\r\n                admintopic : action.payload\r\n            };\r\n\r\n        case ADD_TOPIC:\r\n            return {\r\n                ...state,\r\n                topic: [...state.admintopics, action.payload]\r\n            }\r\n\r\n        case EDIT_TOPIC:\r\n            const tarrayList = state.admintopics;\r\n            tarrayList.splice(tarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                admintopics: tarrayList,\r\n            };\r\n        case GET_ADMIN_TOPIC_OBJECTIVES:\r\n            return {\r\n                ...state,\r\n                admintopicobjectives : action.payload\r\n            };\r\n\r\n        case ADD_TOPIC_OBJECTIVE:\r\n            return {\r\n                ...state,\r\n                objective: [...state.admintopicobjectives, action.payload]\r\n            }\r\n\r\n        case EDIT_TOPIC_OBJECTIVE:\r\n            const oarrayList = state.admintopicobjectives;\r\n            oarrayList.splice(oarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                admintopicobjectives: oarrayList,\r\n            };\r\n        case GET_ADMIN_TOPIC_GUIDELINES:\r\n            return {\r\n                ...state,\r\n                admintopicguidelines : action.payload\r\n            };\r\n\r\n        case ADD_TOPIC_GUIDELINE:\r\n            return {\r\n                ...state,\r\n                guideline: [...state.admintopicguidelines, action.payload]\r\n            }\r\n\r\n        case EDIT_TOPIC_GUIDELINE:\r\n            const garrayList = state.admintopicguidelines;\r\n            garrayList.splice(garrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                admintopicobjectives: garrayList,\r\n            };\r\n        case GET_ADMIN_SUBTOPICS:\r\n            return {\r\n                ...state,\r\n                adminsubtopics : action.payload\r\n            };\r\n\r\n        case GET_ADMIN_SUBTOPIC:\r\n            return {\r\n                ...state,\r\n                adminsubtopic : action.payload\r\n            };\r\n\r\n\r\n        case ADD_SUBTOPIC:\r\n            return {\r\n                ...state,\r\n                subtopic: [...state.adminsubtopics, action.payload]\r\n            }\r\n\r\n        case EDIT_SUBTOPIC:\r\n            const sarrayList = state.adminsubtopics;\r\n            sarrayList.splice(sarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminsubtopics: sarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES:\r\n            return {\r\n                ...state,\r\n                adminstudynotes : action.payload\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTE:\r\n            return {\r\n                ...state,\r\n                adminstudynote : action.payload\r\n            };\r\n\r\n\r\n        case ADD_STUDY_NOTE:\r\n            return {\r\n                ...state,\r\n                note: [...state.adminstudynotes, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE:\r\n            const starrayList = state.adminstudynotes;\r\n            starrayList.splice(starrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotes: starrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES_FILES:\r\n            return {\r\n                ...state,\r\n                adminstudynotesfiles : action.payload\r\n            };\r\n\r\n        case ADD_STUDY_NOTE_FILE:\r\n            return {\r\n                ...state,\r\n                file: [...state.adminstudynotesfiles, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE_FILE:\r\n            const fstarrayList = state.adminstudynotesfiles;\r\n            fstarrayList.splice(fstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotesfiles: fstarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES_VIDEOS:\r\n            return {\r\n                ...state,\r\n                adminstudynotesvideos : action.payload\r\n            };\r\n\r\n        case ADD_STUDY_NOTE_VIDEO:\r\n            return {\r\n                ...state,\r\n                video: [...state.adminstudynotesvideos, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE_VIDEO:\r\n            const vstarrayList = state.adminstudynotesvideos;\r\n            vstarrayList.splice(vstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotesvideos: vstarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES_IMAGES:\r\n            return {\r\n                ...state,\r\n                adminstudynotesimages : action.payload\r\n            };\r\n\r\n        case ADD_STUDY_NOTE_IMAGE:\r\n            return {\r\n                ...state,\r\n                video: [...state.adminstudynotesimages, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE_IMAGE:\r\n            const istarrayList = state.adminstudynotesimages;\r\n            istarrayList.splice(istarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotesimages: istarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_STUDY_NOTES_REFERENCES:\r\n            return {\r\n                ...state,\r\n                adminstudynotesreferences : action.payload\r\n            };\r\n\r\n        case ADD_STUDY_NOTE_REFERENCE:\r\n            return {\r\n                ...state,\r\n                reference: [...state.adminstudynotesreferences, action.payload]\r\n            }\r\n\r\n        case EDIT_STUDY_NOTE_REFERENCE:\r\n            const rstarrayList = state.adminstudynotesreferences;\r\n            rstarrayList.splice(rstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminstudynotesreferences: rstarrayList,\r\n            };\r\n        case GET_ADMIN_AUTHORS:\r\n            return {\r\n                ...state,\r\n                adminauthors : action.payload\r\n            };\r\n\r\n        case ADD_AUTHOR:\r\n            return {\r\n                ...state,\r\n                author: [...state.adminauthors, action.payload]\r\n            }\r\n\r\n        case EDIT_AUTHOR:\r\n            const arstarrayList = state.adminauthors;\r\n            arstarrayList.splice(arstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminauthors: arstarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_PUBLISHER_CITIES:\r\n            return {\r\n                ...state,\r\n                adminpublishercities : action.payload\r\n            };\r\n\r\n        case ADD_PUBLISHER_CITY:\r\n            return {\r\n                ...state,\r\n                city: [...state.adminpublishercities, action.payload]\r\n            }\r\n\r\n        case EDIT_PUBLISHER_CITY:\r\n            const parstarrayList = state.adminpublishercities;\r\n            parstarrayList.splice(parstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminpublishercities: parstarrayList,\r\n            };\r\n\r\n        case GET_ADMIN_PUBLISHERS:\r\n            return {\r\n                ...state,\r\n                adminpublishers : action.payload\r\n            };\r\n\r\n        case ADD_PUBLISHER:\r\n            return {\r\n                ...state,\r\n                publisher: [...state.adminpublishers, action.payload]\r\n            }\r\n\r\n        case EDIT_PUBLISHER:\r\n            const pparstarrayList = state.adminpublishers;\r\n            pparstarrayList.splice(pparstarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                adminpublishers: pparstarrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\gradings.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\journals.js",["2057"],"import {\r\n        GET_JOURNALS,\r\n        DELETE_JOURNAL,\r\n        GET_JOURNAL,\r\n        ADD_JOURNAL,\r\n        EDIT_JOURNAL\r\n    } from '../types/journalTypes';\r\n\r\nconst initialState = {\r\n    journals: [],\r\n    journal: [],\r\n    loading: false\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_JOURNALS:\r\n            return {\r\n                ...state,\r\n                journals: action.payload\r\n            };\r\n        case DELETE_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal: state.journals.filter(journal=> journal.id !== action.payload)\r\n            };\r\n        case GET_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal:action.payload\r\n                };\r\n        case ADD_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal: [...state.journals, action.payload]\r\n            }\r\n        case EDIT_JOURNAL:\r\n            const arrayList = state.journals;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                journals: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\people.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\ledgers.js",["2058"],"import {\r\n        GET_LEDGERS,\r\n        DELETE_LEDGER,\r\n        GET_LEDGER,\r\n        EDIT_LEDGER,\r\n        ADD_LEDGER\r\n    } from '../types/ledgerTypes';\r\n\r\nconst initialState = {\r\n    ledgers: [],\r\n    ledger: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_LEDGERS:\r\n            return {\r\n                ...state,\r\n                ledgers: action.payload\r\n            };\r\n        case DELETE_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger: state.ledgers.filter(ledger=> ledger.id !== action.payload)\r\n            };\r\n        case GET_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger:action.payload\r\n                };\r\n        case ADD_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger: [...state.ledgers, action.payload]\r\n            };\r\n        case EDIT_LEDGER:\r\n            const arrayList = state.ledgers;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                ledgers: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\currencies.js",["2059"],"import {\r\n        ADD_CURRENCY,\r\n        GET_CURRENCIES,\r\n        EDIT_CURRENCY,\r\n        DELETE_CURRENCY\r\n    } from '../types/currencyTypes';\r\n\r\nconst initialState = {\r\n    currencies: [],\r\n    currency: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CURRENCIES:\r\n            return {\r\n                ...state,\r\n                currencies: action.payload\r\n            };\r\n        case DELETE_CURRENCY:\r\n            return {\r\n                ...state,\r\n                currency: state.currencies.filter(currency=> currency.id !== action.payload)\r\n            };\r\n        case ADD_CURRENCY:\r\n            return {\r\n                ...state,\r\n                currency: [...state.currencies, action.payload]\r\n            };\r\n        case EDIT_CURRENCY:\r\n            const arrayList = state.currencies;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                currencies: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\workbooks.js",["2060"],"import {\r\n        ADD_WORKBOOK,\r\n        GET_WORKBOOKS,\r\n        DELETE_WORKBOOK,\r\n        GET_WORKBOOK,\r\n        EDIT_WORKBOOK\r\n    } from '../types/workbookTypes';\r\n\r\nconst initialState = {\r\n    workbooks: [],\r\n    workbook: [],\r\n    loading: false\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_WORKBOOKS:\r\n            return {\r\n                ...state,\r\n                workbooks: action.payload\r\n            };\r\n        case DELETE_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook: state.workbooks.filter(workbook=> workbook.id !== action.payload)\r\n            };\r\n        case ADD_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook: [...state.workbooks, action.payload]\r\n            }\r\n        case GET_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook:action.payload\r\n                };\r\n        case EDIT_WORKBOOK:\r\n            const arrayList = state.workbooks;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                workbooks: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\inactiveaccounts.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\taxes.js",["2061"],"import {\r\n        ADD_TAX,\r\n        GET_TAXES,\r\n        DELETE_TAX,\r\n        EDIT_TAX\r\n    } from '../types/taxTypes';\r\n\r\nconst initialState = {\r\n    taxes: [],\r\n    tax: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_TAXES:\r\n            return {\r\n                ...state,\r\n                taxes: action.payload\r\n            };\r\n        case DELETE_TAX:\r\n            return {\r\n                ...state,\r\n                tax: state.taxes.filter(tax=> tax.id !== action.payload)\r\n            };\r\n        case ADD_TAX:\r\n            return {\r\n                ...state,\r\n                tax: [...state.taxes, action.payload]\r\n            };\r\n        case EDIT_TAX:\r\n            const arrayList = state.taxes;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                taxes: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\accounts.js",["2062"],"import {\r\n    ADD_ACCOUNT,\r\n    GET_ACCOUNTS ,\r\n    DELETE_ACCOUNT,\r\n    GET_ACCOUNT,\r\n    EDIT_ACCOUNT,\r\n\r\n\r\n} from '../types/accountTypes';\r\n\r\nconst initialState = {\r\n    accounts: [],\r\n    account: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNTS:\r\n            return {\r\n                ...state,\r\n                accounts: action.payload\r\n            };\r\n        case DELETE_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: state.accounts.filter(account=> account.id !== action.payload)\r\n            };\r\n        case ADD_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: [...state.accounts, action.payload]\r\n            }\r\n        case GET_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account:action.payload\r\n                };\r\n        case EDIT_ACCOUNT:\r\n            const arrayList = state.accounts;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                accounts: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\admissions.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\teacherattendances.js",["2063"],"import {\r\n    ADD_ATTENDANCE,\r\n    GET_ATTENDANCES ,\r\n    DELETE_ATTENDANCE,\r\n    GET_ATTENDANCE,\r\n    EDIT_ATTENDANCE,\r\n\r\n\r\n} from '../types/attendanceTypes';\r\n\r\nconst initialState = {\r\n    teacherattendances: [],\r\n    teacherattendance: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ATTENDANCES:\r\n            return {\r\n                ...state,\r\n                teacherattendances: action.payload\r\n            };\r\n        case DELETE_ATTENDANCE:\r\n            return {\r\n                ...state,\r\n                teacherattendance: state.teacherattendances.filter(account=> account.id !== action.payload)\r\n            };\r\n        case ADD_ATTENDANCE:\r\n            return {\r\n                ...state,\r\n                teacherattendance: [...state.teacherattendances, action.payload]\r\n            }\r\n        case GET_ATTENDANCE:\r\n            return {\r\n                ...state,\r\n                teacherattendance:action.payload\r\n                };\r\n        case EDIT_ATTENDANCE:\r\n            const arrayList = state.teacherattendances;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                teacherattendances: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\feechoices.js",["2064"],"import {\r\n    GET_FEE_TARGETS_CHOICES,\r\n    GET_FEE_TYPE_CHOICES,\r\n    GET_ACCOUNT_STATUS_CHOICES,\r\n    GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES,\r\n    GET_ACCOUNT_TYPE_CHOICES,\r\n    GET_ASSET_TYPES_CHOICES,\r\n    GET_ASSETS_DEPRECIATION_METHOD_CHOICES,\r\n    GET_GENERAL_GRADING_TYPE_CHOICES,\r\n    GET_ATTENDANCE_STATUS_CHOICES,\r\n    GET_INVENTORY_CHECK_FREQUENCY_CHOICES,\r\n    GET_STUDYNOTES_STATUS_CHOICES,\r\n    GET_STUDY_NOTES_APPROVAL_STATUS_CHOICES,\r\n} from '../types/choiceTypes'\r\n\r\nconst initialState = {\r\n    feetypechoices: [],\r\n    feetargetschoices: [],\r\n    accountstatuschoices: [],\r\n    accountbalancesheetcategorieschoices : [],\r\n    accounttypechoices : [],\r\n    assettypechoices: [],\r\n    assetsdepriciationmethodchoices : [],\r\n    generalgradingtypechoices : [],\r\n    attendancestatuschoices : [],\r\n    studynotesstatuschoices : [],\r\n    studynotesapprovalstatuschoices : [],\r\n\r\n }\r\n\r\n\r\n export default function choices(state = initialState, action){\r\n     switch(action.type){\r\n        case GET_STUDYNOTES_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                studynotesstatuschoices: action.payload\r\n            };\r\n        case GET_STUDY_NOTES_APPROVAL_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                studynotesapprovalstatuschoices: action.payload\r\n            };\r\n        case GET_ATTENDANCE_STATUS_CHOICES:\r\n             return {\r\n                 ...state,\r\n                 attendancestatuschoices: action.payload\r\n             };\r\n        case GET_GENERAL_GRADING_TYPE_CHOICES:\r\n             return {\r\n                 ...state,\r\n                 generalgradingtypechoices: action.payload\r\n             };\r\n        case GET_FEE_TARGETS_CHOICES:\r\n             return {\r\n                 ...state,\r\n                 feetargetschoices: action.payload\r\n             };\r\n        case GET_FEE_TYPE_CHOICES:\r\n            return {\r\n                ...state,\r\n                feetypechoices: action.payload\r\n            };\r\n        case GET_ACCOUNT_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                accountstatuschoices: action.payload\r\n            };\r\n        case GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES:\r\n            return {\r\n                ...state,\r\n                accountbalancesheetcategorieschoices : action.payload\r\n            };\r\n        case GET_ACCOUNT_TYPE_CHOICES:\r\n            return {\r\n                ...state,\r\n                accounttypechoices : action.payload\r\n            };\r\n        case GET_ASSET_TYPES_CHOICES:\r\n            return {\r\n                ...state,\r\n                assettypechoices : action.payload\r\n            };\r\n        case GET_ASSETS_DEPRECIATION_METHOD_CHOICES:\r\n            return {\r\n                ...state,\r\n                assetsdepriciationmethodchoices : action.payload\r\n            };\r\n         default:\r\n             return state;\r\n     }\r\n }\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\fees.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\studentattendances.js",["2065"],"import {\r\n    GET_STUDENT_ATTENDANCES ,\r\n\r\n\r\n} from '../types/attendanceTypes';\r\n\r\nconst initialState = {\r\n    studentattendances: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_STUDENT_ATTENDANCES:\r\n            return {\r\n                ...state,\r\n                studentattendances: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\adminattendances.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\curriculums.js",["2066"],"import {\r\n    ADD_CURRICULUM,\r\n    GET_CURRICULUMS,\r\n    DELETE_CURRICULUM,\r\n    GET_CURRICULUM,\r\n    EDIT_CURRICULUM,\r\n    ADD_SUBJECT,\r\n    GET_SUBJECTS,\r\n    DELETE_SUBJECT,\r\n    GET_SUBJECT,\r\n    EDIT_SUBJECT,\r\n} from '../types/curriculumTypes';\r\n\r\nconst initialState = {\r\n    subjects: [],\r\n    subject: [],\r\n    curriculums: [],\r\n    curriculum: [],\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SUBJECTS:\r\n            return {\r\n                ...state,\r\n                subjects: action.payload\r\n            };\r\n        case DELETE_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subject: state.subjects.filter(subject=> subject.id !== action.payload)\r\n            };\r\n        case ADD_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subject: [...state.subjects, action.payload]\r\n            }\r\n        case GET_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subject:action.payload\r\n                };\r\n        case EDIT_SUBJECT:\r\n            const subarrayList = state.subjects;\r\n            subarrayList.splice(subarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                subjects: subarrayList,\r\n            };\r\n        case GET_CURRICULUMS:\r\n            return {\r\n                ...state,\r\n                curriculums: action.payload\r\n            };\r\n        case DELETE_CURRICULUM:\r\n            return {\r\n                ...state,\r\n                curriculum: state.curriculums.filter(curriculum=> curriculum.id !== action.payload)\r\n            };\r\n        case ADD_CURRICULUM:\r\n            return {\r\n                ...state,\r\n                curriculum: [...state.curriculums, action.payload]\r\n            }\r\n        case GET_CURRICULUM:\r\n            return {\r\n                ...state,\r\n                curriculum:action.payload\r\n            };\r\n        case EDIT_CURRICULUM:\r\n            const cuarrayList = state.curriculums;\r\n            cuarrayList.splice(cuarrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                curriculums: cuarrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\itmenu.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\auth.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\theme\\themePaletteMode.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\TopicCard.js",["2067","2068","2069","2070","2071","2072","2073"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport classNames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from './cardStyles-jss'\r\nimport topics from './topics.jpg';\r\n\r\n\r\n\r\nclass CourseCard extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      title,\r\n      id,\r\n      description,\r\n      status,\r\n      list,\r\n      detailOpen,\r\n      width,\r\n      editItem,\r\n    } = this.props;\r\n    return (\r\n      <Card className={classNames(classes.cardProduct, isWidthUp('sm', width) && list ? classes.cardList : '')}>\r\n        <div className={classes.status}>\r\n          {status}\r\n        </div>\r\n        <CardMedia\r\n          className={classes.mediaProduct}\r\n          image={topics}\r\n          title={title}\r\n        />\r\n        <CardContent className={classes.floatingButtonWrap}>\r\n          <Typography noWrap gutterBottom variant=\"h5\" className={classes.title} component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography component=\"p\" className={classes.desc}>\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.price}>\r\n          <Typography variant=\"h5\">\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={editItem}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Typography>\r\n          <div className={classes.rightAction}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={detailOpen}\r\n            >\r\n              See More\r\n            </Button>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst CourseCardResponsive = withWidth()(CourseCard);\r\nexport default withStyles(styles)(CourseCardResponsive);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\constants.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\InformationTechnologyLayout.js",["2074"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport  GuideSlider  from '../../components/GuideSlider';\r\nimport { toggleAction, openAction, playTransitionAction } from '../../actions/uiactions';\r\nimport LeftSidebarLayout from './LeftSidebarLayout';\r\nimport RightSidebarLayout from './RightSidebarLayout';\r\nimport LeftSidebarBigLayout from './LeftSidebarBigLayout';\r\nimport DropMenuLayout from './DropMenuLayout';\r\nimport MegaMenuLayout from './MegaMenuLayout';\r\nimport styles from './appStyles-jss';\r\n\r\nclass InformationTechnologyLayout extends React.Component {\r\n  // Initial header style\r\n  state = {\r\n    openGuide: false,\r\n    appHeight: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const {  loadTransition } = this.props;\r\n\r\n    // Adjust min height\r\n    this.setState({ appHeight: window.innerHeight + 112 });\r\n\r\n    // Set expanded sidebar menu\r\n\r\n    // Play page transition\r\n    loadTransition(true);\r\n\r\n    // Execute all arguments when page changes\r\n\r\n  }\r\n\r\n  handleOpenGuide = () => {\r\n    this.setState({ openGuide: true });\r\n  };\r\n\r\n  handleCloseGuide = () => {\r\n    this.setState({ openGuide: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      history,\r\n      gradient,\r\n      deco,\r\n      bgPosition,\r\n      layout,\r\n      changeMode\r\n    } = this.props;\r\n    const { openGuide, appHeight } = this.state;\r\n    const titleException = ['/app', '/app/crm-dashboard', '/app/crypto-dashboard'];\r\n    // const parts = history.location.pathname.split('/');\r\n    // const place = parts[parts.length - 1].replace('-', ' ');\r\n    return (\r\n      <div\r\n        style={{ minHeight: appHeight }}\r\n        className={\r\n          classNames(\r\n            classes.appFrameInner,\r\n            layout === 'top-navigation' || layout === 'mega-menu' ? classes.topNav : classes.sideNav,\r\n            mode === 'dark' ? 'dark-mode' : 'light-mode'\r\n          )\r\n        }\r\n      >\r\n        <GuideSlider openGuide={openGuide} closeGuide={this.handleCloseGuide} />\r\n        { /* Left Sidebar Layout */\r\n          layout === 'left-sidebar' && (\r\n            <LeftSidebarLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </LeftSidebarLayout>\r\n          )\r\n        }\r\n        { /* Left Big-Sidebar Layout */\r\n          layout === 'big-sidebar' && (\r\n            <LeftSidebarBigLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              mode={mode}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </LeftSidebarBigLayout>\r\n          )\r\n        }\r\n        { /* Right Sidebar Layout */\r\n          layout === 'right-sidebar' && (\r\n            <RightSidebarLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </RightSidebarLayout>\r\n          )\r\n        }\r\n        { /* Top Bar with Dropdown Menu */\r\n          layout === 'top-navigation' && (\r\n            <DropMenuLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </DropMenuLayout>\r\n          )\r\n        }\r\n        { /* Top Bar with Mega Menu */\r\n          layout === 'mega-menu' && (\r\n            <MegaMenuLayout\r\n              history={history}\r\n              toggleDrawer={toggleDrawer}\r\n              loadTransition={loadTransition}\r\n              changeMode={changeMode}\r\n              sidebarOpen={sidebarOpen}\r\n              pageLoaded={pageLoaded}\r\n              mode={mode}\r\n              gradient={gradient}\r\n              deco={deco}\r\n              bgPosition={bgPosition}\r\n              titleException={titleException}\r\n              handleOpenGuide={this.handleOpenGuide}\r\n            >\r\n              { children }\r\n            </MegaMenuLayout>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInformationTechnologyLayout.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // children: PropTypes.node.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n  // initialOpen: PropTypes.func.isRequired,\r\n  // toggleDrawer: PropTypes.func.isRequired,\r\n  // loadTransition: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // sidebarOpen: PropTypes.bool.isRequired,\r\n  // pageLoaded: PropTypes.bool.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // deco: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // layout: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  sidebarOpen: state.ui.sidebarOpen,\r\n  pageLoaded: state.ui.pageLoaded,\r\n  mode: state.ui.mode,\r\n  gradient: state.ui.gradient,\r\n  deco: state.ui.deco,\r\n  layout: state.ui.layout,\r\n  bgPosition: state.ui.bgPosition,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDrawer: () => dispatch(toggleAction),\r\n  initialOpen: bindActionCreators(openAction, dispatch),\r\n  loadTransition: bindActionCreators(playTransitionAction, dispatch),\r\n});\r\n\r\nconst DashboardMaped = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InformationTechnologyLayout);\r\n\r\nexport default (withStyles(styles)(DashboardMaped));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\profile-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\table\\useTable.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\courseTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\uitypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\PapperBlock\\PapperBlock.js",["2075"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'recompose';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GiAbstract014 } from \"react-icons/gi\";\r\nimport styles from './papperStyle-jss';\r\n\r\nclass PapperBlock extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      title,\r\n      desc,\r\n      children,\r\n      whiteBg,\r\n      noMargin,\r\n      colorMode,\r\n      overflowX,\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classNames(classes.root, noMargin && classes.noMargin, colorMode && classes.colorMode)} elevation={0}>\r\n          <div className={classes.descBlock}>\r\n            <span className={classes.iconTitle}>\r\n              <GiAbstract014/>\r\n            </span>\r\n            <div className={classes.titleText}>\r\n              <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\r\n                {title}\r\n              </Typography>\r\n              <Typography component=\"p\" className={classes.description}>\r\n                {desc}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <section className={classNames(classes.content, whiteBg && classes.whiteBg, overflowX && classes.overflowX)}>\r\n            {children}\r\n          </section>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PapperBlock.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   title: PropTypes.string.isRequired,\r\n//   desc: PropTypes.string.isRequired,\r\n//   icon: PropTypes.string,\r\n//   children: PropTypes.node.isRequired,\r\n//   whiteBg: PropTypes.bool,\r\n//   colorMode: PropTypes.bool,\r\n//   noMargin: PropTypes.bool,\r\n//   overflowX: PropTypes.bool,\r\n// };\r\n\r\nPapperBlock.defaultProps = {\r\n  whiteBg: false,\r\n  noMargin: false,\r\n  colorMode: false,\r\n  overflowX: false,\r\n  icon: 'ios-bookmark-outline'\r\n};\r\n\r\nexport default compose(withStyles(styles))(PapperBlock);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\LayoutThumb.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\settings-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\ThemeThumbs.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\alertTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\reportTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\assetTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\choiceTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\gradingTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\MegaMenuThumb.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\TopNavigationThumb.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarBigThumb.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\LeftSidebarThumb.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\peopleTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\journalTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\classTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\ledgerTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\currencyTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\workbookTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\inactiveaccountTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\taxTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\accountTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\admissionTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\attendanceTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\feeTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\curriculumTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\types\\authTypes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\theme\\darkPalette.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\theme\\lightPalette.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\utility.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\navigationConfig.js",["2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\cardStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\PapperBlock\\papperStyle-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\theme\\themePalette.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\TemplateSettings\\templatePreview\\thumbPreview-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\MegaMenuLayout.js",["2094"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport HeaderMenu from '../../components/Header/HeaderMenu';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass DropMenuLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <HeaderMenu\r\n          type=\"mega-menu\"\r\n          dataMenu={navigationConfig}\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          openMobileNav={sidebarOpen}\r\n          loadTransition={loadTransition}\r\n          logoLink=\"/itdashboard\"\r\n        />\r\n        <main\r\n          className={\r\n            classNames(\r\n              classes.content,\r\n              classes.highMargin\r\n            )\r\n          }\r\n          id=\"mainContent\"\r\n        >\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.topbarLayout)}>\r\n            \r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDropMenuLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(DropMenuLayout));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\DropMenuLayout.js",["2095"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport HeaderMenu from '../../components/Header/HeaderMenu';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass DropMenuLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      bgPosition,\r\n      changeMode,\r\n      history,\r\n      titleException,\r\n      handleOpenGuide,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <HeaderMenu\r\n          type=\"top-navigation\"\r\n          dataMenu={navigationConfig}\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          openMobileNav={sidebarOpen}\r\n          loadTransition={loadTransition}\r\n          logoLink=\"/itdashboard\"\r\n        />\r\n        <main\r\n          className={\r\n            classNames(\r\n              classes.content,\r\n              classes.highMargin\r\n            )\r\n          }\r\n          id=\"mainContent\"\r\n        >\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.topbarLayout)}>\r\n              <div>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">viola</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDropMenuLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(DropMenuLayout));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarBigLayout.js",["2096"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Header from '../../components/Header/Header';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport SidebarBig from '../SidebarBig';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass LeftSidebarBigLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide,\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"left-sidebar-big\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <SidebarBig\r\n          dataMenu={navigationConfig}\r\n          loadTransition={loadTransition}\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingLeftBig : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLeftSidebarBigLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  // place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LeftSidebarBigLayout);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\RightSidebarLayout.js",["2097"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport Header from '../../components/Header/Header';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass RightSidebarLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      history,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"right-sidebar\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingRight : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n            \r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n        <Sidebar\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          loadTransition={loadTransition}\r\n          dataMenu={navigationConfig}\r\n          leftSidebar={false}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nRightSidebarLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  pageLoaded: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  bgPosition: PropTypes.string.isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  titleException: PropTypes.array.isRequired,\r\n  handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(RightSidebarLayout));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\LeftSidebarLayout.js",["2098","2099","2100"],"import React, { Fragment } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BreadCrumb from '../../components/BreadCrumb/BreadCrumb';\r\nimport Header from '../../components/Header/Header';\r\nimport Sidebar from './Sidebar';\r\nimport navigationConfig from '../navigations/navigationConfig';\r\nimport Decoration from '../../containers/Templates/Decoration';\r\nimport styles from './appStyles-jss';\r\n\r\nclass LeftSidebarLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      toggleDrawer,\r\n      sidebarOpen,\r\n      loadTransition,\r\n      pageLoaded,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      history,\r\n      bgPosition,\r\n      changeMode,\r\n      place,\r\n      titleException,\r\n      handleOpenGuide\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          toggleDrawerOpen={toggleDrawer}\r\n          margin={sidebarOpen}\r\n          gradient={gradient}\r\n          position=\"left-sidebar\"\r\n          changeMode={changeMode}\r\n          mode={mode}\r\n          title={place}\r\n          history={history}\r\n          openGuide={handleOpenGuide}\r\n        />\r\n        <Sidebar\r\n          open={sidebarOpen}\r\n          toggleDrawerOpen={toggleDrawer}\r\n          loadTransition={loadTransition}\r\n          leftSidebar\r\n        />\r\n        <main className={classNames(classes.content, !sidebarOpen ? classes.contentPaddingLeft : '')} id=\"mainContent\">\r\n          <Decoration\r\n            mode={mode}\r\n            gradient={gradient}\r\n            decoration={deco}\r\n            bgPosition={bgPosition}\r\n            horizontalMenu={false}\r\n          />\r\n          <section className={classNames(classes.mainWrap, classes.sidebarLayout)}>\r\n              <div className={classes.pageTitle}>\r\n                <Typography component=\"h4\" className={bgPosition === 'header' ? classes.darkTitle : classes.lightTitle} variant=\"h4\">{place}</Typography>\r\n                <BreadCrumb separator=\" / \" theme={bgPosition === 'header' ? 'dark' : 'light'} />\r\n              </div>\r\n\r\n            { !pageLoaded && (<img src=\"/images/spinner.gif\" alt=\"spinner\" className={classes.circularProgress} />) }\r\n            <Fade\r\n              in={pageLoaded}\r\n              {...(pageLoaded ? { timeout: 700 } : {})}\r\n            >\r\n              <div className={!pageLoaded ? classes.hideApp : ''}>\r\n                {/* Application content will load here */}\r\n                { children }\r\n              </div>\r\n            </Fade>\r\n          </section>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLeftSidebarLayout.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // children: PropTypes.node.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n  // toggleDrawer: PropTypes.func.isRequired,\r\n  // loadTransition: PropTypes.func.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // sidebarOpen: PropTypes.bool.isRequired,\r\n  // pageLoaded: PropTypes.bool.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // deco: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // place: PropTypes.string.isRequired,\r\n  // titleException: PropTypes.array.isRequired,\r\n  // handleOpenGuide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withStyles(styles)(LeftSidebarLayout));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\GuideSlider\\index.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\Decoration.js",["2101"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport decorationLight from '../../images/decoration_light.svg';\r\nimport decorationDark from '../../images/decoration_dark.svg';\r\nimport petalLight from '../../images/petal_bg.svg';\r\nimport styles from './appStyles-jss';\r\n\r\nclass Decoration extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      mode,\r\n      gradient,\r\n      decoration,\r\n      bgPosition,\r\n      horizontalMenu\r\n    } = this.props;\r\n    const getBgPosition = position => {\r\n      if (position === 'header') {\r\n        return classes.headerBg;\r\n      }\r\n      if (position === 'half') {\r\n        return classes.halfBg;\r\n      }\r\n      return classes.fullBg;\r\n    };\r\n    const renderDecor = (type, position) => {\r\n      const mergeDeco = type + '-' + position;\r\n      if (mergeDeco === 'dark-half') {\r\n        return (\r\n          <img src={decorationDark} alt=\"decoration\" className={classes.decorationWave} />\r\n        );\r\n      }\r\n      if (mergeDeco === 'dark-full') {\r\n        return (\r\n          <img src={petalLight} alt=\"decoration\" className={classes.decorationPetal} />\r\n        );\r\n      }\r\n      if (mergeDeco === 'light-half') {\r\n        return (\r\n          <img src={decorationLight} alt=\"decoration\" className={classes.decorationWave} />\r\n        );\r\n      }\r\n      if (mergeDeco === 'light-full') {\r\n        return (\r\n          <img src={petalLight} alt=\"decoration\" className={classes.decorationPetal} />\r\n        );\r\n      }\r\n      return false;\r\n    };\r\n    return (\r\n      <div className={classes.bgWrap}>\r\n        <div\r\n          className={classNames(\r\n            classes.bgbar,\r\n            horizontalMenu && classes.highTop,\r\n            gradient ? classes.gradientBg : classes.solidBg,\r\n            getBgPosition(bgPosition),\r\n          )}\r\n        >\r\n          { decoration && renderDecor(mode, bgPosition) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDecoration.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // decoration: PropTypes.bool.isRequired,\r\n  // bgPosition: PropTypes.string.isRequired,\r\n  // horizontalMenu: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default (withStyles(styles)(Decoration));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\Sidebar.js",["2102"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport styles from './sidebar-jss';\r\nimport DumbalinyoloNavigation from '../navigations/DumbalinyoloNavigation';\r\n\r\nclass Sidebar extends React.Component {\r\n  state = {\r\n    status: dummy.user.status,\r\n    anchorEl: null,\r\n    turnDarker: false\r\n  };\r\n\r\n  // Initial header style\r\n  flagDarker = false;\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    const newFlagDarker = (scroll > 30);\r\n    if (this.flagDarker !== newFlagDarker) {\r\n      this.setState({ turnDarker: newFlagDarker });\r\n      this.flagDarker = newFlagDarker;\r\n    }\r\n  }\r\n\r\n  handleOpen = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleChangeStatus = status => {\r\n    this.setState({ status });\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      open,\r\n      toggleDrawerOpen,\r\n      loadTransition,\r\n      leftSidebar,\r\n      dataMenu\r\n    } = this.props;\r\n    const { status, anchorEl, turnDarker } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Hidden lgUp>\r\n          <SwipeableDrawer\r\n            onClose={toggleDrawerOpen}\r\n            onOpen={toggleDrawerOpen}\r\n            open={!open}\r\n            anchor={leftSidebar ? 'left' : 'right'}\r\n          >\r\n            <div className={classes.swipeDrawerPaper}>\r\n              <DumbalinyoloNavigation\r\n                drawerPaper\r\n                leftSidebar={leftSidebar}\r\n                toggleDrawerOpen={toggleDrawerOpen}\r\n                loadTransition={loadTransition}\r\n                status={status}\r\n                anchorEl={anchorEl}\r\n                openMenuStatus={this.handleOpen}\r\n                closeMenuStatus={this.handleClose}\r\n                changeStatus={this.handleChangeStatus}\r\n              />\r\n            </div>\r\n          </SwipeableDrawer>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            onClose={toggleDrawerOpen}\r\n            className={open ? classes.drawer : ''}\r\n            classes={{\r\n              paper: classNames(classes.drawer, classes.drawerPaper, !open ? classes.drawerPaperClose : ''),\r\n            }}\r\n            open={open}\r\n            anchor={leftSidebar ? 'left' : 'right'}\r\n          >\r\n            <DumbalinyoloNavigation\r\n              drawerPaper={open}\r\n              leftSidebar={leftSidebar}\r\n              turnDarker={turnDarker}\r\n              loadTransition={loadTransition}\r\n              status={status}\r\n              anchorEl={anchorEl}\r\n              openMenuStatus={this.handleOpen}\r\n              closeMenuStatus={this.handleClose}\r\n              changeStatus={this.handleChangeStatus}\r\n            />\r\n          </Drawer>\r\n        </Hidden>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  toggleDrawerOpen: PropTypes.func.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  leftSidebar: PropTypes.bool,\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  leftSidebar: true\r\n};\r\n\r\nexport default withStyles(styles)(Sidebar);\r\n\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\Header.js",["2103","2104","2105","2106"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserMenu from './UserMenu';\r\nimport SearchUi from '../Search/SearchUi';\r\nimport styles from './header-jss';\r\n\r\nconst elem = document.documentElement;\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    open: false,\r\n    fullScreen: false,\r\n    turnDarker: false,\r\n    showTitle: false\r\n  };\r\n\r\n  // Initial header style\r\n  flagDarker = false;\r\n\r\n  flagTitle = false;\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    const newFlagDarker = (scroll > 30);\r\n    const newFlagTitle = (scroll > 40);\r\n    if (this.flagDarker !== newFlagDarker) {\r\n      this.setState({ turnDarker: newFlagDarker });\r\n      this.flagDarker = newFlagDarker;\r\n    }\r\n    if (this.flagTitle !== newFlagTitle) {\r\n      this.setState({ showTitle: newFlagTitle });\r\n      this.flagTitle = newFlagTitle;\r\n    }\r\n  }\r\n\r\n  openFullScreen = () => {\r\n    this.setState({ fullScreen: true });\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) { /* Firefox */\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) { /* IE/Edge */\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n\r\n  closeFullScreen = () => {\r\n    this.setState({ fullScreen: false });\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n  };\r\n\r\n  turnMode = mode => {\r\n    const { changeMode } = this.props;\r\n\r\n    if (mode === 'light') {\r\n      changeMode('dark');\r\n    } else {\r\n      changeMode('light');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      toggleDrawerOpen,\r\n      margin,\r\n      position,\r\n      gradient,\r\n      mode,\r\n      title,\r\n      openGuide,\r\n      history\r\n    } = this.props;\r\n    const {\r\n      fullScreen,\r\n      open,\r\n      turnDarker,\r\n      showTitle\r\n    } = this.state;\r\n\r\n    const setMargin = (sidebarPosition) => {\r\n      if (sidebarPosition === 'right-sidebar') {\r\n        return classes.right;\r\n      }\r\n      if (sidebarPosition === 'left-sidebar-big') {\r\n        return classes.leftBig;\r\n      }\r\n      return classes.left;\r\n    };\r\n\r\n    return (\r\n      <AppBar\r\n        className={\r\n          classNames(\r\n            classes.appBar,\r\n            classes.floatingBar,\r\n            margin && classes.appBarShift,\r\n            setMargin(position),\r\n            turnDarker && classes.darker,\r\n            gradient ? classes.gradientBg : classes.solidBg\r\n          )\r\n        }\r\n      >\r\n        <Toolbar disableGutters={!open}>\r\n          <Fab\r\n            size=\"small\"\r\n            className={classes.menuButton}\r\n            aria-label=\"Menu\"\r\n            onClick={toggleDrawerOpen}\r\n          >\r\n            <MenuIcon />\r\n          </Fab>\r\n          <Hidden smDown>\r\n            <div className={classes.headerProperties}>\r\n              <div className={classNames(classes.headerAction, showTitle && classes.fadeOut)}>\r\n                {fullScreen ? (\r\n                  <Tooltip title=\"Exit Full Screen\" placement=\"bottom\">\r\n                    <IconButton className={classes.button} onClick={this.closeFullScreen}>\r\n                      <i className=\"ion-ios-crop\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                ) : (\r\n                  <Tooltip title=\"Full Screen\" placement=\"bottom\">\r\n                    <IconButton className={classes.button} onClick={this.openFullScreen}>\r\n                      <i className=\"ion-ios-crop\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                )}\r\n              </div>\r\n              <Typography component=\"h2\" className={classNames(classes.headerTitle, showTitle && classes.show)}>\r\n                {title}\r\n              </Typography>\r\n            </div>\r\n          </Hidden>\r\n          <div className={classes.searchWrapper}>\r\n            <div className={classNames(classes.wrapper, classes.light)}>\r\n              <div className={classes.search}>\r\n                <SearchIcon />\r\n              </div>\r\n              <SearchUi history={history} />\r\n            </div>\r\n          </div>\r\n          <Hidden xsDown>\r\n            <span className={classes.separatorV} />\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // toggleDrawerOpen: PropTypes.func.isRequired,\r\n  // margin: PropTypes.bool.isRequired,\r\n  // gradient: PropTypes.bool.isRequired,\r\n  // position: PropTypes.string.isRequired,\r\n  // mode: PropTypes.string.isRequired,\r\n  // title: PropTypes.string.isRequired,\r\n  // changeMode: PropTypes.func.isRequired,\r\n  // openGuide: PropTypes.func.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\BreadCrumb.js",["2107","2108","2109"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport styles from './breadCrumb-jss';\r\n\r\nconst Breadcrumbs = (props) => {\r\n  const {\r\n    classes,\r\n    theme,\r\n  } = props;\r\n  return (\r\n    <section className={classNames(theme === 'dark' ? classes.dark : classes.light, classes.breadcrumbs)}>\r\n      <Route\r\n        path=\"*\"\r\n        render={() => {\r\n          \r\n          \r\n          return (\r\n            <p>\r\n              You are here:\r\n            </p>\r\n          );\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nBreadcrumbs.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // location: PropTypes.object.isRequired,\r\n  // theme: PropTypes.string.isRequired,\r\n  // separator: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Breadcrumbs);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\Sidebar\\index.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\GuideSlider\\guide-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\layout\\sidebar-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavigation.js",["2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport brand from '../../api/dummy/brand';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport logo from '../../images/logo.svg';\r\nimport Navigation from './Navigation';\r\n\r\n\r\nimport styles from '../layout/sidebar-jss';\r\n\r\nclass DumbalinyoloNavigation extends React.Component {\r\n  state = {\r\n    transform: 0,\r\n  };\r\n\r\n\r\n  componentDidMount = () => {\r\n    // Scroll content to top\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = (event) => {\r\n    const scroll = event.target.scrollTop;\r\n    this.setState({\r\n      transform: scroll\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      turnDarker,\r\n      drawerPaper,\r\n      toggleDrawerOpen,\r\n      loadTransition,\r\n      leftSidebar,\r\n      dataMenu,\r\n      status,\r\n      anchorEl,\r\n      openMenuStatus,\r\n      closeMenuStatus,\r\n      changeStatus,\r\n      isLogin\r\n    } = this.props;\r\n    const { transform } = this.state;\r\n\r\n    const setStatus = st => {\r\n      switch (st) {\r\n        case 'online':\r\n          return classes.online;\r\n        case 'idle':\r\n          return classes.idle;\r\n        case 'bussy':\r\n          return classes.bussy;\r\n        default:\r\n          return classes.offline;\r\n      }\r\n    };\r\n    return (\r\n      <div className={classNames(classes.drawerInner, !drawerPaper ? classes.drawerPaperClose : '')}>\r\n        \r\n        <div\r\n          id=\"sidebar\"\r\n          className={\r\n            classNames(\r\n              classes.menuContainer,\r\n              leftSidebar && classes.rounded,\r\n              isLogin && classes.withProfile\r\n            )\r\n          }\r\n        >\r\n          <Navigation\r\n            loadTransition={loadTransition}\r\n            toggleDrawerOpen={toggleDrawerOpen}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDumbalinyoloNavigation.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // drawerPaper: PropTypes.bool.isRequired,\r\n  // turnDarker: PropTypes.bool,\r\n  // toggleDrawerOpen: PropTypes.func,\r\n  // loadTransition: PropTypes.func,\r\n  // leftSidebar: PropTypes.bool.isRequired,\r\n  // dataMenu: PropTypes.array.isRequired,\r\n  // status: PropTypes.string.isRequired,\r\n  // anchorEl: PropTypes.object,\r\n  // openMenuStatus: PropTypes.func.isRequired,\r\n  // closeMenuStatus: PropTypes.func.isRequired,\r\n  // changeStatus: PropTypes.func.isRequired,\r\n  // isLogin: PropTypes.bool\r\n};\r\n\r\nDumbalinyoloNavigation.defaultProps = {\r\n  turnDarker: false,\r\n  toggleDrawerOpen: () => {},\r\n  loadTransition: () => {},\r\n  anchorEl: null,\r\n  isLogin: true,\r\n};\r\n\r\nexport default withStyles(styles)(DumbalinyoloNavigation);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\UserMenu.js",["2128"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Info from '@material-ui/icons/Info';\r\nimport Warning from '@material-ui/icons/Warning';\r\nimport Check from '@material-ui/icons/CheckCircle';\r\nimport Error from '@material-ui/icons/RemoveCircle';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport avatarApi from '../../api/images/avatars';\r\nimport link from '../../api/ui/link';\r\nimport styles from './header-jss';\r\n\r\nclass UserMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n    openMenu: null\r\n  };\r\n\r\n  handleMenu = menu => (event) => {\r\n    const { openMenu } = this.state;\r\n    this.setState({\r\n      openMenu: openMenu === menu ? null : menu,\r\n      anchorEl: event.currentTarget\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null, openMenu: null });\r\n  };\r\n\r\n  render() {\r\n    const { classes, dark } = this.props;\r\n    const { anchorEl, openMenu } = this.state;\r\n    return (\r\n      <div>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleMenu('notification')}\r\n          color=\"inherit\"\r\n          className={classNames(classes.notifIcon, dark ? classes.dark : classes.light)}\r\n        >\r\n          <Badge className={classes.badge} badgeContent={4} color=\"secondary\">\r\n            <i className=\"ion-ios-bell-outline\" />\r\n          </Badge>\r\n        </IconButton>\r\n        <Menu\r\n          id=\"menu-notification\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          className={classes.notifMenu}\r\n          PaperProps={{\r\n            style: {\r\n              width: 350,\r\n            },\r\n          }}\r\n          open={openMenu === 'notification'}\r\n          onClose={this.handleClose}\r\n        >\r\n          <MenuItem onClick={this.handleClose}>\r\n            <div >\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"User Name\" src={avatarApi[0]} />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={dummy.text.subtitle} secondary={dummy.text.date} />\r\n            </div>\r\n          </MenuItem>\r\n          <Divider variant=\"inset\" />\r\n          <Divider variant=\"inset\" />\r\n          <MenuItem onClick={this.handleClose}>\r\n            <div >\r\n              <ListItemAvatar>\r\n                <Avatar >\r\n                  <Check />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={dummy.text.subtitle} className={classes.textNotif} secondary={dummy.text.date} />\r\n            </div>\r\n          </MenuItem>\r\n          <Divider variant=\"inset\" />\r\n          <MenuItem onClick={this.handleClose}>\r\n            <div >\r\n              <ListItemAvatar>\r\n                <Avatar >\r\n                  <Warning />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={dummy.text.subtitle} className={classes.textNotif} secondary={dummy.text.date} />\r\n            </div>\r\n          </MenuItem>\r\n          <Divider variant=\"inset\" />\r\n          <MenuItem onClick={this.handleClose}>\r\n            <div >\r\n              <ListItemAvatar>\r\n                <Avatar >\r\n                  <Error />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Suspendisse pharetra pulvinar sollicitudin. Aenean ut orci eu odio cursus lobortis eget tempus velit. \" className={classes.textNotif} secondary=\"Jan 9, 2016\" />\r\n            </div>\r\n          </MenuItem>\r\n        </Menu>\r\n        <Button onClick={this.handleMenu('user-setting')}>\r\n          <Avatar\r\n            alt={dummy.user.name}\r\n            src={dummy.user.avatar}\r\n          />\r\n        </Button>\r\n        <Menu\r\n          id=\"menu-appbar\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={openMenu === 'user-setting'}\r\n          onClose={this.handleClose}\r\n        >\r\n          <MenuItem onClick={this.handleClose} component={Link} to={link.profile}>My Profile</MenuItem>\r\n          <MenuItem onClick={this.handleClose} component={Link} to={link.calendar}>My Calendar</MenuItem>\r\n          <MenuItem onClick={this.handleClose} component={Link} to={link.email}>\r\n            My Inbox\r\n            <ListItemIcon>\r\n              <Badge className={classNames(classes.badge, classes.badgeMenu)} badgeContent={2} color=\"secondary\" />\r\n            </ListItemIcon>\r\n          </MenuItem>\r\n          <Divider />\r\n          <MenuItem onClick={this.handleClose} component={Link} to=\"/\">\r\n            <ListItemIcon>\r\n              <ExitToApp />\r\n            </ListItemIcon>\r\n            Log Out\r\n          </MenuItem>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUserMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  dark: PropTypes.bool,\r\n};\r\n\r\nUserMenu.defaultProps = {\r\n  dark: false\r\n};\r\n\r\nexport default withStyles(styles)(UserMenu);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\header-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\BreadCrumb\\breadCrumb-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\api\\dummy\\guideData.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\api\\dummy\\dummyContents.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Search\\SearchUi.js",["2129"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport { NavLink } from 'react-router-dom';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport suggestionsApi from '../../api/ui/menu';\r\nimport styles from './search-jss';\r\n\r\nconst menu = [];\r\n\r\nfunction renderInput(inputProps) {\r\n  const { classes, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.inputHeader}\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: ref,\r\n        ...other,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.name, query);\r\n  const parts = parse(suggestion.name, matches);\r\n  return (\r\n    <MenuItem button selected={isHighlighted} component={NavLink} to={suggestion.link}>\r\n      <div>\r\n        {parts.map((part, index) => (\r\n          part.highlight ? (\r\n            <span key={String(index)} style={{ fontWeight: 700 }}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n              {part.text}\r\n            </strong>\r\n          )\r\n        ))}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction renderSuggestionsContainer(options) {\r\n  const { containerProps, children } = options;\r\n\r\n  return (\r\n    <Paper {...containerProps}>\r\n      {children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name;\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n  return inputLength === 0 ? [] : menu.filter(suggestion => {\r\n    const keep = (!inputValue || suggestion.name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1) && count < 5;\r\n\r\n    if (keep) {\r\n      count += 1;\r\n    }\r\n\r\n    return keep;\r\n  });\r\n}\r\n\r\nclass SearchUi extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    suggestionsApi.map(item => {\r\n      if (item.child) {\r\n        item.child.map(itemChild => {\r\n          if (itemChild.link) {\r\n            menu.push(itemChild);\r\n          }\r\n          return menu;\r\n        });\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value),\r\n    });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  handleChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  handleSuggestionSelected = (event, { suggestion, method }) => {\r\n    const { history } = this.props;\r\n    if (method === 'enter') {\r\n      history.push(suggestion.link);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { suggestions, value } = this.state;\r\n\r\n    return (\r\n      <Autosuggest\r\n        theme={{\r\n          container: classes.containerSearch,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion,\r\n        }}\r\n        renderInputComponent={renderInput}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\r\n        renderSuggestionsContainer={renderSuggestionsContainer}\r\n        getSuggestionValue={getSuggestionValue}\r\n        onSuggestionSelected={this.handleSuggestionSelected}\r\n        renderSuggestion={renderSuggestion}\r\n        className={classes.autocomplete}\r\n        inputProps={{\r\n          classes,\r\n          placeholder: 'Search UI',\r\n          value,\r\n          onChange: this.handleChange,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSearchUi.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SearchUi);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\Sidebar\\SidebarContent.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Sidebar\\sidebar-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\HeaderMenu.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\Navigation.js",["2130","2131"],"import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport navigationConfig from \"./navigationConfig\";\r\nimport DumbalinyoloNavGroup from \"./DumbalinyoloNavGroup\";\r\nimport DumbalinyoloNavCollapse from \"./DumbalinyoloNavCollapse\";\r\nimport DumbalinyoloNavItem from \"./DumbalinyoloNavItem\";\r\nimport DumbalinyoloNavLink from \"./DumbalinyoloNavLink\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: theme.mixins.toolbar,\r\n  logoBg: {\r\n    backgroundColor: theme.palette.type !== \"dark\" && \"#18202c\",\r\n    // backgroundColor: \"#18202c\"\r\n  },\r\n  logo: {\r\n    padding: \"1rem\",\r\n    \"& span\": {\r\n      display: \"block\",\r\n      color: \"rgba(41, 113, 245, 0.87)\",\r\n    },\r\n  },\r\n  navCustom: {\r\n    \"& .MuiTypography-root\": {\r\n      fontSize: \".85rem\",\r\n    },\r\n    \"& .MuiListItemIcon-root\": {\r\n      minWidth: \"35px\",\r\n    },\r\n    \"& .MuiCollapse-wrapperInner a\": {\r\n      paddingLeft: \"50px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navigation = (props) => {\r\n  const classes = useStyles(props);\r\n  // handleClick(){\r\n  //   const {toggleDrawerOpen, loadTransition} = props;\r\n  //   toggleDrawerOpen();\r\n  //   loadTransition(false);\r\n\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <List className={classes.navCustom}>\r\n        {navigationConfig.map((item) => (\r\n          <React.Fragment key={item.id}>\r\n            {item.type === \"group\" && <DumbalinyoloNavGroup item={item} />}\r\n\r\n            {item.type === \"collapse\" && <DumbalinyoloNavCollapse item={item} />}\r\n\r\n            {item.type === \"item\" && <DumbalinyoloNavItem item={item} />}\r\n\r\n            {item.type === \"link\" && <DumbalinyoloNavLink item={item} />}\r\n\r\n            {item.type === \"divider\" && <Divider className=\"my-16\" />}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n\r\n\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\api\\ui\\link.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\api\\images\\avatars.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Search\\search-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\api\\ui\\menu.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\SidebarBig\\index.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\api\\dummy\\brand.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Sidebar\\MainMenu.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\MegaMenu.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavLink.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavItem.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavGroup.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavCollapse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Header\\DropListMenu.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MainMenuBig.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\SidebarBig\\sidebarBig-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\DumbalinyoloNavBadge.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\navigations\\NavLinkAdapter.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\SidebarBig\\MenuProfile.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\objectives\\AddObjective.js",["2132","2133","2134","2135"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddObjective = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    name: '',\r\n    description: '',\r\n    topic_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.descriptiom = fieldValues.description? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddObjective;\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Controls.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Popup.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\guidelines\\AddGuideLine.js",["2136","2137","2138","2139"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddGuideLine = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    name: '',\r\n    description: '',\r\n    topic_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.descriptiom = fieldValues.description? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddGuideLine;\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\AddSubTopic.js",["2140","2141","2142","2143"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddSubTopic = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    title: '',\r\n    topic_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('title' in fieldValues)\r\n        temp.title = fieldValues.title ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"title\"\r\n                          label=\"TITLE\"\r\n                          value={values.title}\r\n                          onChange={handleInputChange}\r\n                          error={errors.title}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddSubTopic;\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\subtopics\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\SearchTopic.js",["2144","2145","2146","2147","2148","2149","2150"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ViewList from '@material-ui/icons/ViewList';\r\nimport GridOn from '@material-ui/icons/GridOn';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport styles from './search-jss';\r\n\r\nclass SearchCourse extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorEl, } = this.state;\r\n    const {\r\n      classes,\r\n      courseData,\r\n      handleSwitchView,\r\n      listView\r\n    } = this.props;\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"inherit\">\r\n          <Toolbar>\r\n            <div className={classes.flex}>\r\n              <div className={classes.wrapper}>\r\n                <div className={classes.search}>\r\n                  <SearchIcon />\r\n                </div>\r\n                <input className={classes.input} placeholder=\"Search Course\" />\r\n              </div>\r\n            </div>\r\n            <Hidden mdDown>\r\n              <div className={classes.toggleContainer}>\r\n                <ToggleButtonGroup value={listView} exclusive onChange={handleSwitchView}>\r\n                  <ToggleButton value=\"grid\">\r\n                    <GridOn />\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"list\">\r\n                    <ViewList />\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </div>\r\n            </Hidden>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(SearchCourse);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\AddTopic.js",["2151","2152","2153","2154","2155"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddTopic = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    title: '',\r\n    content_overview: '',\r\n    assessment_overview: '',\r\n    assessment_overview: '',\r\n    course_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('title' in fieldValues)\r\n        temp.title = fieldValues.title ? \"\" : \"This field is required.\"\r\n    if ('content_overview' in fieldValues)\r\n        temp.content_overview = fieldValues.content_overview ? \"\" : \"This field is required.\"\r\n    if ('assessment_overview' in fieldValues)\r\n        temp.assessment_overview = fieldValues.assessment_overview ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"title\"\r\n                          label=\"TITLE\"\r\n                          value={values.title}\r\n                          onChange={handleInputChange}\r\n                          error={errors.title}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"CONTENT OVERVIEW\"\r\n                          name=\"content_overview\"\r\n                          value={values.content_overview}\r\n                          onChange={handleInputChange}\r\n                          error={errors.content_overview}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          label=\"ASSESMENT OVERVIEW\"\r\n                          name=\"assessment_overview\"\r\n                          value={values.assessment_overview}\r\n                          onChange={handleInputChange}\r\n                          error={errors.assessment_overview}\r\n                      />\r\n\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddTopic;\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\AddNote.js",["2156","2157","2158"],"import React, {  useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport {getStudyNotesApprovalStatusChoices, getStudynotesStatusChoices} from '../../../actions/choices';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst AddNote = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const classes = useStyles();\r\n  const { id } = props;\r\n\r\n  const initialFValues = {\r\n\r\n    title: '',\r\n    note: '',\r\n    status: '',\r\n    approval_status: '',\r\n    subtopic_id: id,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('title' in fieldValues)\r\n        temp.title = fieldValues.title ? \"\" : \"This field is required.\"\r\n    if ('note' in fieldValues)\r\n        temp.note = fieldValues.note? \"\" : \"This field is required.\"\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status? \"\" : \"This field is required.\"\r\n    if ('approval_status' in fieldValues)\r\n        temp.approval_status = fieldValues.approval_status? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!props.fetched){\r\n      props.getStudynotesStatusChoices();\r\n      props.getStudyNotesApprovalStatusChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"title\"\r\n                          label=\"TITLE\"\r\n                          value={values.title}\r\n                          onChange={handleInputChange}\r\n                          error={errors.title}\r\n                      />\r\n                    <TextField\r\n                          name=\"note\"\r\n                          label=\"NOTE\"\r\n                          rows={4}\r\n                          fullWidth\r\n                          id=\"standard-multiline-flexible\"\r\n                          value={values.note}\r\n                          onChange={handleInputChange}\r\n                          error={errors.note}\r\n                      />\r\n\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.DictSelect\r\n                        name=\"status\"\r\n                        label=\"STATUS\"\r\n                        value={values.status}\r\n                        onChange={handleInputChange}\r\n                        options={props.studynotesstatuschoices}\r\n                        error={errors.status}\r\n                    />\r\n                    <Controls.DictSelect\r\n                        name=\"approval_status\"\r\n                        label=\"APPROVAL STATUS\"\r\n                        value={values.approval_status}\r\n                        onChange={handleInputChange}\r\n                        options={props.studynotesapprovalstatuschoices}\r\n                        error={errors.approval_status}\r\n                    />\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    studynotesstatuschoices: state.feechoices.studynotesstatuschoices,\r\n    studynotesapprovalstatuschoices: state.feechoices.studynotesapprovalstatuschoices\r\n\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getStudyNotesApprovalStatusChoices, getStudynotesStatusChoices} )\r\n  (AddNote);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\notes\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\reducers\\timelines.js",["2159"],"\r\nimport {\r\n    FETCH_TIMELINE_DATA\r\n    \r\n  } from '../types/uitypes';\r\n\r\nconst initialState = {\r\n    timelines: [],\r\n\r\n  };\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case FETCH_TIMELINE_DATA:\r\n            return {\r\n                ...state,\r\n                timelines: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n     \r\n\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\reducers\\ui.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\AddCourse.js",["2160"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport { getCourseStatus } from '../../../actions/courses';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n  full_name: '',\r\n  short_name: '',\r\n  status: '',\r\n  start_date: '',\r\n  end_date: '',\r\n  description: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddCourse = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('full_name' in fieldValues)\r\n        temp.full_name = fieldValues.full_name ? \"\" : \"This field is required.\"\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status ? \"\" : \"This field is required.\"\r\n    if ('short_name' in fieldValues)\r\n        temp.short_name = fieldValues.short_name ? \"\" : \"This field is required.\"\r\n    if ('start_date' in fieldValues)\r\n        temp.start_date = fieldValues.start_date ? \"\" : \"This field is required.\"\r\n    if ('end_date' in fieldValues)\r\n        temp.end_date = fieldValues.end_date ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCourseStatus();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"full_name\"\r\n                          label=\"FULL NAME\"\r\n                          value={values.full_name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.full_name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"SHORT NAME\"\r\n                          name=\"short_name\"\r\n                          value={values.short_name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.short_name}\r\n                      />\r\n                      <TextField\r\n                          id=\"ldate\"\r\n                          label=\"START DATE\"\r\n                          type=\"date\"\r\n                          value={values.start_date}\r\n                          name='start_date'\r\n                          error={errors.start_date}\r\n                          defaultValue=\"2021-01-01\"\r\n                          format=\"yy-mm-dd\"\r\n                          onChange={handleInputChange}\r\n                          className={classes.textField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.DictSelect\r\n                          name=\"status\"\r\n                          label=\"STATUS\"\r\n                          value={values.status}\r\n                          onChange={handleInputChange}\r\n                          options={props.coursestatuschoices}\r\n                          error={errors.status}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n                      <TextField\r\n                          id=\"date\"\r\n                          label=\"END DATE\"\r\n                          type=\"date\"\r\n                          value={values.end_date}\r\n                          name='end_date'\r\n                          error={errors.end_date}\r\n                          defaultValue=\"2021-01-01\"\r\n                          format=\"yy-mm-dd\"\r\n                          onChange={handleInputChange}\r\n                          className={classes.textField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        />\r\n\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    coursestatuschoices: state.courses.coursestatuschoices,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCourseStatus} ) (AddCourse);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\SearchCourse.js",["2161","2162","2163","2164","2165","2166","2167"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\CourseCard.js",["2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178","2179"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport classNames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from './cardStyles-jss'\r\nimport four from './four.jpg';\r\n\r\n\r\nclass CourseCard extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      thumbnail,\r\n      full_name,\r\n      short_name,\r\n      id,\r\n      description,\r\n      status,\r\n      start_date,\r\n      end_date,\r\n      list,\r\n      detailOpen,\r\n      width,\r\n      editItem,\r\n      handleClick\r\n    } = this.props;\r\n    return (\r\n      <Card className={classNames(classes.cardProduct, isWidthUp('sm', width) && list ? classes.cardList : '')}>\r\n        <div className={classes.status}>\r\n          {status}\r\n        </div>\r\n        <CardMedia\r\n          className={classes.mediaProduct}\r\n          image={four}\r\n          title={full_name}\r\n        />\r\n        <CardContent className={classes.floatingButtonWrap}>\r\n          <Typography noWrap gutterBottom variant=\"h5\" className={classes.title} component=\"h2\">\r\n            {full_name}\r\n          </Typography>\r\n          <Typography component=\"p\" className={classes.desc}>\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.price}>\r\n          <Typography variant=\"h5\">\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={editItem}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Typography>\r\n          <div className={classes.rightAction}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={detailOpen}\r\n            >\r\n              See More\r\n            </Button>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst CourseCardResponsive = withWidth()(CourseCard);\r\nexport default withStyles(styles)(CourseCardResponsive);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\ExcerciseRecords.js",["2180","2181","2182"],"import React, { useEffect, useState } from \"react\"\r\nimport {  editExcerciseRecord } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport axios from 'axios';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport EditRecord from './EditRecord';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'student', label: 'STUDENT' },\r\n  { id: 'totalmarks', label: 'TOTAL' },\r\n  { id: 'score', label: 'SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst ExcerciseRecords = props => {\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [records, setRecords] = useState([])\r\n\r\n    const {id} =props.data\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editExcerciseRecord(fee.id, fee)    \r\n      else\r\n        console.log(fee)        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/grading/grading-excercise-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Record\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Edit Record\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <EditRecord\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(\r\n  null, \r\n  { editExcerciseRecord} ) \r\n  (ExcerciseRecords);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\GradingBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\gradings.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\ProfileBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\Tests.js",["2183","2184"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'TEST' },\r\n  { id: 'totalmarks', label: 'TOTAL MARKS' },\r\n  { id: 'subject', label: 'SUBJECT' },\r\n  { id: 'score', label: 'STUDENT SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\nconst Tests = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/test-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.subject}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Tests;","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\Excercises.js",["2185","2186"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'TEST' },\r\n  { id: 'totalmarks', label: 'TOTAL MARKS' },\r\n  { id: 'subject', label: 'SUBJECT' },\r\n  { id: 'score', label: 'STUDENT SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\nconst Excercises = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/excercise-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.subject}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Excercises;","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\Attendance.js",["2187","2188"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'attendance', label: 'DATE' },\r\n  { id: 'status', label: 'STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Attendance = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/attendance-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    fetchData();\r\n}, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.attendance}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Attendance;\r\n\r\n  \r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\Assignments.js",["2189","2190"],"import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'TEST' },\r\n  { id: 'totalmarks', label: 'TOTAL MARKS' },\r\n  { id: 'subject', label: 'SUBJECT' },\r\n  { id: 'score', label: 'STUDENT SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\nconst Asignments = props => {\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [records, setRecords] = useState([])\r\n\r\n  const {id} =props.data\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/people/assignment-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Attendance\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.subject}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default Asignments;","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\people.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\useForm.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\UserSelect.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\ActionButton.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\DictSelect.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\GradeSelect.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Select.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Button.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\DatePicker.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\CheckBox.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\Input.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\formcontrols\\RadioGroup.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\ExcerciseRecords.js",["2191","2192","2193"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\GradingBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\AddGrade.js",["2194","2195"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getGeneralGradingTypeChoices } from '../../actions/choices';\r\nimport { getClasses } from '../../actions/classes';\r\nimport { getTeacherProfiles } from '../../actions/people';\r\nimport { getSubjects } from '../../actions/curriculums';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n    name: '',\r\n    klass: '',\r\n    total_marks: '',\r\n    type: '',\r\n    subject: '',\r\n    recorded_by: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddGrade = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('klass' in fieldValues)\r\n        temp.klass = fieldValues.klass ? \"\" : \"This field is required.\"\r\n    if ('type' in fieldValues)\r\n        temp.type = fieldValues.type ? \"\" : \"This field is required.\"\r\n    if ('total_marks' in fieldValues)\r\n        temp.total_marks = fieldValues.total_marks ? \"\" : \"This field is required.\"\r\n    if ('subject' in fieldValues)\r\n        temp.subject = fieldValues.subject ? \"\" : \"This field is required.\"\r\n    if ('recorded_by' in fieldValues)\r\n        temp.recorded_by = fieldValues.recorded_by ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getClasses();\r\n        props.getTeacherProfiles();\r\n        props.getSubjects();\r\n        props.getGeneralGradingTypeChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"TOTAL MARKS\"\r\n                          name=\"total_marks\"\r\n                          value={values.total_marks}\r\n                          onChange={handleInputChange}\r\n                          error={errors.total_marks}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"type\"\r\n                          label=\"TYPE\"\r\n                          value={values.type}\r\n                          onChange={handleInputChange}\r\n                          options={props.generalgradingtypechoices}\r\n                          error={errors.type}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Select\r\n                          name=\"subject\"\r\n                          label=\"SUBJECT\"\r\n                          value={values.subject}\r\n                          onChange={handleInputChange}\r\n                          options={props.subjects}\r\n                          error={errors.subject}\r\n                      />\r\n                      <Controls.Select\r\n                          name=\"klass\"\r\n                          label=\"CLASS\"\r\n                          value={values.klass}\r\n                          onChange={handleInputChange}\r\n                          options={props.classes}\r\n                          error={errors.klass}\r\n                      />\r\n                      <Controls.UserSelect\r\n                          name=\"recorded_by\"\r\n                          label=\"TEACHER\"\r\n                          value={values.recorded_by}\r\n                          onChange={handleInputChange}\r\n                          options={props.teacherprofiles}\r\n                          error={errors.recorded_by}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    generalgradingtypechoices: state.feechoices.generalgradingtypechoices,\r\n    classes: state.classes.classes,\r\n    teacherprofiles: state.people.teacherprofiles,\r\n    subjects: state.curriculums.subjects,\r\n\r\n\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getClasses, getGeneralGradingTypeChoices, getTeacherProfiles, getSubjects} ) \r\n    (AddGrade);","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\TeacherLayout.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\AttendanceBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\Records.js",["2196","2197","2198"],"import React, { useEffect, useState } from \"react\"\r\nimport {  editAttendanceRecord, addAttendanceRecord } from '../../actions/attendances';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from 'axios';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport AddRecord from './AddRecord';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'attendance', label: 'DATE' },\r\n  { id: 'student', label: 'STUDENT' },\r\n  { id: 'status', label: 'ATTENDANCE STATUS' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst Records = props => {\r\n    // const [records, setRecords] = useState([])\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [records, setRecords] = useState([])\r\n\r\n    const {id} =props.data\r\n\r\n\r\n  \r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editAttendanceRecord(fee.id, fee)    \r\n      else\r\n        console.log(fee)        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/attendance/student-attendance-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Record\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.attendance}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.status}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Edit Record\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddRecord\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(\r\n  null, \r\n  {editAttendanceRecord, addAttendanceRecord} ) \r\n  (Records);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\staff\\AddBursar.js",["2199","2200"],"import React from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  email: '',\r\n  username: '',\r\n  password: '',\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst AddBursar = props => {\r\n  const { addOrEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('email' in fieldValues)\r\n        temp.email = fieldValues.email ? \"\" : \"This field is required.\"\r\n    if ('username' in fieldValues)\r\n        temp.username = fieldValues.username ? \"\" : \"This field is required.\"\r\n    if ('password' in fieldValues)\r\n        temp.password = fieldValues.password ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"email\"\r\n                          label=\"EMAIL\"\r\n                          value={values.email}\r\n                          onChange={handleInputChange}\r\n                          error={errors.email}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"USERNAME\"\r\n                          name=\"username\"\r\n                          value={values.username}\r\n                          onChange={handleInputChange}\r\n                          error={errors.username}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        label=\"PASSWORD\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleInputChange}\r\n                        error={errors.password}\r\n                    /> \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nexport default AddBursar;\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\actions\\attendances.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\TestRecords.js",["2201","2202","2203","2204"],"import React, { useEffect, useState } from \"react\"\r\nimport {  editTestRecord } from '../../actions/gradings';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from 'axios';\r\nimport { \r\n  Paper, \r\n  makeStyles, \r\n  TableBody, \r\n  TableRow, \r\n  TableCell, \r\n  Toolbar, \r\n  InputAdornment } \r\nfrom '@material-ui/core';\r\nimport EditRecord from './EditRecord';\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'NAME' },\r\n  { id: 'student', label: 'STUDENT' },\r\n  { id: 'totalmarks', label: 'TOTAL' },\r\n  { id: 'score', label: 'SCORE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TestRecords = props => {\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [records, setRecords] = useState([])\r\n\r\n    const {id} =props.data\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editTestRecord(fee.id, fee)    \r\n      else\r\n        console.log(fee)        //   \r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/grading/grading-test-records/?id=${id}`);\r\n\r\n            setRecords(res.data);\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Record\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.name}</TableCell>\r\n                          <TableCell>{item.student}</TableCell>\r\n                          <TableCell>{item.totalmarks}</TableCell>\r\n                          <TableCell>{item.score}</TableCell>\r\n                          <TableCell>\r\n                              <Controls.ActionButton\r\n                                  color=\"primary\"\r\n                                  onClick={() => { openInPopup(item) }}>\r\n                                  <EditOutlinedIcon fontSize=\"small\" />\r\n                                  EDIT\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton\r\n                                  color=\"secondary\">\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Edit Record\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <EditRecord\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} \r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(\r\n  null, \r\n  { editTestRecord} ) \r\n  (TestRecords);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddAttendance.js",["2205","2206"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getTeacherProfiles } from '../../actions/people';\r\nimport { getClasses } from  '../../actions/classes';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst MarkRegister = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const {email} =props;\r\n\r\n\r\n  const initialFValues = {\r\n      klass: '',\r\n      recorded_by: email,\r\n  }\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('klass' in fieldValues)\r\n        temp.klass = fieldValues.klass ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getTeacherProfiles();\r\n        props.getClasses();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Select\r\n                            name=\"klass\"\r\n                            label=\"CLASS\"\r\n                            value={values.klass}\r\n                            onChange={handleInputChange}\r\n                            options={props.classes}\r\n                            error={errors.klass}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    classes: state.classes.classes,\r\n    teacherprofiles: state.people.teacherprofiles,\r\n    email: state.auth.email,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getClasses, getTeacherProfiles} ) (MarkRegister);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\dashboard\\dashboard-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\topics\\search-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\CalculatorWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\TimelineWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\ContactWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\WeatherWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\choices.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\search-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\courses\\courses\\cardStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\EditRecord.js",["2207","2208"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    score: '', \r\n}\r\n\r\n\r\n\r\nconst EditRecord = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('score' in fieldValues)\r\n        temp.score = fieldValues.score ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                            name=\"score\"\r\n                            label=\"STUDENT SCORE\"\r\n                            value={values.score}\r\n                            onChange={handleInputChange}\r\n                            error={errors.score}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default EditRecord;","c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\students\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\EditRecord.js",["2209","2210"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\gradings\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\classes.js",["2211","2212"],"import axios from 'axios';\r\nimport {\r\n        ADD_CLASS,\r\n        GET_CLASSES,\r\n        GET_CLASS,\r\n        EDIT_CLASS,\r\n        ADD_STREAM,\r\n        GET_STREAMS,\r\n        EDIT_STREAM,\r\n    } from '../types/classTypes';\r\nimport { \r\n    classesURL, \r\n    classstreamsURL,\r\n    classsubjectsURL,\r\n    classstudentsURL,\r\n} from '../constants';\r\n\r\n// Get\r\nexport const getClasses = () => dispatch => {\r\n    axios.get(classesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CLASSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addClass = (classi) => dispatch => {\r\n    axios.post(classesURL, classi)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_CLASS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getClass = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/classes/classes/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CLASS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editClass = (id, classi) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/classes/classes/${id}/`, classi)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_CLASS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getStreams = () => dispatch => {\r\n    axios.get(classstreamsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_STREAMS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addStream = (stream) => dispatch => {\r\n    axios.post(classstreamsURL, stream)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STREAM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Edit\r\nexport const editStream = (id, stream) => dispatch => {\r\n    JSON.stringify(id, null, 3)\r\n    axios.patch(`http://127.0.0.1:8000/api/classes/class-streams/${id}/`, stream)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STREAM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\actions\\curriculums.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\attendance\\AddRecord.js",["2213","2214"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getAttendanceStatusChoices } from '../../actions/choices';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    status: '', \r\n}\r\n\r\n\r\n\r\nconst MarkRegister = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAttendanceStatusChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.DictSelect\r\n                            name=\"status\"\r\n                            label=\"ATTENDANCE STATUS\"\r\n                            value={values.status}\r\n                            onChange={handleInputChange}\r\n                            options={props.attendancestatuschoices}\r\n                            error={errors.status}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    attendancestatuschoices: state.feechoices.attendancestatuschoices,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAttendanceStatusChoices} ) (MarkRegister);","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\MegaMenuLayout.js",["2215"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\DropMenuLayout.js",["2216"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarBigLayout.js",["2217"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\RightSidebarLayout.js",["2218"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\LeftSidebarLayout.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\widget-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Contact\\api\\contactData.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\Sidebar.js",["2219"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\navigationConfig.js",["2220","2221","2222","2223","2224","2225","2226","2227","2228","2229","2230","2231","2232","2233","2234","2235","2236","2237","2238"],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Calculator\\index.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\api\\images\\photos.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\api\\palette\\colorfull.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\index.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavigation.js",["2239","2240","2241","2242"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport brand from '../../api/dummy/brand';\r\nimport dummy from '../../api/dummy/dummyContents';\r\nimport logo from '../../images/logo.svg';\r\nimport Navigation from './Navigation';\r\n\r\n\r\nimport styles from '../layout/sidebar-jss';\r\n\r\nclass DumbalinyoloNavigation extends React.Component {\r\n  state = {\r\n    transform: 0,\r\n  };\r\n  \r\n\r\n  componentDidMount = () => {\r\n    // Scroll content to top\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const mainContent = document.getElementById('sidebar');\r\n    mainContent.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = (event) => {\r\n    const scroll = event.target.scrollTop;\r\n    this.setState({\r\n      transform: scroll\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      turnDarker,\r\n      drawerPaper,\r\n      toggleDrawerOpen,\r\n      loadTransition,\r\n      leftSidebar,\r\n      dataMenu,\r\n      status,\r\n      anchorEl,\r\n      openMenuStatus,\r\n      closeMenuStatus,\r\n      changeStatus,\r\n      isLogin\r\n    } = this.props;\r\n    const { transform } = this.state;\r\n\r\n    const setStatus = st => {\r\n      switch (st) {\r\n        case 'online':\r\n          return classes.online;\r\n        case 'idle':\r\n          return classes.idle;\r\n        case 'bussy':\r\n          return classes.bussy;\r\n        default:\r\n          return classes.offline;\r\n      }\r\n    };\r\n    return (\r\n      <div className={classNames(classes.drawerInner, !drawerPaper ? classes.drawerPaperClose : '')}>\r\n        <div className={classes.drawerHeader}>\r\n          <NavLink to=\"/\" className={classNames(classes.brand, classes.brandBar, turnDarker && classes.darker)}>\r\n            {brand.name}\r\n          </NavLink>\r\n          {isLogin && (\r\n            <div\r\n              className={classNames(classes.profile, classes.user)}\r\n              style={{ opacity: 1 - (transform / 100), marginTop: transform * -0.3 }}\r\n            >\r\n              <Avatar\r\n                className={classNames(classes.avatar, classes.bigAvatar)}\r\n              />\r\n              <div>\r\n                <Button size=\"small\" onClick={openMenuStatus}>\r\n                  <i className={classNames(classes.dotStatus, setStatus(status))} />\r\n                  {status}\r\n                </Button>\r\n                <Menu\r\n                  id=\"status-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={closeMenuStatus}\r\n                  className={classes.statusMenu}\r\n                >\r\n                  <MenuItem onClick={() => changeStatus('online')}>\r\n                    <i className={classNames(classes.dotStatus, classes.online)} />\r\n                    Online\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => changeStatus('idle')}>\r\n                    <i className={classNames(classes.dotStatus, classes.idle)} />\r\n                    Idle\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => changeStatus('bussy')}>\r\n                    <i className={classNames(classes.dotStatus, classes.bussy)} />\r\n                    Bussy\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => changeStatus('offline')}>\r\n                    <i className={classNames(classes.dotStatus, classes.offline)} />\r\n                    Offline\r\n                  </MenuItem>\r\n                </Menu>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          id=\"sidebar\"\r\n          className={\r\n            classNames(\r\n              classes.menuContainer,\r\n              leftSidebar && classes.rounded,\r\n              isLogin && classes.withProfile\r\n            )\r\n          }\r\n        >\r\n          <Navigation\r\n            loadTransition={loadTransition} \r\n            toggleDrawerOpen={toggleDrawerOpen} \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDumbalinyoloNavigation.propTypes = {\r\n  // classes: PropTypes.object.isRequired,\r\n  // drawerPaper: PropTypes.bool.isRequired,\r\n  // turnDarker: PropTypes.bool,\r\n  // toggleDrawerOpen: PropTypes.func,\r\n  // loadTransition: PropTypes.func,\r\n  // leftSidebar: PropTypes.bool.isRequired,\r\n  // dataMenu: PropTypes.array.isRequired,\r\n  // status: PropTypes.string.isRequired,\r\n  // anchorEl: PropTypes.object,\r\n  // openMenuStatus: PropTypes.func.isRequired,\r\n  // closeMenuStatus: PropTypes.func.isRequired,\r\n  // changeStatus: PropTypes.func.isRequired,\r\n  // isLogin: PropTypes.bool\r\n};\r\n\r\nDumbalinyoloNavigation.defaultProps = {\r\n  turnDarker: false,\r\n  toggleDrawerOpen: () => {},\r\n  loadTransition: () => {},\r\n  anchorEl: null,\r\n  isLogin: true,\r\n};\r\n\r\nexport default withStyles(styles)(DumbalinyoloNavigation);","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\layout\\sidebar-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Calculator\\ButtonPanel.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Calculator\\ResultPanel.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MainMenuBig.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\Navigation.js",["2243","2244"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\sidebarBig-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\SidebarBig\\MenuProfile.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavLink.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavItem.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavCollapse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavGroup.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\DumbalinyoloNavBadge.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\navigations\\NavLinkAdapter.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\TaskWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\CounterIconsWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\DateWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\PerformanceChartWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Widget\\SliderWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\AddGrade.js",["2245","2246"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AttendanceBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\Records.js",["2247","2248","2249"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\gradings\\TestRecords.js",["2250","2251","2252","2253"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AddAttendance.js",["2254","2255"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getTeacherProfiles } from '../../actions/people';\r\nimport { getClasses } from  '../../actions/classes';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\n\r\n\r\n\r\nconst MarkRegister = props => {\r\n  const { addOrEdit, recordForEdit } = props;\r\n  const {email} = props;\r\n  console.log(email)\r\n\r\n  const initialFValues = {\r\n      klass: '',\r\n      recorded_by: email,\r\n  }\r\n\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('klass' in fieldValues)\r\n        temp.klass = fieldValues.klass ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getTeacherProfiles();\r\n        props.getClasses();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Select\r\n                            name=\"klass\"\r\n                            label=\"CLASS\"\r\n                            value={values.klass}\r\n                            onChange={handleInputChange}\r\n                            options={props.classes}\r\n                            error={errors.klass}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    classes: state.classes.classes,\r\n    teacherprofiles: state.people.teacherprofiles,\r\n    email: state.auth.email,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getClasses, getTeacherProfiles} ) (MarkRegister);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\admissions\\AddAdmission.js",["2256","2257"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getStudentProfiles } from '../../actions/people';\r\nimport { getClasses } from  '../../actions/classes';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n    klass: '', \r\n    student: '',\r\n}\r\n\r\n\r\n\r\nconst Apply = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('klass' in fieldValues)\r\n        temp.klass = fieldValues.klass ? \"\" : \"This field is required.\"\r\n    if ('student' in fieldValues)\r\n        temp.student = fieldValues.student ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStudentProfiles();\r\n        props.getClasses();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Select\r\n                            name=\"klass\"\r\n                            label=\"CLASS\"\r\n                            value={values.klass}\r\n                            onChange={handleInputChange}\r\n                            options={props.classes}\r\n                            error={errors.klass}\r\n                    />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.UserSelect\r\n                          name=\"student\"\r\n                          label=\"APPLICANT\"\r\n                          value={values.student}\r\n                          onChange={handleInputChange}\r\n                          options={props.studentprofiles}\r\n                          error={errors.student}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    classes: state.classes.classes,\r\n    studentprofiles: state.people.studentprofiles,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getClasses, getStudentProfiles} ) (Apply);\r\n\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\actions\\admissions.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\Attendance.js",["2258","2259"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\Excercises.js",["2260","2261"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\ProfileBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\Tests.js",["2262","2263"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\Assignments.js",["2264","2265"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\fees\\AddFee.js",["2266","2267"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getFeeTargetsChoices, getFeeTypeChoices} from '../../actions/choices';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  targets: '',\r\n  type: '',\r\n  amount: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddFee = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('targets' in fieldValues)\r\n        temp.targets = fieldValues.targets ? \"\" : \"This field is required.\"\r\n    if ('type' in fieldValues)\r\n        temp.type = fieldValues.type ? \"\" : \"This field is required.\"\r\n    if ('amount' in fieldValues)\r\n        temp.amount = fieldValues.amount ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getFeeTargetsChoices();\r\n        props.getFeeTypeChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"AMOUNT\"\r\n                          name=\"amount\"\r\n                          value={values.amount}\r\n                          onChange={handleInputChange}\r\n                          error={errors.amount}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.DictSelect\r\n                          name=\"type\"\r\n                          label=\"TYPE\"\r\n                          value={values.type}\r\n                          onChange={handleInputChange}\r\n                          options={props.feetypechoices}\r\n                          error={errors.type}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"targets\"\r\n                          label=\"TARGETS\"\r\n                          value={values.targets}\r\n                          onChange={handleInputChange}\r\n                          options={props.feetargetschoices}\r\n                          error={errors.targets}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    feetypechoices: state.feechoices.feetypechoices,\r\n    feetargetschoices: state.feechoices.feetargetschoices\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getFeeTypeChoices, getFeeTargetsChoices} ) (AddFee);","c:\\almus\\gbc_oms\\frontend\\src\\actions\\fees.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\AddRecord.js",["2268","2269"],"c:\\almus\\gbc_oms\\frontend\\src\\it\\attendance\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\classes\\AddClass.js",["2270","2271"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getStudentsClassStatusChoices } from '../../actions/choices';\r\nimport { getStreams } from '../../actions/classes';\r\nimport { getAdminTeachers } from '../../actions/people';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  \r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n    name: '',\r\n    stream: '',\r\n    max_population: '',\r\n    class_teacher: '',\r\n    year: '',\r\n    status: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddClass = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('stream' in fieldValues)\r\n        temp.stream = fieldValues.stream ? \"\" : \"This field is required.\"\r\n    if ('max_population' in fieldValues)\r\n        temp.max_population = fieldValues.max_population ? \"\" : \"This field is required.\"\r\n    if ('class_teacher' in fieldValues)\r\n        temp.class_teacher = fieldValues.class_teacher ? \"\" : \"This field is required.\"\r\n    if ('year' in fieldValues)\r\n        temp.year = fieldValues.year ? \"\" : \"This field is required.\"\r\n    if ('status' in fieldValues)\r\n        temp.status = fieldValues.status ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getStudentsClassStatusChoices();\r\n        props.getStreams();\r\n        props.getAdminTeachers();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"POPULATION LIMIT\"\r\n                          name=\"max_population\"\r\n                          value={values.max_population}\r\n                          onChange={handleInputChange}\r\n                          error={errors.max_population}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"status\"\r\n                          label=\"STATUS\"\r\n                          value={values.status}\r\n                          onChange={handleInputChange}\r\n                          options={props.studentclassstatuschoices}\r\n                          error={errors.status}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.GradeSelect\r\n                          name=\"stream\"\r\n                          label=\"GRADE\"\r\n                          value={values.stream}\r\n                          onChange={handleInputChange}\r\n                          options={props.streams}\r\n                          error={errors.stream}\r\n                      />\r\n                      <Controls.UserSelect\r\n                          name=\"class_teacher\"\r\n                          label=\"CLASS TEACHER\"\r\n                          value={values.class_teacher}\r\n                          onChange={handleInputChange}\r\n                          options={props.adminteachers}\r\n                          error={errors.class_teacher}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"YEAR\"\r\n                          name=\"year\"\r\n                          value={values.year}\r\n                          onChange={handleInputChange}\r\n                          error={errors.year}\r\n                      />\r\n\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    streams: state.classes.streams,\r\n    studentclassstatuschoices: state.classes.studentclassstatuschoices,\r\n    adminteachers: state.people.adminteachers,\r\n\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getStudentsClassStatusChoices, getStreams, getAdminTeachers } ) \r\n    (AddClass);","c:\\almus\\gbc_oms\\frontend\\src\\it\\classes\\AddStream.js",["2272","2273"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  \r\n}));\r\n\r\nconst initialFValues = {\r\n    grade: '',\r\n}\r\n\r\n\r\n\r\nconst AddStream = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('grade' in fieldValues)\r\n        temp.grade = fieldValues.grade ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"grade\"\r\n                          label=\"GRADE\"\r\n                          value={values.grade}\r\n                          onChange={handleInputChange}\r\n                          error={errors.grade}\r\n                      />             \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddStream;","c:\\almus\\gbc_oms\\frontend\\src\\api\\chart\\chartData.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\dashboard\\dashboard-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\Counter\\CounterWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\curriculum\\AddSubject.js",["2274","2275"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getCurriculums } from '../../actions/curriculums';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n  name: '',\r\n  curriculum: '',\r\n}\r\n\r\n\t\t\t\r\n\r\n\r\n\r\nconst AddSubject = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('curriculum' in fieldValues)\r\n        temp.curriculum = fieldValues.curriculum ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getCurriculums();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />              \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Select\r\n                          name=\"curriculum\"\r\n                          label=\"CURRICULUM\"\r\n                          value={values.curriculum}\r\n                          onChange={handleInputChange}\r\n                          options={props.curriculums}\r\n                          error={errors.curriculum}\r\n                      />\r\n\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    curriculums: state.curriculums.curriculums\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCurriculums} ) (AddSubject);","c:\\almus\\gbc_oms\\frontend\\src\\it\\curriculum\\AddCurriculum.js",["2276","2277"],"import React, {useEffect} from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddCurriculum = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default  AddCurriculum;","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddAsset.js",["2278","2279","2280","2281","2282","2283","2284","2285"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getAccounts } from '../../actions/accounts';\r\nimport { getAdminBursars } from '../../actions/people';\r\nimport { getAssetTypesChoices, getAssetsDepriciationMethodChoices} from '../../actions/choices';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  category: '',\r\n  description: '',\r\n  initial_value: '',\r\n  credit_account: '',\r\n  depreciation_period: '',\r\n  init_date: null,\r\n  depreciation_method: '',\r\n  salvage_value: '',\r\n  created_by: '',\r\n}\r\n\r\n\r\n\r\nconst AddAsset = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('category' in fieldValues)\r\n        temp.category = fieldValues.category ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    if ('initial_value' in fieldValues)\r\n        temp.initial_value = fieldValues.initial_value ? \"\" : \"This field is required.\"\r\n    if ('credit_account' in fieldValues)\r\n        temp.credit_account = fieldValues.credit_account ? \"\" : \"This field is required.\"\r\n    if ('depreciation_period:' in fieldValues)\r\n        temp.depreciation_period = fieldValues.depreciation_period ? \"\" : \"This field is required.\"\r\n    if ('init_date' in fieldValues)\r\n        temp.init_date = fieldValues.init_date ? \"\" : \"This field is required.\"\r\n    if ('depreciation_method' in fieldValues)\r\n        temp.depreciation_method = fieldValues.depreciation_method ? \"\" : \"This field is required.\"\r\n    if ('salvage_value' in fieldValues)\r\n        temp.salvage_value = fieldValues.salvage_value ? \"\" : \"This field is required.\"\r\n    if ('created_by' in fieldValues)\r\n        temp.created_by = fieldValues.created_by ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminBursars();\r\n        props.getAccounts();\r\n        props.getAssetTypesChoices();\r\n        props.getAssetsDepriciationMethodChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"INITIAL VALUE\"\r\n                          name=\"initial_value\"\r\n                          value={values.initial_value}\r\n                          onChange={handleInputChange}\r\n                          error={errors.initial_value}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DEPRECIATION PERIOD\"\r\n                          name=\"depreciation_period\"\r\n                          value={values.depreciation_period}\r\n                          onChange={handleInputChange}\r\n                          error={errors.depreciation_period}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"category\"\r\n                          label=\"CATEGORY\"\r\n                          value={values.category}\r\n                          onChange={handleInputChange}\r\n                          options={props.assettypechoices}\r\n                          error={errors.category}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"depreciation_method\"\r\n                          label=\"DEPRECIATION METHOD\"\r\n                          value={values.depreciation_method}\r\n                          onChange={handleInputChange}\r\n                          options={props.assetsdepriciationmethodchoices}\r\n                          error={errors.depreciation_method}\r\n                      />                 \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Select\r\n                          name=\"credit_account\"\r\n                          label=\"CREDIT ACCOUNT\"\r\n                          value={values.parent_account}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounts}\r\n                          error={errors.parent_account}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"SALVAGE VALUE\"\r\n                          name=\"salvage_value\"\r\n                          value={values.salvage_value}\r\n                          onChange={handleInputChange}\r\n                          error={errors.salvage_value}\r\n                      />\r\n                      <Controls.Select\r\n                          name=\"created_by\"\r\n                          label=\"CREDIT ACCOUNT\"\r\n                          value={values.created_by}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounts}\r\n                          error={errors.created_by}\r\n                      />\r\n                      <input  \r\n                        name=\"init_date\"\r\n                        value={values.init_date}\r\n                        type=\"date\" \r\n                        className=\"form-control\"  \r\n                        onChange={handleInputChange} \r\n                        />\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accounts.accounts,\r\n    assettypechoices: state.feechoices.assettypechoices,\r\n    assetsdepriciationmethodchoices: state.feechoices.assetsdepriciationmethodchoices,\r\n    staffusers: state.people.adminbursars,\r\n    \r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getAccounts, getAssetTypesChoices, getAssetsDepriciationMethodChoices, getAdminBursars} ) \r\n    (AddAsset);\r\n\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\TaskWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\TimelineWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\ContactWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\WeatherWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\DateWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\CalculatorWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\CounterIconsWidget.js",["2286","2287"],"import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\nimport OndemandVideo from '@material-ui/icons/OndemandVideo';\r\nimport SupervisorAccount from '@material-ui/icons/SupervisorAccount';\r\nimport CollectionsBookmark from '@material-ui/icons/CollectionsBookmark';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport colorfull from '../../api/palette/colorfull';\r\nimport CounterWidget from '../Counter/CounterWidget';\r\nimport {getCounterStats} from '../../actions/reports';\r\nimport styles from './widget-jss';\r\n\r\n\r\nclass CounterIconWidget extends PureComponent {\r\n\r\n  componentDidMount() {\r\n    this.props.getCounterStats();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {statscounter} = this.props;\r\n    console.log(statscounter)\r\n\r\n    return (\r\n      <div className={classes.rootCounterFull}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6} md={6}>\r\n            <CounterWidget\r\n              color={colorfull[2]}\r\n              start={0}\r\n              end={statscounter.courses}\r\n              duration={statscounter.courses}\r\n              title=\"Courses\"\r\n            >\r\n              <OndemandVideo className={classes.counterIcon} />\r\n            </CounterWidget>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <CounterWidget\r\n              color={colorfull[2]}\r\n              start={0}\r\n              end={statscounter.students}\r\n              duration={statscounter.students}\r\n              title=\"STUDENTS\"\r\n            >\r\n              <SupervisorAccount className={classes.counterIcon} />\r\n            </CounterWidget>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <CounterWidget\r\n              color={colorfull[2]}\r\n              start={0}\r\n              end={statscounter.staffusers}\r\n              duration={statscounter.staffusers}\r\n              title=\"STAFF\"\r\n            >\r\n              <SupervisorAccount className={classes.counterIcon} />\r\n            </CounterWidget>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <CounterWidget\r\n              color={colorfull[3]}\r\n              start={0}\r\n              end={statscounter.topics}\r\n              duration={statscounter.topics}\r\n              title=\"Total Topics\"\r\n            >\r\n              <CollectionsBookmark className={classes.counterIcon} />\r\n            </CounterWidget>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  statscounter: state.reports.statscounter,\r\n\r\n});\r\n\r\nconst BlogMapped = connect(\r\n  mapStateToProps,\r\n  {getCounterStats}\r\n)(CounterIconWidget);\r\n\r\nexport default (withStyles(styles)(BlogMapped));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\PerformanceChartWidget.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\SliderWidget.js",["2288","2289"],"import React from 'react';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Slider from 'react-animated-slider';\r\nimport './slider.css';\r\nimport one from './images/1.jpg';\r\nimport two from './images/2.jpg';\r\nimport three from './images/3.jpg';\r\nimport four from './images/4.jpg';\r\nimport five from './images/5.jpg';\r\n\r\nconst styles = theme => ({\r\n  tag: {\r\n    background: fade(theme.palette.primary.light, 0.8),\r\n    color: theme.palette.primary.dark,\r\n    position: 'absolute',\r\n    right: 10,\r\n    top: 10,\r\n    padding: theme.spacing(1),\r\n    borderRadius: theme.rounded.big,\r\n    fontSize: 11,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    boxShadow: theme.shadows[3]\r\n  },\r\n  title: {\r\n    color: theme.palette.common.white\r\n  }\r\n});\r\n\r\nconst content = [\r\n  {\r\n    title: 'Vulputate Mollis Ultricies',\r\n    description:\r\n    'Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.',\r\n    button: 'Watch Video',\r\n    image: one,\r\n    label: 'Uploaded to',\r\n    tag: 'Just Uploaded',\r\n    to: 'Lorem Video',\r\n    userProfile: two,\r\n    type: 'video',\r\n  },\r\n  {\r\n    title: 'Tortor Dapibus Fermentum',\r\n    description:\r\n    'Cras mattis consectetur purus sit amet fermentum.',\r\n    button: 'See Post',\r\n    image: two,\r\n    label: 'Posted to',\r\n    tag: 'Newest Post',\r\n    to: 'Ipsum Media',\r\n    userProfile: two,\r\n    type: 'article'\r\n  },\r\n  {\r\n    title: 'Phasellus volutpat',\r\n    description:\r\n    'Lorem ipsum dolor sit amet',\r\n    button: 'Read Article',\r\n    image: three,\r\n    label: 'Posted to',\r\n    tag: 'Latest Article',\r\n    to: 'Dolor Sit News',\r\n    userProfile: three,\r\n    type: 'article'\r\n  }\r\n];\r\n\r\nfunction SliderWidget(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Slider className=\"slider-wrapper short\">\r\n        {content.map((item, index) => (\r\n          <div\r\n            key={index.toString()}\r\n            className=\"slider-content\"\r\n            style={{ background: `url('${item.image}') no-repeat center center` }}\r\n          >\r\n            <span className={classes.tag}>{item.tag}</span>\r\n            <div className=\"inner\">\r\n              <Typography variant=\"subtitle1\" component=\"h3\" className={classNames(classes.title)} gutterBottom>{item.title}</Typography>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                {item.type === 'video' && <Icon>play_arrow</Icon>}\r\n                {item.button}\r\n              </Button>\r\n            </div>\r\n            <section>\r\n              <img src={item.userProfile} alt={item.user} />\r\n              <span>\r\n                {item.label}\r\n                &nbsp;\r\n                <strong>\r\n                  {item.to}\r\n                </strong>\r\n              </span>\r\n            </section>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n}\r\n\r\nSliderWidget.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SliderWidget);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddLedger.js",["2290","2291"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddLedger = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddLedger;","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddWorkBook.js",["2292","2293"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddWorkBook = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddWorkBook;","c:\\almus\\gbc_oms\\frontend\\src\\actions\\workbooks.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\ledgers.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddAccount.js",["2294","2295"],"import React, {  useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\nimport { getAccounts } from '../../actions/accounts';\r\nimport { getAccountBalanceSheetCategoriesChoices, getAccountStatusChoices, getAccountTypeChoices} from '../../actions/choices';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  balance: '',\r\n  type: '',\r\n  description: '',\r\n  parent_account: '',\r\n  balance_sheet_category: '',\r\n  active: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddAccount = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('type' in fieldValues)\r\n        temp.type = fieldValues.type ? \"\" : \"This field is required.\"\r\n    if ('description' in fieldValues)\r\n        temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n    if ('balance_sheet_category' in fieldValues)\r\n        temp.balance_sheet_category = fieldValues.balance_sheet_category ? \"\" : \"This field is required.\"\r\n    if ('active' in fieldValues)\r\n        temp.active = fieldValues.active ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAccountStatusChoices();\r\n        props.getAccounts();\r\n        props.getAccountTypeChoices();\r\n        props.getAccountBalanceSheetCategoriesChoices();\r\n    }\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"BALANCE\"\r\n                          name=\"balance\"\r\n                          value={values.balance}\r\n                          onChange={handleInputChange}\r\n                      />\r\n                      <Controls.Input\r\n                          label=\"DESCRIPTION\"\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleInputChange}\r\n                          error={errors.description}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"type\"\r\n                          label=\"TYPE\"\r\n                          value={values.type}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounttypechoices}\r\n                          error={errors.type}\r\n                      />                \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.DictSelect\r\n                          name=\"balance_sheet_category\"\r\n                          label=\"BALANACE SHEET CATEGORY\"\r\n                          value={values.balance_sheet_category}\r\n                          onChange={handleInputChange}\r\n                          options={props.accountbalancesheetcategorieschoices}\r\n                          error={errors.balance_sheet_category}\r\n                      />\r\n                      <Controls.Select\r\n                          name=\"parent_account\"\r\n                          label=\"PARENT ACCOUNT\"\r\n                          value={values.parent_account}\r\n                          onChange={handleInputChange}\r\n                          options={props.accounts}\r\n                          error={errors.parent_account}\r\n                      />\r\n                      <Controls.DictSelect\r\n                          name=\"active\"\r\n                          label=\"STATUS\"\r\n                          value={values.active}\r\n                          onChange={handleInputChange}\r\n                          options={props.accountstatuschoices}\r\n                          error={errors.active}\r\n                      />\r\n \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accounts.accounts,\r\n    accountstatuschoices: state.feechoices.accountstatuschoices,\r\n    accounttypechoices: state.feechoices.accounttypechoices,\r\n    accountbalancesheetcategorieschoices: state.feechoices.accountbalancesheetcategorieschoices,\r\n\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getAccountBalanceSheetCategoriesChoices, getAccounts, getAccountTypeChoices, getAccountStatusChoices} ) \r\n    (AddAccount);","c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddTax.js",["2296","2297"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  rate: '',\r\n\r\n}\r\n\r\n\r\n\r\nconst AddTax = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('rate' in fieldValues)\r\n        temp.rate = fieldValues.rate ? \"\" : \"This field is required.\"\r\n    \r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.name}\r\n                      />\r\n                                  \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"tax\"\r\n                          label=\"TAX\"\r\n                          value={values.tax}\r\n                          onChange={handleInputChange}\r\n                          error={errors.tax}\r\n                      />                    \r\n \r\n                      <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddTax;","c:\\almus\\gbc_oms\\frontend\\src\\actions\\inactiveaccounts.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\accounting\\AddCurrency.js",["2298","2299"],"import React, {  useEffect } from \"react\";\r\nimport {  Grid, makeStyles,  } from \"@material-ui/core\";\r\nimport {Form, useForm } from \"../../components/formcontrols/useForm\";\r\nimport  Controls  from \"../../components/formcontrols/Controls\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  my3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb3: {\r\n    margin: \"1.3rem 0\"\r\n  },\r\n  mb0: {\r\n    marginBottom: 0\r\n  },\r\n  mRight: {\r\n    marginRight: \".85rem\"\r\n  },\r\n  p1: {\r\n    padding: \".85rem\"\r\n  }\r\n  // demoEditor: {\r\n  //   border: \"1px solid #eee\",\r\n  //   padding: \"5px\",\r\n  //   borderRadius: \"2px\",\r\n  //   height: \"350px\"\r\n  // }\r\n}));\r\n\r\nconst initialFValues = {\r\n\r\n  name: '',\r\n  symbol: '',\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst AddCurrency = props => {\r\n  const { addOrEdit, recordForEdit } = props\r\n  const classes = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('name' in fieldValues)\r\n        temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n    if ('symbol' in fieldValues)\r\n        temp.symbol = fieldValues.symbol ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n      values,\r\n      setValues,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  \r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()) {\r\n          addOrEdit(values, resetForm);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n  }, [recordForEdit]);\r\n\r\n\r\n\r\n  return (\r\n        <Form onSubmit={handleSubmit}>\r\n              <Grid container>\r\n                  <Grid item xs={6}>\r\n                      <Controls.Input\r\n                          name=\"name\"\r\n                          label=\"NAME\"\r\n                          value={values.name}\r\n                          onChange={handleInputChange}\r\n                          error={errors.fullName}\r\n                      />               \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Controls.Input\r\n                            label=\"SYMBOL\"\r\n                            name=\"symbol\"\r\n                            value={values.symbol}\r\n                            onChange={handleInputChange}\r\n                            error={errors.symbol}\r\n                    /> \r\n                      <div>\r\n                          <Controls.Button\r\n                              type=\"submit\"\r\n                              text=\"Submit\" />\r\n                          <Controls.Button\r\n                              text=\"Reset\"\r\n                              color=\"default\"\r\n                              onClick={resetForm} />\r\n                      </div>\r\n                  </Grid>\r\n              </Grid>\r\n          </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddCurrency;","c:\\almus\\gbc_oms\\frontend\\src\\actions\\assets.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\taxes.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\accounts.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\currencies.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Blog\\BlogHome.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Profile\\Profile.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\landing\\HomePage.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\Blog.js",["2300"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { bindActionCreators } from 'redux';\r\nimport { toggleAction, playTransitionAction } from '../../actions/uiactions';\r\nimport Footer from '../../components/landing/Footer';\r\nimport Decoration from './Decoration';\r\nimport styles from './appStyles-jss';\r\nimport BlogBar from './BlogBar';\r\nimport Header from '../../components/landing/Header';\r\n\r\n\r\nclass Blog extends React.Component {\r\n  state = {\r\n    transform: 0,\r\n    openGuide: false\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // const { history } = this.props;\r\n    // Scroll content to top\r\n    window.addEventListener('scroll', this.handleScroll);\r\n    // Execute all arguments when page changes\r\n    // this.unlisten = history.listen(() => {\r\n    //   window.scrollTo(0, 0);\r\n    // });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    this.setState({\r\n      transform: scroll\r\n    });\r\n  }\r\n\r\n  handleOpenGuide = () => {\r\n    this.setState({ openGuide: true });\r\n  };\r\n\r\n  handleCloseGuide = () => {\r\n    this.setState({ openGuide: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      children,\r\n      mode,\r\n      gradient,\r\n      deco,\r\n      layout,\r\n\r\n    } = this.props;\r\n  \r\n    return (\r\n      <div className={classes.appFrameLanding} id=\"mainContent\">\r\n        <Header /> \r\n        <Decoration\r\n          mode={mode}\r\n          gradient={gradient}\r\n          decoration={deco}\r\n          bgPosition=\"header\"\r\n          horizontalMenu={layout === 'top-navigation' || layout === 'mega-menu'}\r\n        />\r\n\r\n        <div className={classes.blogWrap}>\r\n          {children}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBlog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  deco: PropTypes.bool.isRequired,\r\n  layout: PropTypes.string.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  sidebarOpen: PropTypes.bool.isRequired,\r\n  loadTransition: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  sidebarOpen: state.ui.sidebarOpen,\r\n  pageLoaded: state.ui.pageLoaded,\r\n  mode: state.ui.type,\r\n  deco: state.ui.deco,\r\n  gradient: state.ui.gradient,\r\n  decoration: state.ui.decoration,\r\n  layout: state.ui.layout,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDrawer: () => dispatch(toggleAction),\r\n  loadTransition: bindActionCreators(playTransitionAction, dispatch),\r\n});\r\n\r\nconst BlogMapped = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Blog);\r\n\r\nexport default (withStyles(styles)(BlogMapped));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\Corporate.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\ProfileBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\students\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\actions\\reports.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\Widget\\widget-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\it\\Counter\\CounterWidget.js",["2301"],"import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CountUp from 'react-countup';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n    padding: 10,\r\n    height: 190,\r\n    marginBottom: 6,\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 126,\r\n      marginBottom: -1,\r\n      alignItems: 'flex-end',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n    '& > *': {\r\n      padding: '0 5px'\r\n    }\r\n  },\r\n  title: {\r\n    color: theme.palette.common.white,\r\n    fontSize: 14,\r\n    [theme.breakpoints.up('sm')]: {\r\n      fontSize: 16,\r\n    },\r\n    fontWeight: 400\r\n  },\r\n  counter: {\r\n    color: theme.palette.common.white,\r\n    fontSize: 28,\r\n    fontWeight: 500\r\n  },\r\n  customContent: {\r\n    textAlign: 'right'\r\n  }\r\n});\r\n\r\nclass CounterWidget extends PureComponent {\r\n  render() {\r\n    const {\r\n      classes,\r\n      color,\r\n      start,\r\n      end,\r\n      duration,\r\n      title,\r\n      children,\r\n      unitBefore,\r\n      unitAfter\r\n    } = this.props;\r\n    return (\r\n      <Paper className={classes.root} style={{ backgroundColor: color }}>\r\n        <div>\r\n          <Typography className={classes.counter}>\r\n            { unitBefore }\r\n            <CountUp start={start} end={end} duration={duration} useEasing />\r\n            { unitAfter }\r\n          </Typography>\r\n          <Typography className={classes.title} variant=\"subtitle1\">{title}</Typography>\r\n        </div>\r\n        <div className={classes.customContent}>\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n// CounterWidget.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   color: PropTypes.string.isRequired,\r\n//   start: PropTypes.number.isRequired,\r\n//   end: PropTypes.number.isRequired,\r\n//   duration: PropTypes.number.isRequired,\r\n//   title: PropTypes.string.isRequired,\r\n//   children: PropTypes.node.isRequired,\r\n//   unitBefore: PropTypes.string,\r\n//   unitAfter: PropTypes.string,\r\n// };\r\n\r\nCounterWidget.defaultProps = {\r\n  unitBefore: '',\r\n  unitAfter: '',\r\n};\r\n\r\nexport default withStyles(styles)(CounterWidget);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\actions\\timeline.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Blog\\SidebarBlog.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Blog\\blogStyle-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\Albums.js",["2302"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport imgData from '../../api/images/imgData';\r\nimport styles from './profile-jss';\r\n\r\n// const LinkBtn = React.forwardRef(function LinkBtn(props, ref) { // eslint-disable-line\r\n//   return <NavLink to={props.to} {...props} innerRef={ref} />; // eslint-disable-line\r\n// });\r\n\r\nfunction Albums(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        spacing={3}\r\n      >\r\n        <Grid item md={6} sm={12} xs={12}>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n            \r\n          >\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index > 6) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number One\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n          >\r\n            <GridList cellHeight={160} className={classes.gridListAlbum} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index > 2 && index < 9) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number Three\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n        </Grid>\r\n        <Grid item md={6} sm={12} xs={12}>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n      \r\n             >\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index > 4 && index < 10) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number Two\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n          >\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n              {imgData.map((tile, index) => {\r\n                if (index % 2) {\r\n                  return false;\r\n                }\r\n                return (\r\n                  <GridListTile key={index.toString()} cols={tile.cols || 1}>\r\n                    <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                );\r\n              })}\r\n            </GridList>\r\n            <span className={classes.imageBackdrop} />\r\n            <span className={classes.imageButton}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n              >\r\n                Album Number Four\r\n                <span className={classes.imageMarked} />\r\n              </Typography>\r\n            </span>\r\n          </ButtonBase>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlbums.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Albums);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\About.js",["2303"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport LocalPhone from '@material-ui/icons/LocalPhone';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Check from '@material-ui/icons/Check';\r\nimport AcUnit from '@material-ui/icons/AcUnit';\r\nimport Adb from '@material-ui/icons/Adb';\r\nimport AllInclusive from '@material-ui/icons/AllInclusive';\r\nimport AssistantPhoto from '@material-ui/icons/AssistantPhoto';\r\nimport imgData from '../../api/images/imgData';\r\nimport Company from '../../containers/HelpSupport/Company';\r\nimport PapperBlock from '../PapperBlock/PapperBlock';\r\nimport styles from './profile-jss';\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    const { classes, data } = this.props;\r\n    return (\r\n      <Grid\r\n        container\r\n        alignItems=\"flex-start\"\r\n        justify=\"flex-start\"\r\n        direction=\"row\"\r\n        spacing={3}\r\n      >\r\n        <Grid item md={7} xs={12}>\r\n          <div>\r\n            <Company />   \r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={5} xs={12}>\r\n          {/* Profile Progress */}\r\n          <div className={classes.progressRoot}>\r\n            <Paper className={classes.styledPaper} elevation={4}>\r\n              <Typography className={classes.title} variant=\"h5\" component=\"h3\">\r\n                <span >Profile Strength: </span>\r\n                <span >Intermediate</span>\r\n              </Typography>\r\n              <Grid container justify=\"center\">\r\n                <Chip\r\n                  avatar={(\r\n                    <Avatar>\r\n                      <Check />\r\n                    </Avatar>\r\n                  )}\r\n                  label=\"60% Progress\"\r\n                  className={classes.chip}\r\n                  color=\"primary\"\r\n                />\r\n              </Grid>\r\n              <LinearProgress variant=\"determinate\" className={classes.progress} value={60} />\r\n            </Paper>\r\n          </div>\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* About Me */}\r\n          <PapperBlock title=\"About Me\" icon=\"ios-contact-outline\" whiteBg noMargin desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sed urna in justo euismod condimentum.\">\r\n            <Divider className={classes.divider} />\r\n            <List dense className={classes.profileList}>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <DateRange />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Born\" secondary=\"Jan 9, 1994\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <LocalPhone />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Phone\" secondary=\"(+62)8765432190\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <LocationOn />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Address\" secondary=\"Chicendo Street no.105 Block A/5A - Barcelona, Spain\" />\r\n              </ListItem>\r\n            </List>\r\n          </PapperBlock>\r\n          <Divider className={classes.divider} />\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* My Albums */}\r\n          <PapperBlock title=\"My Albums (6)\" icon=\"ios-images-outline\" whiteBg desc=\"\">\r\n            <div className={classes.albumRoot}>\r\n              <GridList cellHeight={180} className={classes.gridList}>\r\n                {\r\n                  imgData.map((tile, index) => {\r\n                    if (index >= 4) {\r\n                      return false;\r\n                    }\r\n                    return (\r\n                      <GridListTile key={index.toString()}>\r\n                        <img src={tile.img} className={classes.img} alt={tile.title} />\r\n                        <GridListTileBar\r\n                          title={tile.title}\r\n                          subtitle={(\r\n                            <span>\r\n                              by:&nbsp;\r\n                              {tile.author}\r\n                            </span>\r\n                          )}\r\n                          actionIcon={(\r\n                            <IconButton className={classes.icon}>\r\n                              <InfoIcon />\r\n                            </IconButton>\r\n                          )}\r\n                        />\r\n                      </GridListTile>\r\n                    );\r\n                  })\r\n                }\r\n              </GridList>\r\n            </div>\r\n            <Divider className={classes.divider} />\r\n            <Grid container justify=\"center\">\r\n              <Button color=\"secondary\" className={classes.button}>\r\n                See All\r\n              </Button>\r\n            </Grid>\r\n          </PapperBlock>\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* My Connection Me */}\r\n          <PapperBlock title=\"My Connection\" icon=\"ios-contacts-outline\" whiteBg desc=\"\">\r\n            <List dense className={classes.profileList}>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.orangeAvatar)}>H</Avatar>\r\n                <ListItemText primary=\"Harry Wells\" secondary=\"2 Mutual Connection\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.purpleAvatar)}>J</Avatar>\r\n                <ListItemText primary=\"John DOe\" secondary=\"8 Mutual Connection\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.pinkAvatar)}>V</Avatar>\r\n                <ListItemText primary=\"Victor Wanggai\" secondary=\"12 Mutual Connection\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Avatar className={classNames(classes.avatar, classes.greenAvatar)}>H</Avatar>\r\n                <ListItemText primary=\"Baron Phoenix\" secondary=\"10 Mutual Connection\" />\r\n              </ListItem>\r\n            </List>\r\n            <Divider className={classes.divider} />\r\n            <Grid container justify=\"center\">\r\n              <Button color=\"secondary\" className={classes.button}>\r\n                See All\r\n              </Button>\r\n            </Grid>\r\n          </PapperBlock>\r\n          {/* ----------------------------------------------------------------------*/}\r\n          {/* My Interests */}\r\n          <PapperBlock title=\"My Interests\" icon=\"ios-aperture-outline\" whiteBg desc=\"\">\r\n            <Grid container className={classes.colList}>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.purpleAvatar)}>\r\n                      <AcUnit />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"Snow\" secondary=\"100 Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.greenAvatar)}>\r\n                      <Adb />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"Android\" secondary=\"120 Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.pinkAvatar)}>\r\n                      <AllInclusive />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"All Inclusive\" secondary=\"999+ Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classNames(classes.avatar, classes.orangeAvatar)}>\r\n                      <AssistantPhoto />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"My Country\" secondary=\"99+ Connected\" />\r\n                </ListItem>\r\n              </Grid>\r\n            </Grid>\r\n          </PapperBlock>\r\n          {/* ----------------------------------------------------------------------*/}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nAbout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  // data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(About);\r\n\r\n\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\Favorites.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Contact.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\HeadlineCard.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\ShowcaseCard.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Profile\\Connection.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Header.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\SampleApps\\Timeline\\api\\timelineData.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\Templates\\BlogBar.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Pricing.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Footer.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Technology.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Showcase.js",["2304","2305","2306","2307","2308"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { Parallax, ParallaxProvider } from 'react-scroll-parallax';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShowcaseCard from '../cards/ShowcaseCard';\r\nimport Title from './Title';\r\nimport styles from './landingStyle-jss';\r\nimport petal3 from '../../images/decoration/petal3.svg';\r\nimport petal4 from '../../images/decoration/petal4.svg';\r\nimport thumb1 from '../../images/screen/thumb1.jpg';\r\nimport thumb3 from '../../images/screen/thumb3.jpg';\r\nimport thumb5 from '../../images/screen/thumb5.jpg';\r\nimport thumb2 from '../../images/screen/thumb2.jpg';\r\nimport thumb4 from '../../images/screen/thumb4.jpg';\r\n\r\nimport four from './four.jpg';\r\nimport six from './six.jpg';\r\nimport seven from './seven.jpg';\r\nimport eight from './eight.jpg';\r\nimport five from './five.png';\r\n\r\n\r\nfunction ParallaxDeco(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.parallaxWrap}>\r\n      <ParallaxProvider>\r\n        <div className={classes.bannerParallaxWrap}>\r\n          <Parallax\r\n            offsetYMax={70}\r\n            offsetYMin={-200}\r\n            slowerScrollRate\r\n            tag=\"figure\"\r\n          >\r\n            <svg\r\n              fill=\"#fff\"\r\n              className={\r\n                classNames(\r\n                  classes.parallaxVertical,\r\n                  classes.parallaxPetal1\r\n                )\r\n              }\r\n            >\r\n              <use xlinkHref={petal3} />\r\n            </svg>\r\n          </Parallax>\r\n          <Parallax\r\n            offsetYMax={100}\r\n            offsetYMin={-200}\r\n            slowerScrollRate\r\n            tag=\"figure\"\r\n          >\r\n            <svg\r\n              fill=\"#fff\"\r\n              className={\r\n                classNames(\r\n                  classes.parallaxVertical,\r\n                  classes.parallaxPetal2\r\n                )\r\n              }\r\n            >\r\n              <use xlinkHref={petal4} />\r\n            </svg>\r\n          </Parallax>\r\n        </div>\r\n      </ParallaxProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nParallaxDeco.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ParallaxDecoStyled = withStyles(styles)(ParallaxDeco);\r\n\r\nclass Showcase extends React.Component {\r\n  render() {\r\n    const { classes, slideMode, width } = this.props;\r\n    return (\r\n      <section className={classes.showcase}>\r\n        {!slideMode && <ParallaxDecoStyled />}\r\n        <div className={classes.container}>\r\n          <Grid container className={classes.root} spacing={5}>\r\n            <Grid item sm={6} md={4} xs={12}>\r\n              <Title \r\n                title=\"Our Services\" \r\n                align={width === 'lg' ? 'left' : 'center'} \r\n                monocolor={slideMode && true} \r\n              />\r\n              <ShowcaseCard\r\n                title=\"Information Technology\"\r\n                desc=\"We develop systems that connect all your systems\"\r\n                action=\"Try Us\"\r\n                image={four}\r\n              />\r\n              <ShowcaseCard\r\n                title=\"Industrial Systems\"\r\n                desc=\"We integrate all your Industrial Systems \"\r\n                action=\"Visit Us\"\r\n                image={five}\r\n              />\r\n            </Grid>\r\n            <Grid item sm={6} md={4} xs={12}>\r\n              <ShowcaseCard\r\n                title=\"Energy Renewal Systems\"\r\n                desc=\"We are the kings in Energy Systems\"\r\n                action=\"Get in touch\"\r\n                image={six}\r\n              />\r\n              <ShowcaseCard\r\n                title=\"IIoT & SCADA/HMI/DCS\"\r\n                desc=\"Industrial Internet of Thins Experts\"\r\n                action=\"LETS GO IIoT\"\r\n                image={eight}\r\n              />\r\n            </Grid>\r\n            <Grid item sm={6} md={4} xs={12}>\r\n              <div className={classes.lastShowcase}>\r\n                <ShowcaseCard\r\n                  title=\"Industrial Computing Systems\"\r\n                  desc=\"Making your job easier\"\r\n                  action=\"At your Service\"\r\n                  image={seven}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nShowcase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  slideMode: PropTypes.bool\r\n};\r\n\r\nShowcase.defaultProps = {\r\n  slideMode: false\r\n};\r\n\r\n\r\nexport default withWidth()(withStyles(styles)(Showcase));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Feature.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Banner.js",["2309","2310"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Parallax, ParallaxProvider } from 'react-scroll-parallax';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport link from '../../api/ui/link';\r\nimport styles from './landingStyle-jss';\r\nimport one from './one.jpg';\r\nimport two from './two.jpg';\r\nimport three from './three.jpg';\r\n\r\nfunction ParallaxDeco(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <ParallaxProvider>\r\n      <div className={classes.bannerParallaxWrap}>\r\n        <Parallax\r\n          offsetYMax={10}\r\n          offsetYMin={-60}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.lineBanner1)} />\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={15}\r\n          offsetYMin={-50}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.lineBanner2)} />\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={70}\r\n          offsetYMin={-1}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.petalBanner1)} />\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={60}\r\n          offsetYMin={-30}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <span className={classNames(classes.paralaxFull, classes.petalBanner2)} />\r\n        </Parallax>\r\n      </div>\r\n    </ParallaxProvider>\r\n  );\r\n}\r\n\r\nParallaxDeco.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ParallaxDecoStyled = withStyles(styles)(ParallaxDeco);\r\n\r\nclass Banner extends React.Component {\r\n  render() {\r\n    const { classes, gradient, slideMode } = this.props;\r\n    return (\r\n      <div\r\n        className={\r\n          classNames(\r\n            classes.banner,\r\n            gradient ? classes.gradient : classes.solid,\r\n            slideMode ? classes.out : classes.fit\r\n          )\r\n        }\r\n      >\r\n        {!slideMode && <ParallaxDecoStyled />}\r\n        <div className={!slideMode ? classes.container : ''}>\r\n          <Typography component=\"h2\" variant=\"h2\" gutterBottom>GERERE BUSINESS COLLEGE</Typography>\r\n          <Typography component=\"p\" variant=\"h5\" gutterBottom>WELCOME TO GERERE BUSINESS COLLEGE</Typography>\r\n          <div className={classes.btnArea}>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              className={classNames(classes.button, classes.btnLight)}\r\n            >\r\n              Visit Us\r\n            </Button>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              We Serve\r\n            </Button>\r\n          </div>\r\n          <div className={classes.previewApp}>\r\n            <Hidden smDown>\r\n              <div className={classNames(classes.m2, classes.screen, slideMode ? classes.bottom : '')}>\r\n                <img src={one} alt=\"crm dashboard\" />\r\n              </div>\r\n            </Hidden>\r\n            <div className={classNames(classes.m1, classes.screen)}>\r\n              <img src={two} alt=\"personal dashboard\" />\r\n            </div>\r\n            <Hidden smDown>\r\n              <div className={classNames(classes.m3, classes.screen, slideMode ? classes.bottom : '')}>\r\n                <img src={three} alt=\"crypto dashboard\" />\r\n              </div>\r\n            </Hidden>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBanner.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  gradient: PropTypes.bool.isRequired,\r\n  slideMode: PropTypes.bool\r\n};\r\n\r\nBanner.defaultProps = {\r\n  slideMode: false\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  gradient: state.ui.gradient,\r\n});\r\n\r\nconst BannerMaped = connect(\r\n  mapStateToProps,\r\n)(Banner);\r\n\r\nexport default (withStyles(styles)(BannerMaped));\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Testimonials.js",["2311"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport { Parallax, ParallaxProvider } from 'react-scroll-parallax';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Slider from 'react-animated-slider';\r\nimport imgApi from '../../api/images/photos';\r\nimport './styles.css';\r\nimport Title from './Title';\r\nimport styles from './landingStyle-jss';\r\nimport lineside1 from '../../images/decoration/lineSide1.svg';\r\nimport lineside2 from '../../images/decoration/lineSide2.svg';\r\nimport nine from './nine.jpg';\r\nimport ten from './ten.jpg';\r\nimport leven from './leven.jpg';\r\n\r\nconst content = [\r\n  {\r\n    title: 'With Flexible Measurements you will never go wrong',\r\n    image: nine,\r\n    user: '',\r\n  },\r\n  {\r\n    title: 'They care, they listen and solve your roblem',\r\n    image: ten,\r\n    user: '',\r\n  },\r\n  {\r\n    title: 'Offering the best is what they do best',\r\n    image: leven,\r\n    user: '',\r\n  }\r\n];\r\n\r\nfunction ParallaxDeco(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.parallaxWrap}>\r\n      <ParallaxProvider>\r\n        <Parallax\r\n          offsetYMax={180}\r\n          offsetYMin={-200}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <svg\r\n            fill=\"#fff\"\r\n            className={\r\n              classNames(\r\n                classes.parallaxVertical,\r\n                classes.parallaxLineSide1\r\n              )\r\n            }\r\n          >\r\n            <use xlinkHref={lineside1} />\r\n          </svg>\r\n        </Parallax>\r\n        <Parallax\r\n          offsetYMax={100}\r\n          offsetYMin={-350}\r\n          slowerScrollRate\r\n          tag=\"figure\"\r\n        >\r\n          <svg\r\n            fill=\"#fff\"\r\n            className={\r\n              classNames(\r\n                classes.parallaxVertical,\r\n                classes.parallaxLineSide2\r\n              )\r\n            }\r\n          >\r\n            <use xlinkHref={lineside2} />\r\n          </svg>\r\n        </Parallax>\r\n      </ParallaxProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nParallaxDeco.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ParallaxDecoStyled = withStyles(styles)(ParallaxDeco);\r\n\r\nclass Testimonials extends React.Component {\r\n  render() {\r\n    const { classes, slideMode } = this.props;\r\n    return (\r\n      <div className={classes.testimonials}>\r\n        {!slideMode && (<ParallaxDecoStyled />)}\r\n        <div className={!slideMode ? classes.container : classes.fullSliderContent}>\r\n          <Title title=\"What people said\" align=\"center\" monocolor={slideMode && true} />\r\n          <div className={classes.sliderWrap}>\r\n            <Slider className=\"slider-wrapper\">\r\n              {content.map((item, index) => (\r\n                <div\r\n                  key={index.toString()}\r\n                  className=\"slider-content\"\r\n                  style={{ background: `url('${item.image}') no-repeat center center` }}\r\n                >\r\n                  <IconButton aria-label=\"Play/pause\" className={classes.playIcon}>\r\n                    <PlayArrowIcon />\r\n                  </IconButton>\r\n                  <p className={classNames(classes.videoCaption, slideMode ? classes.mono : classes.color)}>\r\n                    <Typography variant=\"h6\" component=\"span\" gutterBottom>{item.title}</Typography>\r\n                    <Typography component=\"span\">{item.user}</Typography>\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTestimonials.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  slideMode: PropTypes.bool,\r\n};\r\n\r\nTestimonials.defaultProps = {\r\n  slideMode: false\r\n};\r\n\r\nexport default withStyles(styles)(Testimonials);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\index.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\api\\images\\imgData.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\ProfileCard.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\cardStyle-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\landingStyle-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\api\\apps\\connectionData.js",["2312"],"import imgApi from '../images/photos';\r\nimport avatarApi from '../images/avatars';\r\nimport one from '../images/one.png';\r\nconst connectionData = [\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[6],\r\n    name: 'John Doe',\r\n    title: 'UX Designer',\r\n    connection: 203,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[2],\r\n    name: 'Jane Doe',\r\n    title: 'Administrator',\r\n    connection: 10,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[7],\r\n    name: 'James Doe',\r\n    title: 'Marketing',\r\n    connection: 18,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[10],\r\n    name: 'Mickey Joe',\r\n    title: 'Teacher Lecture',\r\n    connection: 6,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[5],\r\n    name: 'Janet Doe',\r\n    title: 'UI Designer',\r\n    connection: 18,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[1],\r\n    name: 'Michele Joe',\r\n    title: 'Designer',\r\n    connection: 100,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[9],\r\n    name: 'James Doe',\r\n    title: 'Programmer',\r\n    connection: 20,\r\n    verified: true\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[8],\r\n    name: 'Jimmy Doe',\r\n    title: 'Interior Designer',\r\n    connection: 1,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[3],\r\n    name: 'Maya Joe',\r\n    title: 'Contributor',\r\n    connection: 100,\r\n    verified: false\r\n  },\r\n  {\r\n    cover: one,\r\n    avatar: avatarApi[3],\r\n    name: 'Mayah Joe',\r\n    title: 'Contributor',\r\n    connection: 100,\r\n    verified: false\r\n  },\r\n];\r\n\r\nexport default connectionData;\r\n","c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\Title.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\ContactForm.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Qna.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\helpSupport-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\landing\\SideNavMobile.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\PricingCard.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\PostCard.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\cards\\GeneralCard.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\containers\\HelpSupport\\Company.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\components\\Quote\\Quote.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherInactiveCourses.js",["2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../../layout/TeacherLayout\";\r\nimport { getAdminInactiveCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherUpcomingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminInactiveCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/inactivecourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.admininactivecourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminInactiveCourses, addCourse, editCourse} )\r\n  (TeacherUpcomingCourses);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherUpcomingCourses.js",["2325","2326","2327","2328","2329","2330","2331","2332","2333","2334","2335","2336"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../../layout/TeacherLayout\";\r\nimport { getAdminUpcomingCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherUpcomingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminUpcomingCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/upcomingcourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.adminupcomingcourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminUpcomingCourses, addCourse, editCourse} )\r\n  (TeacherUpcomingCourses);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherFinishedCourses.js",["2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../../layout/TeacherLayout\";\r\nimport { getAdminFinishedCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherOngoingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminFinishedCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/finishedcourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.adminfinishedcourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminFinishedCourses, addCourse, editCourse} )\r\n  (TeacherOngoingCourses);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherUpcomingCourse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherOngoingCourses.js",["2349","2350","2351","2352","2353","2354","2355","2356","2357","2358","2359","2360"],"import React, { useEffect, useState } from \"react\"\r\nimport TeacherLayout from \"../../layout/TeacherLayout\";\r\nimport { getAdminOngoingCourses, addCourse, editCourse } from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport AddCourse from './AddCourse';\r\nimport {Link} from 'react-router-dom';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport SearchCourse from \"./SearchCourse\";\r\nimport CourseCard from \"./CourseCard\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst TeacherOngoingCourses = props => {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [listView, setListView] = useState('grid')\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminOngoingCourses();\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editCourse(fee.id, fee)\r\n      else\r\n        props.addCourse(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleSwitchView = (event, value) => {\r\n    setListView(value)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/ongoingcourses/${id}`)\r\n  }\r\n\r\n  const {\r\n      courseData\r\n    } = props;\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n        <SearchCourse\r\n            courseData={courseData}\r\n            listView={listView}\r\n            handleSwitchView={handleSwitchView}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            justify=\"flex-start\"\r\n            direction=\"row\"\r\n            spacing={3}\r\n          >\r\n            {\r\n              courseData.map((course) => {\r\n                return (\r\n                  <Grid item md={listView === 'list' ? 12 : 4} sm={listView === 'list' ? 12 : 6} xs={12} key={course.id}>\r\n                    <CourseCard\r\n                      list={listView === 'list'}\r\n                      full_name={course.full_name}\r\n                      short_name={course.short_name}\r\n                      thumbnail={course.image}\r\n                      description={course.description}\r\n                      status={course.status}\r\n                      detailOpen={() => handleClick(course.id)}\r\n                      editItem={() => openInPopup(course)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n      </Paper>\r\n      <Popup\r\n      title=\"Fee Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddCourse\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n        />\r\n      </Popup>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    courseData: state.courses.adminongoingcourses,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminOngoingCourses, addCourse, editCourse} )\r\n  (TeacherOngoingCourses);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\CourseCard.js",["2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\SearchCourse.js",["2373","2374","2375","2376","2377","2378","2379"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\AddCourse.js",["2380"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\CourseBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\Topics.js",["2381","2382","2383","2384","2385","2386","2387","2388","2389","2390","2391","2392"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\search-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\cardStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\TopicCard.js",["2393","2394","2395","2396","2397","2398","2399"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\SearchTopic.js",["2400","2401","2402","2403","2404","2405","2406"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\AddTopic.js",["2407","2408","2409","2410","2411"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\cardStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\search-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherOngoingCourse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherInactiveCourse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\courses\\TeacherFinishedCourse.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\TeacherTopic.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\TopicBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\objectives\\Objectives.js",["2412","2413","2414","2415"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\guidelines\\GuideLines.js",["2416","2417","2418","2419"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\SubTopics.js",["2420","2421","2422","2423"],"import React, { useEffect, useState } from \"react\"\r\nimport { getAdminSubTopics, addSubTopic, editSubTopic} from '../../../actions/courses';\r\nimport { connect } from 'react-redux';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment }\r\nfrom '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport AddSubTopic from './AddSubTopic';\r\nimport  Controls  from \"../../../components/formcontrols/Controls\";\r\nimport  Popup  from \"../../../components/formcontrols/Popup\";\r\nimport  useTable  from \"../../../components/table/useTable\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'ID' },\r\n  { id: 'title', label: 'TITLE' },\r\n  { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nconst SubTopics = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const {id} =props.data;\r\n\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n        props.getAdminSubTopics(id);\r\n    }\r\n    console.log('mount it!');\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const addOrEdit = (fee, resetForm) => {\r\n      if (fee.id > 0)\r\n        props.editSubTopic(fee.id, fee)\r\n      else\r\n        props.addSubTopic(fee)\r\n        //\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n  }\r\n\r\n\r\n\r\n  const {records} = props;\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead,\r\n      TblPagination,\r\n      recordsAfterPagingAndSorting\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  const handleClick = id =>{\r\n    history.push(`/teacherdashboard/subtopics/${id}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n\r\n      <Toolbar>\r\n          <Controls.Input\r\n              label=\"Search Topic\"\r\n              className={classes.searchInput}\r\n              InputProps={{\r\n                  startAdornment: (<InputAdornment position=\"start\">\r\n                      <Search />\r\n                  </InputAdornment>)\r\n              }}\r\n          />\r\n          <Controls.Button\r\n              text=\"Add New\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              className={classes.newButton}\r\n              onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n          />\r\n      </Toolbar>\r\n      <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n              {\r\n                  recordsAfterPagingAndSorting().map(item =>\r\n                      (<TableRow key={item.id}>\r\n                          <TableCell>{item.id}</TableCell>\r\n                          <TableCell>{item.title}</TableCell>\r\n                          <TableCell>\r\n                            <Controls.ActionButton\r\n                                color=\"primary\"\r\n                                onClick={() => { openInPopup(item) }}>\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                                EDIT\r\n                            </Controls.ActionButton>\r\n                            <Controls.ActionButton\r\n                                color=\"secondary\"\r\n                                onClick={() => { handleClick(item.id) }}\r\n                              >\r\n                                <BorderColorIcon fontSize=\"small\" />\r\n                                OPEN\r\n                            </Controls.ActionButton>\r\n                          </TableCell>\r\n                      </TableRow>)\r\n                  )\r\n              }\r\n          </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n      title=\"Subtopic Form\"\r\n      openPopup={openPopup}\r\n      setOpenPopup={setOpenPopup}\r\n      >\r\n        <AddSubTopic\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit}\r\n            id={id}\r\n        />\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    records: state.courses.adminsubtopics,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getAdminSubTopics, addSubTopic, editSubTopic} )\r\n  (SubTopics);\r\n","c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\guidelines\\AddGuideLine.js",["2424","2425","2426","2427"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\topics\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\AddSubTopic.js",["2428","2429","2430","2431"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\objectives\\AddObjective.js",["2432","2433","2434","2435"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\TeacherSubTopic.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\SubTopicBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\Notes.js",["2436","2437","2438","2439"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\subtopics\\appStyles-jss.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\AddNote.js",["2440","2441","2442"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\TeacherStudyNote.js",["2443"],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\NoteBag.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\About.js",[],"c:\\almus\\gbc_oms\\frontend\\src\\teacher\\courses\\notes\\appStyles-jss.js",[],{"ruleId":"2444","replacedBy":"2445"},{"ruleId":"2446","replacedBy":"2447"},{"ruleId":"2448","severity":1,"message":"2449","line":88,"column":3,"nodeType":"2450","messageId":"2451","endLine":90,"endColumn":4},{"ruleId":"2452","severity":1,"message":"2453","line":51,"column":7,"nodeType":"2454","messageId":"2455","endLine":51,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":68,"column":6,"nodeType":"2458","endLine":68,"endColumn":8,"suggestions":"2459"},{"ruleId":"2452","severity":1,"message":"2453","line":54,"column":7,"nodeType":"2454","messageId":"2455","endLine":54,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":71,"column":6,"nodeType":"2458","endLine":71,"endColumn":8,"suggestions":"2460"},{"ruleId":"2452","severity":1,"message":"2461","line":22,"column":10,"nodeType":"2454","messageId":"2455","endLine":22,"endColumn":29},{"ruleId":"2452","severity":1,"message":"2453","line":52,"column":7,"nodeType":"2454","messageId":"2455","endLine":52,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2462"},{"ruleId":"2452","severity":1,"message":"2453","line":54,"column":7,"nodeType":"2454","messageId":"2455","endLine":54,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":71,"column":6,"nodeType":"2458","endLine":71,"endColumn":8,"suggestions":"2463"},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":67,"column":6,"nodeType":"2458","endLine":67,"endColumn":8,"suggestions":"2464"},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":67,"column":6,"nodeType":"2458","endLine":67,"endColumn":8,"suggestions":"2465"},{"ruleId":"2452","severity":1,"message":"2453","line":52,"column":7,"nodeType":"2454","messageId":"2455","endLine":52,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2466"},{"ruleId":"2452","severity":1,"message":"2453","line":51,"column":7,"nodeType":"2454","messageId":"2455","endLine":51,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":56,"column":11,"nodeType":"2454","messageId":"2455","endLine":56,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2468"},{"ruleId":"2452","severity":1,"message":"2453","line":52,"column":7,"nodeType":"2454","messageId":"2455","endLine":52,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":57,"column":11,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2469"},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":67,"column":6,"nodeType":"2458","endLine":67,"endColumn":8,"suggestions":"2470"},{"ruleId":"2452","severity":1,"message":"2471","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2472","line":12,"column":8,"nodeType":"2454","messageId":"2455","endLine":12,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2473","line":13,"column":8,"nodeType":"2454","messageId":"2455","endLine":13,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2474","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2475","line":15,"column":8,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2476","line":16,"column":8,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":22},{"ruleId":"2452","severity":1,"message":"2453","line":53,"column":7,"nodeType":"2454","messageId":"2455","endLine":53,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2477"},{"ruleId":"2452","severity":1,"message":"2453","line":53,"column":7,"nodeType":"2454","messageId":"2455","endLine":53,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":58,"column":11,"nodeType":"2454","messageId":"2455","endLine":58,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":71,"column":6,"nodeType":"2458","endLine":71,"endColumn":8,"suggestions":"2478"},{"ruleId":"2452","severity":1,"message":"2453","line":52,"column":7,"nodeType":"2454","messageId":"2455","endLine":52,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":57,"column":11,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2479","line":62,"column":17,"nodeType":"2454","messageId":"2455","endLine":62,"endColumn":22},{"ruleId":"2456","severity":1,"message":"2480","line":74,"column":6,"nodeType":"2458","endLine":74,"endColumn":8,"suggestions":"2481"},{"ruleId":"2452","severity":1,"message":"2453","line":52,"column":7,"nodeType":"2454","messageId":"2455","endLine":52,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":57,"column":11,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2482"},{"ruleId":"2452","severity":1,"message":"2453","line":54,"column":7,"nodeType":"2454","messageId":"2455","endLine":54,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":72,"column":6,"nodeType":"2458","endLine":72,"endColumn":8,"suggestions":"2483"},{"ruleId":"2452","severity":1,"message":"2453","line":52,"column":7,"nodeType":"2454","messageId":"2455","endLine":52,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":57,"column":11,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2484"},{"ruleId":"2452","severity":1,"message":"2453","line":53,"column":7,"nodeType":"2454","messageId":"2455","endLine":53,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":58,"column":11,"nodeType":"2454","messageId":"2455","endLine":58,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":71,"column":6,"nodeType":"2458","endLine":71,"endColumn":8,"suggestions":"2485"},{"ruleId":"2452","severity":1,"message":"2453","line":53,"column":7,"nodeType":"2454","messageId":"2455","endLine":53,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":58,"column":11,"nodeType":"2454","messageId":"2455","endLine":58,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":71,"column":6,"nodeType":"2458","endLine":71,"endColumn":8,"suggestions":"2486"},{"ruleId":"2452","severity":1,"message":"2453","line":53,"column":7,"nodeType":"2454","messageId":"2455","endLine":53,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":58,"column":11,"nodeType":"2454","messageId":"2455","endLine":58,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":71,"column":6,"nodeType":"2458","endLine":71,"endColumn":8,"suggestions":"2487"},{"ruleId":"2452","severity":1,"message":"2453","line":53,"column":7,"nodeType":"2454","messageId":"2455","endLine":53,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":58,"column":11,"nodeType":"2454","messageId":"2455","endLine":58,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":71,"column":6,"nodeType":"2458","endLine":71,"endColumn":8,"suggestions":"2488"},{"ruleId":"2452","severity":1,"message":"2453","line":54,"column":7,"nodeType":"2454","messageId":"2455","endLine":54,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":73,"column":6,"nodeType":"2458","endLine":73,"endColumn":8,"suggestions":"2489"},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2453","line":56,"column":7,"nodeType":"2454","messageId":"2455","endLine":56,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":74,"column":6,"nodeType":"2458","endLine":74,"endColumn":8,"suggestions":"2491"},{"ruleId":"2452","severity":1,"message":"2453","line":54,"column":7,"nodeType":"2454","messageId":"2455","endLine":54,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":73,"column":6,"nodeType":"2458","endLine":73,"endColumn":8,"suggestions":"2492"},{"ruleId":"2452","severity":1,"message":"2493","line":98,"column":9,"nodeType":"2454","messageId":"2455","endLine":98,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2453","line":55,"column":7,"nodeType":"2454","messageId":"2455","endLine":55,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":73,"column":6,"nodeType":"2458","endLine":73,"endColumn":8,"suggestions":"2494"},{"ruleId":"2452","severity":1,"message":"2453","line":54,"column":7,"nodeType":"2454","messageId":"2455","endLine":54,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":73,"column":6,"nodeType":"2458","endLine":73,"endColumn":8,"suggestions":"2495"},{"ruleId":"2452","severity":1,"message":"2493","line":97,"column":9,"nodeType":"2454","messageId":"2455","endLine":97,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2453","line":54,"column":7,"nodeType":"2454","messageId":"2455","endLine":54,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":73,"column":6,"nodeType":"2458","endLine":73,"endColumn":8,"suggestions":"2496"},{"ruleId":"2452","severity":1,"message":"2493","line":98,"column":9,"nodeType":"2454","messageId":"2455","endLine":98,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2453","line":52,"column":7,"nodeType":"2454","messageId":"2455","endLine":52,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":57,"column":11,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2497"},{"ruleId":"2452","severity":1,"message":"2453","line":55,"column":7,"nodeType":"2454","messageId":"2455","endLine":55,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":73,"column":6,"nodeType":"2458","endLine":73,"endColumn":8,"suggestions":"2498"},{"ruleId":"2452","severity":1,"message":"2493","line":98,"column":9,"nodeType":"2454","messageId":"2455","endLine":98,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2453","line":55,"column":7,"nodeType":"2454","messageId":"2455","endLine":55,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":73,"column":6,"nodeType":"2458","endLine":73,"endColumn":8,"suggestions":"2499"},{"ruleId":"2452","severity":1,"message":"2493","line":98,"column":9,"nodeType":"2454","messageId":"2455","endLine":98,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2453","line":51,"column":7,"nodeType":"2454","messageId":"2455","endLine":51,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2457","line":68,"column":6,"nodeType":"2458","endLine":68,"endColumn":8,"suggestions":"2500"},{"ruleId":"2452","severity":1,"message":"2493","line":85,"column":9,"nodeType":"2454","messageId":"2455","endLine":85,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":57,"column":10,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2509"},{"ruleId":"2452","severity":1,"message":"2493","line":88,"column":9,"nodeType":"2454","messageId":"2455","endLine":88,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":49,"column":7,"nodeType":"2454","messageId":"2455","endLine":49,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":56,"column":10,"nodeType":"2454","messageId":"2455","endLine":56,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":68,"column":6,"nodeType":"2458","endLine":68,"endColumn":8,"suggestions":"2510"},{"ruleId":"2452","severity":1,"message":"2493","line":86,"column":9,"nodeType":"2454","messageId":"2455","endLine":86,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":57,"column":10,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2511"},{"ruleId":"2452","severity":1,"message":"2493","line":87,"column":9,"nodeType":"2454","messageId":"2455","endLine":87,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":57,"column":10,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2512"},{"ruleId":"2452","severity":1,"message":"2493","line":87,"column":9,"nodeType":"2454","messageId":"2455","endLine":87,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2513","line":17,"column":8,"nodeType":"2454","messageId":"2455","endLine":17,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2490","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2514","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2515"},{"ruleId":"2452","severity":1,"message":"2493","line":94,"column":9,"nodeType":"2454","messageId":"2455","endLine":94,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2516","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":35},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":57,"column":10,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2514","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2517"},{"ruleId":"2452","severity":1,"message":"2493","line":85,"column":9,"nodeType":"2454","messageId":"2455","endLine":85,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2490","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2453","line":51,"column":7,"nodeType":"2454","messageId":"2455","endLine":51,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2514","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2518"},{"ruleId":"2452","severity":1,"message":"2493","line":95,"column":9,"nodeType":"2454","messageId":"2455","endLine":95,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2519","line":55,"column":3,"nodeType":"2454","messageId":"2455","endLine":55,"endColumn":19},{"ruleId":"2452","severity":1,"message":"2520","line":59,"column":3,"nodeType":"2454","messageId":"2455","endLine":59,"endColumn":27},{"ruleId":"2452","severity":1,"message":"2521","line":63,"column":3,"nodeType":"2454","messageId":"2455","endLine":63,"endColumn":22},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":55,"column":11,"nodeType":"2454","messageId":"2455","endLine":55,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2514","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2522"},{"ruleId":"2452","severity":1,"message":"2493","line":94,"column":9,"nodeType":"2454","messageId":"2455","endLine":94,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":55,"column":11,"nodeType":"2454","messageId":"2455","endLine":55,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2514","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2523"},{"ruleId":"2452","severity":1,"message":"2493","line":94,"column":9,"nodeType":"2454","messageId":"2455","endLine":94,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2524","line":29,"column":8,"nodeType":"2454","messageId":"2455","endLine":29,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2525","line":30,"column":8,"nodeType":"2454","messageId":"2455","endLine":30,"endColumn":27},{"ruleId":"2452","severity":1,"message":"2526","line":31,"column":8,"nodeType":"2454","messageId":"2455","endLine":31,"endColumn":26},{"ruleId":"2452","severity":1,"message":"2527","line":32,"column":8,"nodeType":"2454","messageId":"2455","endLine":32,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2528","line":34,"column":8,"nodeType":"2454","messageId":"2455","endLine":34,"endColumn":19},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2530","line":3,"column":8,"nodeType":"2454","messageId":"2455","endLine":3,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2531","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2532","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2533","line":7,"column":8,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2534","line":15,"column":7,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2535","line":23,"column":7,"nodeType":"2454","messageId":"2455","endLine":23,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2536","line":41,"column":7,"nodeType":"2454","messageId":"2455","endLine":41,"endColumn":13},{"ruleId":"2537","severity":1,"message":"2538","line":8,"column":1,"nodeType":"2539","endLine":18,"endColumn":2},{"ruleId":"2537","severity":1,"message":"2538","line":5,"column":1,"nodeType":"2539","endLine":12,"endColumn":2},{"ruleId":"2537","severity":1,"message":"2538","line":15,"column":1,"nodeType":"2539","endLine":47,"endColumn":2},{"ruleId":"2452","severity":1,"message":"2540","line":22,"column":3,"nodeType":"2454","messageId":"2455","endLine":22,"endColumn":28},{"ruleId":"2452","severity":1,"message":"2541","line":26,"column":3,"nodeType":"2454","messageId":"2455","endLine":26,"endColumn":28},{"ruleId":"2452","severity":1,"message":"2542","line":34,"column":3,"nodeType":"2454","messageId":"2455","endLine":34,"endColumn":29},{"ruleId":"2452","severity":1,"message":"2543","line":38,"column":3,"nodeType":"2454","messageId":"2455","endLine":38,"endColumn":28},{"ruleId":"2452","severity":1,"message":"2544","line":42,"column":3,"nodeType":"2454","messageId":"2455","endLine":42,"endColumn":29},{"ruleId":"2452","severity":1,"message":"2545","line":45,"column":3,"nodeType":"2454","messageId":"2455","endLine":45,"endColumn":30},{"ruleId":"2452","severity":1,"message":"2546","line":46,"column":3,"nodeType":"2454","messageId":"2455","endLine":46,"endColumn":28},{"ruleId":"2452","severity":1,"message":"2547","line":47,"column":3,"nodeType":"2454","messageId":"2455","endLine":47,"endColumn":23},{"ruleId":"2452","severity":1,"message":"2548","line":48,"column":3,"nodeType":"2454","messageId":"2455","endLine":48,"endColumn":22},{"ruleId":"2452","severity":1,"message":"2549","line":50,"column":3,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":33},{"ruleId":"2452","severity":1,"message":"2519","line":54,"column":3,"nodeType":"2454","messageId":"2455","endLine":54,"endColumn":19},{"ruleId":"2452","severity":1,"message":"2520","line":58,"column":3,"nodeType":"2454","messageId":"2455","endLine":58,"endColumn":27},{"ruleId":"2452","severity":1,"message":"2521","line":62,"column":3,"nodeType":"2454","messageId":"2455","endLine":62,"endColumn":22},{"ruleId":"2537","severity":1,"message":"2538","line":16,"column":1,"nodeType":"2539","endLine":48,"endColumn":2},{"ruleId":"2537","severity":1,"message":"2538","line":15,"column":1,"nodeType":"2539","endLine":47,"endColumn":2},{"ruleId":"2537","severity":1,"message":"2538","line":14,"column":1,"nodeType":"2539","endLine":41,"endColumn":2},{"ruleId":"2537","severity":1,"message":"2538","line":16,"column":1,"nodeType":"2539","endLine":48,"endColumn":2},{"ruleId":"2537","severity":1,"message":"2538","line":14,"column":1,"nodeType":"2539","endLine":41,"endColumn":2},{"ruleId":"2537","severity":1,"message":"2538","line":17,"column":1,"nodeType":"2539","endLine":49,"endColumn":2},{"ruleId":"2537","severity":1,"message":"2538","line":17,"column":1,"nodeType":"2539","endLine":49,"endColumn":2},{"ruleId":"2452","severity":1,"message":"2550","line":11,"column":5,"nodeType":"2454","messageId":"2455","endLine":11,"endColumn":42},{"ruleId":"2537","severity":1,"message":"2538","line":12,"column":1,"nodeType":"2539","endLine":22,"endColumn":2},{"ruleId":"2537","severity":1,"message":"2538","line":22,"column":1,"nodeType":"2539","endLine":81,"endColumn":2},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2551","line":8,"column":8,"nodeType":"2454","messageId":"2455","endLine":8,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2552","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2553","line":13,"column":8,"nodeType":"2454","messageId":"2455","endLine":13,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2554","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":23},{"ruleId":"2452","severity":1,"message":"2555","line":16,"column":8,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2556","line":27,"column":7,"nodeType":"2454","messageId":"2455","endLine":27,"endColumn":9},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":19},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2557","line":4,"column":24,"nodeType":"2454","messageId":"2455","endLine":4,"endColumn":41},{"ruleId":"2452","severity":1,"message":"2558","line":5,"column":17,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":31},{"ruleId":"2452","severity":1,"message":"2559","line":6,"column":17,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":31},{"ruleId":"2452","severity":1,"message":"2560","line":7,"column":16,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":25},{"ruleId":"2452","severity":1,"message":"2561","line":8,"column":21,"nodeType":"2454","messageId":"2455","endLine":8,"endColumn":32},{"ruleId":"2452","severity":1,"message":"2562","line":9,"column":19,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":30},{"ruleId":"2452","severity":1,"message":"2563","line":10,"column":18,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":25},{"ruleId":"2452","severity":1,"message":"2564","line":11,"column":16,"nodeType":"2454","messageId":"2455","endLine":11,"endColumn":29},{"ruleId":"2452","severity":1,"message":"2565","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":25},{"ruleId":"2452","severity":1,"message":"2566","line":15,"column":8,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2567","line":16,"column":8,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":29},{"ruleId":"2452","severity":1,"message":"2568","line":17,"column":8,"nodeType":"2454","messageId":"2455","endLine":17,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2569","line":18,"column":8,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2570","line":19,"column":8,"nodeType":"2454","messageId":"2455","endLine":19,"endColumn":26},{"ruleId":"2452","severity":1,"message":"2571","line":20,"column":8,"nodeType":"2454","messageId":"2455","endLine":20,"endColumn":23},{"ruleId":"2452","severity":1,"message":"2572","line":21,"column":8,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2573","line":22,"column":8,"nodeType":"2454","messageId":"2455","endLine":22,"endColumn":20},{"ruleId":"2452","severity":1,"message":"2574","line":26,"column":8,"nodeType":"2454","messageId":"2455","endLine":26,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2575","line":26,"column":7,"nodeType":"2454","messageId":"2455","endLine":26,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2575","line":25,"column":7,"nodeType":"2454","messageId":"2455","endLine":25,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2575","line":30,"column":7,"nodeType":"2454","messageId":"2455","endLine":30,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2575","line":30,"column":7,"nodeType":"2454","messageId":"2455","endLine":30,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":19},{"ruleId":"2452","severity":1,"message":"2576","line":10,"column":8,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2575","line":30,"column":7,"nodeType":"2454","messageId":"2455","endLine":30,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":19},{"ruleId":"2452","severity":1,"message":"2577","line":60,"column":7,"nodeType":"2454","messageId":"2455","endLine":60,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2578","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2579","line":99,"column":7,"nodeType":"2454","messageId":"2455","endLine":99,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2580","line":101,"column":7,"nodeType":"2454","messageId":"2455","endLine":101,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2581","line":1,"column":17,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":25},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":5,"column":10,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2582","line":5,"column":10,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2533","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2531","line":7,"column":8,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2532","line":8,"column":8,"nodeType":"2454","messageId":"2455","endLine":8,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2530","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2583","line":10,"column":8,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2584","line":11,"column":8,"nodeType":"2454","messageId":"2455","endLine":11,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2585","line":12,"column":8,"nodeType":"2454","messageId":"2455","endLine":12,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2586","line":45,"column":7,"nodeType":"2454","messageId":"2455","endLine":45,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2577","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2587","line":51,"column":7,"nodeType":"2454","messageId":"2455","endLine":51,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2588","line":52,"column":7,"nodeType":"2454","messageId":"2455","endLine":52,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2589","line":53,"column":7,"nodeType":"2454","messageId":"2455","endLine":53,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2590","line":54,"column":7,"nodeType":"2454","messageId":"2455","endLine":54,"endColumn":22},{"ruleId":"2452","severity":1,"message":"2591","line":55,"column":7,"nodeType":"2454","messageId":"2455","endLine":55,"endColumn":19},{"ruleId":"2452","severity":1,"message":"2592","line":58,"column":13,"nodeType":"2454","messageId":"2455","endLine":58,"endColumn":22},{"ruleId":"2452","severity":1,"message":"2593","line":60,"column":11,"nodeType":"2454","messageId":"2455","endLine":60,"endColumn":20},{"ruleId":"2452","severity":1,"message":"2594","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2595","line":10,"column":10,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":20},{"ruleId":"2452","severity":1,"message":"2596","line":11,"column":8,"nodeType":"2454","messageId":"2455","endLine":11,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2598","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2599","line":40,"column":9,"nodeType":"2454","messageId":"2455","endLine":40,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":86,"column":6,"nodeType":"2458","endLine":86,"endColumn":21,"suggestions":"2601"},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2598","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2599","line":40,"column":9,"nodeType":"2454","messageId":"2455","endLine":40,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":86,"column":6,"nodeType":"2458","endLine":86,"endColumn":21,"suggestions":"2602"},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2598","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2599","line":40,"column":9,"nodeType":"2454","messageId":"2455","endLine":40,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":83,"column":6,"nodeType":"2458","endLine":83,"endColumn":21,"suggestions":"2603"},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2551","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2604","line":7,"column":8,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2595","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2605","line":10,"column":8,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2588","line":32,"column":13,"nodeType":"2454","messageId":"2455","endLine":32,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2606","line":35,"column":7,"nodeType":"2454","messageId":"2455","endLine":35,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2598","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2599","line":40,"column":9,"nodeType":"2454","messageId":"2455","endLine":40,"endColumn":16},{"ruleId":"2607","severity":1,"message":"2608","line":48,"column":5,"nodeType":"2609","messageId":"2610","endLine":48,"endColumn":24},{"ruleId":"2456","severity":1,"message":"2600","line":90,"column":6,"nodeType":"2458","endLine":90,"endColumn":21,"suggestions":"2611"},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2599","line":42,"column":9,"nodeType":"2454","messageId":"2455","endLine":42,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":98,"column":6,"nodeType":"2458","endLine":98,"endColumn":21,"suggestions":"2613"},{"ruleId":"2537","severity":1,"message":"2538","line":13,"column":1,"nodeType":"2539","endLine":23,"endColumn":2},{"ruleId":"2456","severity":1,"message":"2612","line":101,"column":6,"nodeType":"2458","endLine":101,"endColumn":21,"suggestions":"2614"},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2551","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2604","line":7,"column":8,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2595","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2605","line":10,"column":8,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2588","line":32,"column":13,"nodeType":"2454","messageId":"2455","endLine":32,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2606","line":35,"column":7,"nodeType":"2454","messageId":"2455","endLine":35,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2551","line":8,"column":8,"nodeType":"2454","messageId":"2455","endLine":8,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2552","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2553","line":13,"column":8,"nodeType":"2454","messageId":"2455","endLine":13,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2554","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":23},{"ruleId":"2452","severity":1,"message":"2555","line":16,"column":8,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2615","line":25,"column":7,"nodeType":"2454","messageId":"2455","endLine":25,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2616","line":27,"column":7,"nodeType":"2454","messageId":"2455","endLine":27,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2556","line":28,"column":7,"nodeType":"2454","messageId":"2455","endLine":28,"endColumn":9},{"ruleId":"2452","severity":1,"message":"2617","line":31,"column":7,"nodeType":"2454","messageId":"2455","endLine":31,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2618","line":32,"column":7,"nodeType":"2454","messageId":"2455","endLine":32,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2619","line":37,"column":7,"nodeType":"2454","messageId":"2455","endLine":37,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2620","line":89,"column":8,"nodeType":"2458","endLine":89,"endColumn":10,"suggestions":"2621"},{"ruleId":"2452","severity":1,"message":"2493","line":100,"column":9,"nodeType":"2454","messageId":"2455","endLine":100,"endColumn":21},{"ruleId":"2456","severity":1,"message":"2620","line":70,"column":4,"nodeType":"2458","endLine":70,"endColumn":6,"suggestions":"2622"},{"ruleId":"2452","severity":1,"message":"2493","line":80,"column":9,"nodeType":"2454","messageId":"2455","endLine":80,"endColumn":21},{"ruleId":"2456","severity":1,"message":"2620","line":70,"column":4,"nodeType":"2458","endLine":70,"endColumn":6,"suggestions":"2623"},{"ruleId":"2452","severity":1,"message":"2493","line":80,"column":9,"nodeType":"2454","messageId":"2455","endLine":80,"endColumn":21},{"ruleId":"2456","severity":1,"message":"2620","line":71,"column":4,"nodeType":"2458","endLine":71,"endColumn":6,"suggestions":"2624"},{"ruleId":"2452","severity":1,"message":"2493","line":81,"column":9,"nodeType":"2454","messageId":"2455","endLine":81,"endColumn":21},{"ruleId":"2456","severity":1,"message":"2620","line":70,"column":8,"nodeType":"2458","endLine":70,"endColumn":10,"suggestions":"2625"},{"ruleId":"2452","severity":1,"message":"2493","line":80,"column":9,"nodeType":"2454","messageId":"2455","endLine":80,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2620","line":89,"column":8,"nodeType":"2458","endLine":89,"endColumn":10,"suggestions":"2626"},{"ruleId":"2452","severity":1,"message":"2493","line":100,"column":9,"nodeType":"2454","messageId":"2455","endLine":100,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2599","line":48,"column":9,"nodeType":"2454","messageId":"2455","endLine":48,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":100,"column":6,"nodeType":"2458","endLine":100,"endColumn":21,"suggestions":"2627"},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2620","line":93,"column":8,"nodeType":"2458","endLine":93,"endColumn":10,"suggestions":"2628"},{"ruleId":"2452","severity":1,"message":"2493","line":104,"column":9,"nodeType":"2454","messageId":"2455","endLine":104,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2599","line":48,"column":9,"nodeType":"2454","messageId":"2455","endLine":48,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2629","line":68,"column":7,"nodeType":"2454","messageId":"2455","endLine":68,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2630","line":7,"column":8,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2453","line":51,"column":7,"nodeType":"2454","messageId":"2455","endLine":51,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2620","line":90,"column":8,"nodeType":"2458","endLine":90,"endColumn":10,"suggestions":"2631"},{"ruleId":"2452","severity":1,"message":"2493","line":101,"column":9,"nodeType":"2454","messageId":"2455","endLine":101,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2632","line":10,"column":7,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":88,"column":6,"nodeType":"2458","endLine":88,"endColumn":21,"suggestions":"2633"},{"ruleId":"2452","severity":1,"message":"2632","line":9,"column":7,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":79,"column":6,"nodeType":"2458","endLine":79,"endColumn":21,"suggestions":"2634"},{"ruleId":"2452","severity":1,"message":"2632","line":9,"column":7,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":79,"column":6,"nodeType":"2458","endLine":79,"endColumn":21,"suggestions":"2635"},{"ruleId":"2452","severity":1,"message":"2636","line":14,"column":5,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2637","line":15,"column":5,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2632","line":10,"column":7,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":83,"column":6,"nodeType":"2458","endLine":83,"endColumn":21,"suggestions":"2638"},{"ruleId":"2452","severity":1,"message":"2575","line":26,"column":7,"nodeType":"2454","messageId":"2455","endLine":26,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2575","line":25,"column":7,"nodeType":"2454","messageId":"2455","endLine":25,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2575","line":30,"column":7,"nodeType":"2454","messageId":"2455","endLine":30,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2575","line":30,"column":7,"nodeType":"2454","messageId":"2455","endLine":30,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2577","line":60,"column":7,"nodeType":"2454","messageId":"2455","endLine":60,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2557","line":4,"column":24,"nodeType":"2454","messageId":"2455","endLine":4,"endColumn":41},{"ruleId":"2452","severity":1,"message":"2558","line":5,"column":17,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":31},{"ruleId":"2452","severity":1,"message":"2559","line":6,"column":17,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":31},{"ruleId":"2452","severity":1,"message":"2560","line":7,"column":16,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":25},{"ruleId":"2452","severity":1,"message":"2561","line":8,"column":21,"nodeType":"2454","messageId":"2455","endLine":8,"endColumn":32},{"ruleId":"2452","severity":1,"message":"2562","line":9,"column":19,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":30},{"ruleId":"2452","severity":1,"message":"2563","line":10,"column":18,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":25},{"ruleId":"2452","severity":1,"message":"2564","line":11,"column":16,"nodeType":"2454","messageId":"2455","endLine":11,"endColumn":29},{"ruleId":"2452","severity":1,"message":"2565","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":25},{"ruleId":"2452","severity":1,"message":"2566","line":15,"column":8,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2567","line":16,"column":8,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":29},{"ruleId":"2452","severity":1,"message":"2568","line":17,"column":8,"nodeType":"2454","messageId":"2455","endLine":17,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2569","line":18,"column":8,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2570","line":19,"column":8,"nodeType":"2454","messageId":"2455","endLine":19,"endColumn":26},{"ruleId":"2452","severity":1,"message":"2571","line":20,"column":8,"nodeType":"2454","messageId":"2455","endLine":20,"endColumn":23},{"ruleId":"2452","severity":1,"message":"2572","line":21,"column":8,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2573","line":22,"column":8,"nodeType":"2454","messageId":"2455","endLine":22,"endColumn":20},{"ruleId":"2452","severity":1,"message":"2639","line":24,"column":8,"nodeType":"2454","messageId":"2455","endLine":24,"endColumn":20},{"ruleId":"2452","severity":1,"message":"2574","line":26,"column":8,"nodeType":"2454","messageId":"2455","endLine":26,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2584","line":11,"column":8,"nodeType":"2454","messageId":"2455","endLine":11,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2585","line":12,"column":8,"nodeType":"2454","messageId":"2455","endLine":12,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2577","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2595","line":10,"column":10,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":20},{"ruleId":"2452","severity":1,"message":"2596","line":11,"column":8,"nodeType":"2454","messageId":"2455","endLine":11,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2599","line":48,"column":9,"nodeType":"2454","messageId":"2455","endLine":48,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":100,"column":6,"nodeType":"2458","endLine":100,"endColumn":21,"suggestions":"2640"},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2620","line":93,"column":8,"nodeType":"2458","endLine":93,"endColumn":10,"suggestions":"2641"},{"ruleId":"2452","severity":1,"message":"2493","line":104,"column":9,"nodeType":"2454","messageId":"2455","endLine":104,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2630","line":7,"column":8,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2453","line":51,"column":7,"nodeType":"2454","messageId":"2455","endLine":51,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2620","line":90,"column":8,"nodeType":"2458","endLine":90,"endColumn":10,"suggestions":"2642"},{"ruleId":"2452","severity":1,"message":"2493","line":101,"column":9,"nodeType":"2454","messageId":"2455","endLine":101,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2632","line":10,"column":7,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":89,"column":6,"nodeType":"2458","endLine":89,"endColumn":21,"suggestions":"2643"},{"ruleId":"2452","severity":1,"message":"2632","line":10,"column":7,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":87,"column":6,"nodeType":"2458","endLine":87,"endColumn":21,"suggestions":"2644"},{"ruleId":"2456","severity":1,"message":"2620","line":71,"column":4,"nodeType":"2458","endLine":71,"endColumn":6,"suggestions":"2645"},{"ruleId":"2452","severity":1,"message":"2493","line":81,"column":9,"nodeType":"2454","messageId":"2455","endLine":81,"endColumn":21},{"ruleId":"2456","severity":1,"message":"2620","line":70,"column":4,"nodeType":"2458","endLine":70,"endColumn":6,"suggestions":"2646"},{"ruleId":"2452","severity":1,"message":"2493","line":80,"column":9,"nodeType":"2454","messageId":"2455","endLine":80,"endColumn":21},{"ruleId":"2456","severity":1,"message":"2620","line":70,"column":4,"nodeType":"2458","endLine":70,"endColumn":6,"suggestions":"2647"},{"ruleId":"2452","severity":1,"message":"2493","line":80,"column":9,"nodeType":"2454","messageId":"2455","endLine":80,"endColumn":21},{"ruleId":"2456","severity":1,"message":"2620","line":70,"column":8,"nodeType":"2458","endLine":70,"endColumn":10,"suggestions":"2648"},{"ruleId":"2452","severity":1,"message":"2493","line":80,"column":9,"nodeType":"2454","messageId":"2455","endLine":80,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2599","line":49,"column":9,"nodeType":"2454","messageId":"2455","endLine":49,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":95,"column":6,"nodeType":"2458","endLine":95,"endColumn":21,"suggestions":"2649"},{"ruleId":"2452","severity":1,"message":"2632","line":10,"column":7,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":83,"column":6,"nodeType":"2458","endLine":83,"endColumn":21,"suggestions":"2650"},{"ruleId":"2452","severity":1,"message":"2599","line":49,"column":9,"nodeType":"2454","messageId":"2455","endLine":49,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":100,"column":6,"nodeType":"2458","endLine":100,"endColumn":21,"suggestions":"2651"},{"ruleId":"2452","severity":1,"message":"2599","line":37,"column":9,"nodeType":"2454","messageId":"2455","endLine":37,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":73,"column":6,"nodeType":"2458","endLine":73,"endColumn":21,"suggestions":"2652"},{"ruleId":"2452","severity":1,"message":"2599","line":48,"column":9,"nodeType":"2454","messageId":"2455","endLine":48,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":89,"column":6,"nodeType":"2458","endLine":89,"endColumn":21,"suggestions":"2653"},{"ruleId":"2452","severity":1,"message":"2599","line":45,"column":9,"nodeType":"2454","messageId":"2455","endLine":45,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":81,"column":6,"nodeType":"2458","endLine":81,"endColumn":21,"suggestions":"2654"},{"ruleId":"2452","severity":1,"message":"2655","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":20},{"ruleId":"2452","severity":1,"message":"2656","line":11,"column":3,"nodeType":"2454","messageId":"2455","endLine":11,"endColumn":26},{"ruleId":"2452","severity":1,"message":"2657","line":12,"column":3,"nodeType":"2454","messageId":"2455","endLine":12,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2658","line":13,"column":3,"nodeType":"2454","messageId":"2455","endLine":13,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2632","line":16,"column":7,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2659","line":61,"column":10,"nodeType":"2454","messageId":"2455","endLine":61,"endColumn":22},{"ruleId":"2452","severity":1,"message":"2660","line":63,"column":9,"nodeType":"2454","messageId":"2455","endLine":63,"endColumn":25},{"ruleId":"2456","severity":1,"message":"2612","line":125,"column":6,"nodeType":"2458","endLine":125,"endColumn":21,"suggestions":"2661"},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2662","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2663","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2664","line":15,"column":8,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2599","line":45,"column":9,"nodeType":"2454","messageId":"2455","endLine":45,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":81,"column":6,"nodeType":"2458","endLine":81,"endColumn":21,"suggestions":"2665"},{"ruleId":"2452","severity":1,"message":"2599","line":45,"column":9,"nodeType":"2454","messageId":"2455","endLine":45,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":81,"column":6,"nodeType":"2458","endLine":81,"endColumn":21,"suggestions":"2666"},{"ruleId":"2452","severity":1,"message":"2599","line":53,"column":9,"nodeType":"2454","messageId":"2455","endLine":53,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":103,"column":6,"nodeType":"2458","endLine":103,"endColumn":21,"suggestions":"2667"},{"ruleId":"2452","severity":1,"message":"2599","line":45,"column":9,"nodeType":"2454","messageId":"2455","endLine":45,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":84,"column":6,"nodeType":"2458","endLine":84,"endColumn":21,"suggestions":"2668"},{"ruleId":"2452","severity":1,"message":"2599","line":47,"column":9,"nodeType":"2454","messageId":"2455","endLine":47,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":85,"column":6,"nodeType":"2458","endLine":85,"endColumn":21,"suggestions":"2669"},{"ruleId":"2452","severity":1,"message":"2670","line":10,"column":8,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2582","line":4,"column":10,"nodeType":"2454","messageId":"2455","endLine":4,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2671","line":37,"column":22,"nodeType":"2454","messageId":"2455","endLine":37,"endColumn":26},{"ruleId":"2452","severity":1,"message":"2672","line":13,"column":8,"nodeType":"2454","messageId":"2455","endLine":13,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2673","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2674","line":15,"column":8,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2675","line":16,"column":8,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2676","line":17,"column":8,"nodeType":"2454","messageId":"2455","endLine":17,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2507","line":4,"column":10,"nodeType":"2454","messageId":"2455","endLine":4,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2677","line":11,"column":8,"nodeType":"2454","messageId":"2455","endLine":11,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2678","line":10,"column":8,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2678","line":1,"column":8,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":43,"column":7,"nodeType":"2454","messageId":"2455","endLine":43,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":50,"column":10,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":62,"column":6,"nodeType":"2458","endLine":62,"endColumn":8,"suggestions":"2679"},{"ruleId":"2452","severity":1,"message":"2493","line":77,"column":9,"nodeType":"2454","messageId":"2455","endLine":77,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":43,"column":7,"nodeType":"2454","messageId":"2455","endLine":43,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":50,"column":10,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":62,"column":6,"nodeType":"2458","endLine":62,"endColumn":8,"suggestions":"2680"},{"ruleId":"2452","severity":1,"message":"2493","line":75,"column":9,"nodeType":"2454","messageId":"2455","endLine":75,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":44,"column":7,"nodeType":"2454","messageId":"2455","endLine":44,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":51,"column":10,"nodeType":"2454","messageId":"2455","endLine":51,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":63,"column":6,"nodeType":"2458","endLine":63,"endColumn":8,"suggestions":"2681"},{"ruleId":"2452","severity":1,"message":"2493","line":80,"column":9,"nodeType":"2454","messageId":"2455","endLine":80,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":43,"column":7,"nodeType":"2454","messageId":"2455","endLine":43,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":50,"column":10,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":62,"column":6,"nodeType":"2458","endLine":62,"endColumn":8,"suggestions":"2682"},{"ruleId":"2452","severity":1,"message":"2493","line":80,"column":9,"nodeType":"2454","messageId":"2455","endLine":80,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2551","line":8,"column":8,"nodeType":"2454","messageId":"2455","endLine":8,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2552","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2553","line":13,"column":8,"nodeType":"2454","messageId":"2455","endLine":13,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2554","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":23},{"ruleId":"2452","severity":1,"message":"2555","line":16,"column":8,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2615","line":25,"column":7,"nodeType":"2454","messageId":"2455","endLine":25,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2616","line":27,"column":7,"nodeType":"2454","messageId":"2455","endLine":27,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2556","line":28,"column":7,"nodeType":"2454","messageId":"2455","endLine":28,"endColumn":9},{"ruleId":"2452","severity":1,"message":"2617","line":31,"column":7,"nodeType":"2454","messageId":"2455","endLine":31,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2618","line":32,"column":7,"nodeType":"2454","messageId":"2455","endLine":32,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2619","line":37,"column":7,"nodeType":"2454","messageId":"2455","endLine":37,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2551","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2604","line":7,"column":8,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2595","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2605","line":10,"column":8,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2588","line":32,"column":13,"nodeType":"2454","messageId":"2455","endLine":32,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2606","line":35,"column":7,"nodeType":"2454","messageId":"2455","endLine":35,"endColumn":17},{"ruleId":"2456","severity":1,"message":"2612","line":101,"column":6,"nodeType":"2458","endLine":101,"endColumn":21,"suggestions":"2683"},{"ruleId":"2452","severity":1,"message":"2501","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2490","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2502","line":7,"column":10,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":16},{"ruleId":"2452","severity":1,"message":"2503","line":14,"column":3,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2504","line":15,"column":3,"nodeType":"2454","messageId":"2455","endLine":15,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2505","line":16,"column":3,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2506","line":18,"column":3,"nodeType":"2454","messageId":"2455","endLine":18,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2507","line":21,"column":9,"nodeType":"2454","messageId":"2455","endLine":21,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2508","line":57,"column":10,"nodeType":"2454","messageId":"2455","endLine":57,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2514","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2684"},{"ruleId":"2452","severity":1,"message":"2493","line":85,"column":9,"nodeType":"2454","messageId":"2455","endLine":85,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2551","line":8,"column":8,"nodeType":"2454","messageId":"2455","endLine":8,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2552","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":15},{"ruleId":"2452","severity":1,"message":"2553","line":13,"column":8,"nodeType":"2454","messageId":"2455","endLine":13,"endColumn":12},{"ruleId":"2452","severity":1,"message":"2554","line":14,"column":8,"nodeType":"2454","messageId":"2455","endLine":14,"endColumn":23},{"ruleId":"2452","severity":1,"message":"2555","line":16,"column":8,"nodeType":"2454","messageId":"2455","endLine":16,"endColumn":11},{"ruleId":"2452","severity":1,"message":"2556","line":27,"column":7,"nodeType":"2454","messageId":"2455","endLine":27,"endColumn":9},{"ruleId":"2452","severity":1,"message":"2529","line":2,"column":8,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2551","line":6,"column":8,"nodeType":"2454","messageId":"2455","endLine":6,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2604","line":7,"column":8,"nodeType":"2454","messageId":"2455","endLine":7,"endColumn":13},{"ruleId":"2452","severity":1,"message":"2595","line":9,"column":8,"nodeType":"2454","messageId":"2455","endLine":9,"endColumn":18},{"ruleId":"2452","severity":1,"message":"2605","line":10,"column":8,"nodeType":"2454","messageId":"2455","endLine":10,"endColumn":24},{"ruleId":"2452","severity":1,"message":"2588","line":32,"column":13,"nodeType":"2454","messageId":"2455","endLine":32,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2606","line":35,"column":7,"nodeType":"2454","messageId":"2455","endLine":35,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2598","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2599","line":40,"column":9,"nodeType":"2454","messageId":"2455","endLine":40,"endColumn":16},{"ruleId":"2607","severity":1,"message":"2608","line":48,"column":5,"nodeType":"2609","messageId":"2610","endLine":48,"endColumn":24},{"ruleId":"2456","severity":1,"message":"2600","line":90,"column":6,"nodeType":"2458","endLine":90,"endColumn":21,"suggestions":"2685"},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":55,"column":11,"nodeType":"2454","messageId":"2455","endLine":55,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2514","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2686"},{"ruleId":"2452","severity":1,"message":"2493","line":94,"column":9,"nodeType":"2454","messageId":"2455","endLine":94,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2452","severity":1,"message":"2467","line":55,"column":11,"nodeType":"2454","messageId":"2455","endLine":55,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2514","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2687"},{"ruleId":"2452","severity":1,"message":"2493","line":94,"column":9,"nodeType":"2454","messageId":"2455","endLine":94,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2490","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2453","line":51,"column":7,"nodeType":"2454","messageId":"2455","endLine":51,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2514","line":70,"column":6,"nodeType":"2458","endLine":70,"endColumn":8,"suggestions":"2688"},{"ruleId":"2452","severity":1,"message":"2493","line":95,"column":9,"nodeType":"2454","messageId":"2455","endLine":95,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2598","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2599","line":40,"column":9,"nodeType":"2454","messageId":"2455","endLine":40,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":86,"column":6,"nodeType":"2458","endLine":86,"endColumn":21,"suggestions":"2689"},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2598","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2599","line":40,"column":9,"nodeType":"2454","messageId":"2455","endLine":40,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":83,"column":6,"nodeType":"2458","endLine":83,"endColumn":21,"suggestions":"2690"},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2598","line":2,"column":10,"nodeType":"2454","messageId":"2455","endLine":2,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2599","line":40,"column":9,"nodeType":"2454","messageId":"2455","endLine":40,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2600","line":86,"column":6,"nodeType":"2458","endLine":86,"endColumn":21,"suggestions":"2691"},{"ruleId":"2452","severity":1,"message":"2490","line":5,"column":8,"nodeType":"2454","messageId":"2455","endLine":5,"endColumn":17},{"ruleId":"2452","severity":1,"message":"2453","line":50,"column":7,"nodeType":"2454","messageId":"2455","endLine":50,"endColumn":14},{"ruleId":"2456","severity":1,"message":"2514","line":69,"column":6,"nodeType":"2458","endLine":69,"endColumn":8,"suggestions":"2692"},{"ruleId":"2452","severity":1,"message":"2493","line":94,"column":9,"nodeType":"2454","messageId":"2455","endLine":94,"endColumn":21},{"ruleId":"2452","severity":1,"message":"2597","line":1,"column":29,"nodeType":"2454","messageId":"2455","endLine":1,"endColumn":37},{"ruleId":"2452","severity":1,"message":"2599","line":42,"column":9,"nodeType":"2454","messageId":"2455","endLine":42,"endColumn":16},{"ruleId":"2456","severity":1,"message":"2612","line":98,"column":6,"nodeType":"2458","endLine":98,"endColumn":21,"suggestions":"2693"},{"ruleId":"2452","severity":1,"message":"2513","line":17,"column":8,"nodeType":"2454","messageId":"2455","endLine":17,"endColumn":18},"no-native-reassign",["2694"],"no-negated-in-lhs",["2695"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'options' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["2696"],["2697"],"'GiConsoleController' is defined but never used.",["2698"],["2699"],["2700"],["2701"],["2702"],"'history' is assigned a value but never used.",["2703"],["2704"],["2705"],"'Hidden' is defined but never used.","'DateWidget' is defined but never used.","'TaskWidget' is defined but never used.","'WeatherWidget' is defined but never used.","'ContactWidget' is defined but never used.","'TimelineWidget' is defined but never used.",["2706"],["2707"],"'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2708"],["2709"],["2710"],["2711"],["2712"],["2713"],["2714"],["2715"],["2716"],"'CloseIcon' is defined but never used.",["2717"],["2718"],"'handleSearch' is assigned a value but never used.",["2719"],["2720"],["2721"],["2722"],["2723"],["2724"],["2725"],"'EditOutlinedIcon' is defined but never used.","'Search' is defined but never used.","'TableBody' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'InputAdornment' is defined but never used.","'Link' is defined but never used.","'filterFn' is assigned a value but never used.",["2726"],["2727"],["2728"],["2729"],"'SchoolIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2730"],"'InformationTechnologyLayout' is defined but never used.",["2731"],["2732"],"'GET_ADMIN_AUTHOR' is defined but never used.","'GET_ADMIN_PUBLISHER_CITY' is defined but never used.","'GET_ADMIN_PUBLISHER' is defined but never used.",["2733"],["2734"],"'LeftSidebarThumb' is defined but never used.","'LeftSidebarBigThumb' is defined but never used.","'TopNavigationThumb' is defined but never used.","'MegaMenuThumb' is defined but never used.","'LayoutThumb' is defined but never used.","'PropTypes' is defined but never used.","'Avatar' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Button' is defined but never used.","'optionsOpt' is assigned a value but never used.","'ITEM_HEIGHT' is assigned a value but never used.","'avatar' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'GET_ADMIN_TOPIC_OBJECTIVE' is defined but never used.","'GET_ADMIN_TOPIC_GUIDELINE' is defined but never used.","'GET_ADMIN_STUDY_NOTE_IMAGE' is defined but never used.","'GET_ADMIN_STUDY_NOTE_FILE' is defined but never used.","'GET_ADMIN_STUDY_NOTE_VIDEO' is defined but never used.","'GET_ADMIN_STUDY_NOTES_NOTES' is defined but never used.","'GET_ADMIN_STUDY_NOTE_NOTE' is defined but never used.","'EDIT_STUDY_NOTE_NOTE' is defined but never used.","'ADD_STUDY_NOTE_NOTE' is defined but never used.","'GET_ADMIN_STUDY_NOTE_REFERENCE' is defined but never used.","'GET_INVENTORY_CHECK_FREQUENCY_CHOICES' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'Chip' is defined but never used.","'AddShoppingCart' is defined but never used.","'Fab' is defined but never used.","'id' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","'CalendarTodayIcon' is defined but never used.","'TrainIcon' is defined but never used.","'SupervisorAccountIcon' is defined but never used.","'ShutterSpeedIcon' is defined but never used.","'LocalCarWashIcon' is defined but never used.","'AccountBalanceIcon' is defined but never used.","'AttachMoneyIcon' is defined but never used.","'BuildIcon' is defined but never used.","'CategoryIcon' is defined but never used.","'PersonIcon' is defined but never used.","'titleException' is assigned a value but never used.","'navigationConfig' is defined but never used.","'dataMenu' is assigned a value but never used.","'UserMenu' is defined but never used.","'mode' is assigned a value but never used.","'openGuide' is assigned a value but never used.","'Fragment' is defined but never used.","'NavLink' is defined but never used.","'brand' is defined but never used.","'dummy' is defined but never used.","'logo' is defined but never used.","'turnDarker' is assigned a value but never used.","'status' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'openMenuStatus' is assigned a value but never used.","'closeMenuStatus' is assigned a value but never used.","'changeStatus' is assigned a value but never used.","'transform' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'Info' is defined but never used.","'Typography' is defined but never used.","'clsx' is defined but never used.","'useState' is defined but never used.","'connect' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["2735"],["2736"],["2737"],"'Badge' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'courseData' is assigned a value but never used.","no-dupe-keys","Duplicate key 'assessment_overview'.","ObjectExpression","unexpected",["2738"],"React Hook useEffect has missing dependencies: 'props' and 'setValues'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2739"],["2740"],"'thumbnail' is assigned a value but never used.","'short_name' is assigned a value but never used.","'start_date' is assigned a value but never used.","'end_date' is assigned a value but never used.","'handleClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["2741"],["2742"],["2743"],["2744"],["2745"],["2746"],["2747"],["2748"],"'setValues' is assigned a value but never used.","'AddIcon' is defined but never used.",["2749"],"'useStyles' is assigned a value but never used.",["2750"],["2751"],["2752"],"'classsubjectsURL' is defined but never used.","'classstudentsURL' is defined but never used.",["2753"],"'HowToRegIcon' is defined but never used.",["2754"],["2755"],["2756"],["2757"],["2758"],["2759"],["2760"],["2761"],["2762"],["2763"],["2764"],["2765"],["2766"],["2767"],["2768"],"'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.",["2769"],"'Edit' is defined but never used.","'four' is defined but never used.","'five' is defined but never used.",["2770"],["2771"],["2772"],["2773"],["2774"],"'BlogBar' is defined but never used.","'data' is assigned a value but never used.","'thumb1' is defined but never used.","'thumb3' is defined but never used.","'thumb5' is defined but never used.","'thumb2' is defined but never used.","'thumb4' is defined but never used.","'link' is defined but never used.","'imgApi' is defined but never used.",["2775"],["2776"],["2777"],["2778"],["2779"],["2780"],["2781"],["2782"],["2783"],["2784"],["2785"],["2786"],["2787"],["2788"],["2789"],"no-global-assign","no-unsafe-negation",{"desc":"2790","fix":"2791"},{"desc":"2790","fix":"2792"},{"desc":"2790","fix":"2793"},{"desc":"2790","fix":"2794"},{"desc":"2790","fix":"2795"},{"desc":"2790","fix":"2796"},{"desc":"2790","fix":"2797"},{"desc":"2790","fix":"2798"},{"desc":"2790","fix":"2799"},{"desc":"2790","fix":"2800"},{"desc":"2790","fix":"2801"},{"desc":"2790","fix":"2802"},{"desc":"2803","fix":"2804"},{"desc":"2790","fix":"2805"},{"desc":"2790","fix":"2806"},{"desc":"2790","fix":"2807"},{"desc":"2790","fix":"2808"},{"desc":"2790","fix":"2809"},{"desc":"2790","fix":"2810"},{"desc":"2790","fix":"2811"},{"desc":"2790","fix":"2812"},{"desc":"2790","fix":"2813"},{"desc":"2790","fix":"2814"},{"desc":"2790","fix":"2815"},{"desc":"2790","fix":"2816"},{"desc":"2790","fix":"2817"},{"desc":"2790","fix":"2818"},{"desc":"2790","fix":"2819"},{"desc":"2790","fix":"2820"},{"desc":"2790","fix":"2821"},{"desc":"2790","fix":"2822"},{"desc":"2790","fix":"2823"},{"desc":"2790","fix":"2824"},{"desc":"2790","fix":"2825"},{"desc":"2826","fix":"2827"},{"desc":"2826","fix":"2828"},{"desc":"2826","fix":"2829"},{"desc":"2826","fix":"2830"},{"desc":"2826","fix":"2831"},{"desc":"2832","fix":"2833"},{"desc":"2832","fix":"2834"},{"desc":"2832","fix":"2835"},{"desc":"2832","fix":"2836"},{"desc":"2837","fix":"2838"},{"desc":"2837","fix":"2839"},{"desc":"2840","fix":"2841"},{"desc":"2840","fix":"2842"},{"desc":"2840","fix":"2843"},{"desc":"2840","fix":"2844"},{"desc":"2840","fix":"2845"},{"desc":"2840","fix":"2846"},{"desc":"2837","fix":"2847"},{"desc":"2840","fix":"2848"},{"desc":"2840","fix":"2849"},{"desc":"2837","fix":"2850"},{"desc":"2832","fix":"2851"},{"desc":"2832","fix":"2852"},{"desc":"2837","fix":"2853"},{"desc":"2837","fix":"2854"},{"desc":"2840","fix":"2855"},{"desc":"2840","fix":"2856"},{"desc":"2837","fix":"2857"},{"desc":"2837","fix":"2858"},{"desc":"2840","fix":"2859"},{"desc":"2840","fix":"2860"},{"desc":"2840","fix":"2861"},{"desc":"2840","fix":"2862"},{"desc":"2837","fix":"2863"},{"desc":"2837","fix":"2864"},{"desc":"2837","fix":"2865"},{"desc":"2832","fix":"2866"},{"desc":"2837","fix":"2867"},{"desc":"2832","fix":"2868"},{"desc":"2837","fix":"2869"},{"desc":"2832","fix":"2870"},{"desc":"2832","fix":"2871"},{"desc":"2837","fix":"2872"},{"desc":"2832","fix":"2873"},{"desc":"2832","fix":"2874"},{"desc":"2790","fix":"2875"},{"desc":"2790","fix":"2876"},{"desc":"2790","fix":"2877"},{"desc":"2790","fix":"2878"},{"desc":"2837","fix":"2879"},{"desc":"2826","fix":"2880"},{"desc":"2832","fix":"2881"},{"desc":"2826","fix":"2882"},{"desc":"2826","fix":"2883"},{"desc":"2826","fix":"2884"},{"desc":"2832","fix":"2885"},{"desc":"2832","fix":"2886"},{"desc":"2832","fix":"2887"},{"desc":"2826","fix":"2888"},{"desc":"2837","fix":"2889"},"Update the dependencies array to be: [props]",{"range":"2890","text":"2891"},{"range":"2892","text":"2891"},{"range":"2893","text":"2891"},{"range":"2894","text":"2891"},{"range":"2895","text":"2891"},{"range":"2896","text":"2891"},{"range":"2897","text":"2891"},{"range":"2898","text":"2891"},{"range":"2899","text":"2891"},{"range":"2900","text":"2891"},{"range":"2901","text":"2891"},{"range":"2902","text":"2891"},"Update the dependencies array to be: [props, token]",{"range":"2903","text":"2904"},{"range":"2905","text":"2891"},{"range":"2906","text":"2891"},{"range":"2907","text":"2891"},{"range":"2908","text":"2891"},{"range":"2909","text":"2891"},{"range":"2910","text":"2891"},{"range":"2911","text":"2891"},{"range":"2912","text":"2891"},{"range":"2913","text":"2891"},{"range":"2914","text":"2891"},{"range":"2915","text":"2891"},{"range":"2916","text":"2891"},{"range":"2917","text":"2891"},{"range":"2918","text":"2891"},{"range":"2919","text":"2891"},{"range":"2920","text":"2891"},{"range":"2921","text":"2891"},{"range":"2922","text":"2891"},{"range":"2923","text":"2891"},{"range":"2924","text":"2891"},{"range":"2925","text":"2891"},"Update the dependencies array to be: [id, props]",{"range":"2926","text":"2927"},{"range":"2928","text":"2927"},{"range":"2929","text":"2927"},{"range":"2930","text":"2927"},{"range":"2931","text":"2927"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"2932","text":"2933"},{"range":"2934","text":"2933"},{"range":"2935","text":"2933"},{"range":"2936","text":"2933"},"Update the dependencies array to be: [props, recordForEdit, setValues]",{"range":"2937","text":"2938"},{"range":"2939","text":"2938"},"Update the dependencies array to be: [id]",{"range":"2940","text":"2941"},{"range":"2942","text":"2941"},{"range":"2943","text":"2941"},{"range":"2944","text":"2941"},{"range":"2945","text":"2941"},{"range":"2946","text":"2941"},{"range":"2947","text":"2938"},{"range":"2948","text":"2941"},{"range":"2949","text":"2941"},{"range":"2950","text":"2938"},{"range":"2951","text":"2933"},{"range":"2952","text":"2933"},{"range":"2953","text":"2938"},{"range":"2954","text":"2938"},{"range":"2955","text":"2941"},{"range":"2956","text":"2941"},{"range":"2957","text":"2938"},{"range":"2958","text":"2938"},{"range":"2959","text":"2941"},{"range":"2960","text":"2941"},{"range":"2961","text":"2941"},{"range":"2962","text":"2941"},{"range":"2963","text":"2938"},{"range":"2964","text":"2938"},{"range":"2965","text":"2938"},{"range":"2966","text":"2933"},{"range":"2967","text":"2938"},{"range":"2968","text":"2933"},{"range":"2969","text":"2938"},{"range":"2970","text":"2933"},{"range":"2971","text":"2933"},{"range":"2972","text":"2938"},{"range":"2973","text":"2933"},{"range":"2974","text":"2933"},{"range":"2975","text":"2891"},{"range":"2976","text":"2891"},{"range":"2977","text":"2891"},{"range":"2978","text":"2891"},{"range":"2979","text":"2938"},{"range":"2980","text":"2927"},{"range":"2981","text":"2933"},{"range":"2982","text":"2927"},{"range":"2983","text":"2927"},{"range":"2984","text":"2927"},{"range":"2985","text":"2933"},{"range":"2986","text":"2933"},{"range":"2987","text":"2933"},{"range":"2988","text":"2927"},{"range":"2989","text":"2938"},[1742,1744],"[props]",[1872,1874],[1760,1762],[1920,1922],[1684,1686],[1700,1702],[1820,1822],[1773,1775],[1816,1818],[1684,1686],[1809,1811],[1802,1804],[1877,1879],"[props, token]",[1797,1799],[1870,1872],[1793,1795],[1894,1896],[1889,1891],[1894,1896],[1890,1892],[1971,1973],[1984,1986],[1915,1917],[1987,1989],[1933,1935],[1882,1884],[1800,1802],[1905,1907],[1961,1963],[1582,1584],[1813,1815],[1811,1813],[1810,1812],[1812,1814],[1866,1868],"[id, props]",[1802,1804],[1795,1797],[1755,1757],[1755,1757],[1849,1864],"[recordForEdit, setValues]",[1849,1864],[1707,1722],[2079,2094],[2396,2411],"[props, recordForEdit, setValues]",[2522,2537],[2243,2245],"[id]",[1594,1596],[1604,1606],[1524,1526],[1613,1615],[2243,2245],[2578,2593],[2346,2348],[2270,2272],[1883,1898],[1572,1587],[1572,1587],[1763,1778],[2578,2593],[2346,2348],[2270,2272],[1906,1921],[1946,1961],[1524,1526],[1604,1606],[1594,1596],[1613,1615],[2190,2205],[1763,1778],[2514,2529],[1463,1478],[1909,1924],[1599,1614],[3700,3715],[1598,1613],[1600,1615],[2635,2650],[1715,1730],[1726,1741],[1773,1775],[1773,1775],[1774,1776],[1770,1772],[2522,2537],[1774,1776],[2079,2094],[1755,1757],[1755,1757],[1795,1797],[1849,1864],[1707,1722],[1849,1864],[1866,1868],[2396,2411]]